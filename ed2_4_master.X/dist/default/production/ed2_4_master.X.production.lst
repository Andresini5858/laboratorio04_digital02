

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 13:01:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     0007                     	;# 
   101     0008                     	;# 
   102     0009                     	;# 
   103     000A                     	;# 
   104     000B                     	;# 
   105     000C                     	;# 
   106     000D                     	;# 
   107     000E                     	;# 
   108     000E                     	;# 
   109     000F                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0014                     	;# 
   115     0015                     	;# 
   116     0015                     	;# 
   117     0016                     	;# 
   118     0017                     	;# 
   119     0018                     	;# 
   120     0019                     	;# 
   121     001A                     	;# 
   122     001B                     	;# 
   123     001B                     	;# 
   124     001C                     	;# 
   125     001D                     	;# 
   126     001E                     	;# 
   127     001F                     	;# 
   128     0081                     	;# 
   129     0085                     	;# 
   130     0086                     	;# 
   131     0087                     	;# 
   132     0088                     	;# 
   133     0089                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     008E                     	;# 
   137     008F                     	;# 
   138     0090                     	;# 
   139     0091                     	;# 
   140     0092                     	;# 
   141     0093                     	;# 
   142     0093                     	;# 
   143     0093                     	;# 
   144     0094                     	;# 
   145     0095                     	;# 
   146     0096                     	;# 
   147     0097                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009A                     	;# 
   151     009B                     	;# 
   152     009C                     	;# 
   153     009D                     	;# 
   154     009E                     	;# 
   155     009F                     	;# 
   156     0105                     	;# 
   157     0107                     	;# 
   158     0108                     	;# 
   159     0109                     	;# 
   160     010C                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     0185                     	;# 
   166     0187                     	;# 
   167     0188                     	;# 
   168     0189                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     008F                     	;# 
   216     0090                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0097                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009A                     	;# 
   229     009B                     	;# 
   230     009C                     	;# 
   231     009D                     	;# 
   232     009E                     	;# 
   233     009F                     	;# 
   234     0105                     	;# 
   235     0107                     	;# 
   236     0108                     	;# 
   237     0109                     	;# 
   238     010C                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     0185                     	;# 
   244     0187                     	;# 
   245     0188                     	;# 
   246     0189                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     000E                     	;# 
   264     000E                     	;# 
   265     000F                     	;# 
   266     0010                     	;# 
   267     0011                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0015                     	;# 
   272     0015                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001B                     	;# 
   280     001C                     	;# 
   281     001D                     	;# 
   282     001E                     	;# 
   283     001F                     	;# 
   284     0081                     	;# 
   285     0085                     	;# 
   286     0086                     	;# 
   287     0087                     	;# 
   288     0088                     	;# 
   289     0089                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     008F                     	;# 
   294     0090                     	;# 
   295     0091                     	;# 
   296     0092                     	;# 
   297     0093                     	;# 
   298     0093                     	;# 
   299     0093                     	;# 
   300     0094                     	;# 
   301     0095                     	;# 
   302     0096                     	;# 
   303     0097                     	;# 
   304     0098                     	;# 
   305     0099                     	;# 
   306     009A                     	;# 
   307     009B                     	;# 
   308     009C                     	;# 
   309     009D                     	;# 
   310     009E                     	;# 
   311     009F                     	;# 
   312     0105                     	;# 
   313     0107                     	;# 
   314     0108                     	;# 
   315     0109                     	;# 
   316     010C                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     0185                     	;# 
   322     0187                     	;# 
   323     0188                     	;# 
   324     0189                     	;# 
   325     018C                     	;# 
   326     018D                     	;# 
   327     0000                     	;# 
   328     0001                     	;# 
   329     0002                     	;# 
   330     0003                     	;# 
   331     0004                     	;# 
   332     0005                     	;# 
   333     0006                     	;# 
   334     0007                     	;# 
   335     0008                     	;# 
   336     0009                     	;# 
   337     000A                     	;# 
   338     000B                     	;# 
   339     000C                     	;# 
   340     000D                     	;# 
   341     000E                     	;# 
   342     000E                     	;# 
   343     000F                     	;# 
   344     0010                     	;# 
   345     0011                     	;# 
   346     0012                     	;# 
   347     0013                     	;# 
   348     0014                     	;# 
   349     0015                     	;# 
   350     0015                     	;# 
   351     0016                     	;# 
   352     0017                     	;# 
   353     0018                     	;# 
   354     0019                     	;# 
   355     001A                     	;# 
   356     001B                     	;# 
   357     001B                     	;# 
   358     001C                     	;# 
   359     001D                     	;# 
   360     001E                     	;# 
   361     001F                     	;# 
   362     0081                     	;# 
   363     0085                     	;# 
   364     0086                     	;# 
   365     0087                     	;# 
   366     0088                     	;# 
   367     0089                     	;# 
   368     008C                     	;# 
   369     008D                     	;# 
   370     008E                     	;# 
   371     008F                     	;# 
   372     0090                     	;# 
   373     0091                     	;# 
   374     0092                     	;# 
   375     0093                     	;# 
   376     0093                     	;# 
   377     0093                     	;# 
   378     0094                     	;# 
   379     0095                     	;# 
   380     0096                     	;# 
   381     0097                     	;# 
   382     0098                     	;# 
   383     0099                     	;# 
   384     009A                     	;# 
   385     009B                     	;# 
   386     009C                     	;# 
   387     009D                     	;# 
   388     009E                     	;# 
   389     009F                     	;# 
   390     0105                     	;# 
   391     0107                     	;# 
   392     0108                     	;# 
   393     0109                     	;# 
   394     010C                     	;# 
   395     010C                     	;# 
   396     010D                     	;# 
   397     010E                     	;# 
   398     010F                     	;# 
   399     0185                     	;# 
   400     0187                     	;# 
   401     0188                     	;# 
   402     0189                     	;# 
   403     018C                     	;# 
   404     018D                     	;# 
   405                           
   406                           	psect	strings
   407     0638                     __pstrings:
   408     0638                     stringtab:
   409     0638                     __stringtab:
   410                           
   411                           ;	String table - string pointers are 1 byte each
   412     0638  1BFF               	btfsc	btemp+1,7
   413     0639  2E42               	ljmp	stringcode
   414     063A  1383               	bcf	3,7
   415     063B  187F               	btfsc	btemp+1,0
   416     063C  1783               	bsf	3,7
   417     063D  0800               	movf	0,w
   418     063E  0A84               	incf	4,f
   419     063F  1903               	skipnz
   420     0640  0AFF               	incf	btemp+1,f
   421     0641  0008               	return
   422     0642                     stringcode:
   423     0642                     stringdir:
   424     0642  3006               	movlw	high stringdir
   425     0643  008A               	movwf	10
   426     0644  0804               	movf	4,w
   427     0645  0A84               	incf	4,f
   428     0646  0782               	addwf	2,f
   429     0647                     __stringbase:
   430     0647  3400               	retlw	0
   431     0648                     __end_of__stringtab:
   432     0648                     _dpowers:
   433     0648  3401               	retlw	1
   434     0649  3400               	retlw	0
   435     064A  340A               	retlw	10
   436     064B  3400               	retlw	0
   437     064C  3464               	retlw	100
   438     064D  3400               	retlw	0
   439     064E  34E8               	retlw	232
   440     064F  3403               	retlw	3
   441     0650  3410               	retlw	16
   442     0651  3427               	retlw	39
   443     0652                     __end_of_dpowers:
   444     0008                     _PORTDbits	set	8
   445     0008                     _PORTD	set	8
   446     0007                     _PORTC	set	7
   447     0006                     _PORTB	set	6
   448     0006                     _PORTBbits	set	6
   449     000B                     _INTCONbits	set	11
   450     0013                     _SSPBUF	set	19
   451     000C                     _PIR1bits	set	12
   452     0014                     _SSPCON	set	20
   453     008F                     _OSCCONbits	set	143
   454     0095                     _WPUBbits	set	149
   455     0096                     _IOCBbits	set	150
   456     0081                     _OPTION_REGbits	set	129
   457     0088                     _TRISD	set	136
   458     0086                     _TRISB	set	134
   459     0091                     _SSPCON2bits	set	145
   460     0093                     _SSPADD	set	147
   461     0091                     _SSPCON2	set	145
   462     0094                     _SSPSTAT	set	148
   463     0087                     _TRISCbits	set	135
   464     0189                     _ANSELH	set	393
   465     0188                     _ANSEL	set	392
   466     0652                     STR_3:
   467     0652  3425               	retlw	37	;'%'
   468     0653  3430               	retlw	48	;'0'
   469     0654  3432               	retlw	50	;'2'
   470     0655  3475               	retlw	117	;'u'
   471     0656  342F               	retlw	47	;'/'
   472     0657  3425               	retlw	37	;'%'
   473     0658  3430               	retlw	48	;'0'
   474     0659  3432               	retlw	50	;'2'
   475     065A  3475               	retlw	117	;'u'
   476     065B  342F               	retlw	47	;'/'
   477     065C  3432               	retlw	50	;'2'
   478     065D  3430               	retlw	48	;'0'
   479     065E  3425               	retlw	37	;'%'
   480     065F  3430               	retlw	48	;'0'
   481     0660  3432               	retlw	50	;'2'
   482     0661  3475               	retlw	117	;'u'
   483     0662  3420               	retlw	32	;' '
   484     0663  3400               	retlw	0
   485     0664                     STR_2:
   486     0664  3425               	retlw	37	;'%'
   487     0665  3430               	retlw	48	;'0'
   488     0666  3432               	retlw	50	;'2'
   489     0667  3475               	retlw	117	;'u'
   490     0668  343A               	retlw	58	;':'
   491     0669  3425               	retlw	37	;'%'
   492     066A  3430               	retlw	48	;'0'
   493     066B  3432               	retlw	50	;'2'
   494     066C  3475               	retlw	117	;'u'
   495     066D  343A               	retlw	58	;':'
   496     066E  3425               	retlw	37	;'%'
   497     066F  3430               	retlw	48	;'0'
   498     0670  3432               	retlw	50	;'2'
   499     0671  3475               	retlw	117	;'u'
   500     0672  3420               	retlw	32	;' '
   501     0673  3400               	retlw	0
   502     0674                     STR_11:
   503     0674  3425               	retlw	37	;'%'
   504     0675  3464               	retlw	100	;'d'
   505     0676  3420               	retlw	32	;' '
   506     0677  3400               	retlw	0
   507     0678                     STR_1:
   508     0678  3453               	retlw	83	;'S'
   509     0679  3431               	retlw	49	;'1'
   510     067A  343A               	retlw	58	;':'
   511     067B  3400               	retlw	0
   512     067C                     STR_10:
   513     067C  3441               	retlw	65	;'A'
   514     067D  3420               	retlw	32	;' '
   515     067E  3400               	retlw	0
   516     067F                     STR_6:
   517     067F  3444               	retlw	68	;'D'
   518     0680  3420               	retlw	32	;' '
   519     0681  3400               	retlw	0
   520     0682                     STR_8:
   521     0682  344D               	retlw	77	;'M'
   522     0683  3420               	retlw	32	;' '
   523     0684  3400               	retlw	0
   524     0685                     STR_4:
   525     0685  3454               	retlw	84	;'T'
   526     0686  3400               	retlw	0
   527     0652                     
   528                           	psect	cinit
   529     000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532     000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   536     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   537     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK0
   540     0012  1383               	bcf	3,7	;select IRP bank0
   541     0013  3049               	movlw	low __pbssBANK0
   542     0014  0084               	movwf	4
   543     0015  3065               	movlw	low (__pbssBANK0+28)
   544     0016  120A  158A  244D  120A  118A  	fcall	clear_ram0
   545     001B                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548     001B                     __end_of__initialization:
   549     001B  0183               	clrf	3
   550     001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssCOMMON
   553     0077                     __pbssCOMMON:
   554     0077                     _temporal:
   555     0077                     	ds	1
   556     0078                     _dow:
   557     0078                     	ds	1
   558     0079                     _bandera:
   559     0079                     	ds	1
   560                           
   561                           	psect	bssBANK0
   562     0049                     __pbssBANK0:
   563     0049                     _voltaje:
   564     0049                     	ds	1
   565     004A                     _selector:
   566     004A                     	ds	1
   567     004B                     _buffer:
   568     004B                     	ds	20
   569     005F                     _ano:
   570     005F                     	ds	1
   571     0060                     _mes:
   572     0060                     	ds	1
   573     0061                     _dia:
   574     0061                     	ds	1
   575     0062                     _hora:
   576     0062                     	ds	1
   577     0063                     _minuto:
   578     0063                     	ds	1
   579     0064                     _segundo:
   580     0064                     	ds	1
   581                           
   582                           	psect	clrtext
   583     0C4D                     clear_ram0:	
   584                           ;	Called with FSR containing the base address, and
   585                           ;	W with the last address+1
   586                           
   587     0C4D  0064               	clrwdt	;clear the watchdog before getting into this loop
   588     0C4E                     clrloop0:
   589     0C4E  0180               	clrf	0	;clear RAM location pointed to by FSR
   590     0C4F  0A84               	incf	4,f	;increment pointer
   591     0C50  0604               	xorwf	4,w	;XOR with final address
   592     0C51  1903               	btfsc	3,2	;have we reached the end yet?
   593     0C52  3400               	retlw	0	;all done for this memory range, return
   594     0C53  0604               	xorwf	4,w	;XOR again to restore value
   595     0C54  2C4E               	goto	clrloop0	;do the next byte
   596                           
   597                           	psect	cstackCOMMON
   598     0070                     __pcstackCOMMON:
   599     0070                     ?_isdigit:
   600     0070                     ?_setup:	
   601                           ; 1 bit 
   602                           
   603     0070                     ?_Lcd_Init:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_Lcd_Clear:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_Set_sec:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_Set_day:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_Set_hour:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_Set_day_week:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_Set_month:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_Set_year:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_Slave1:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_Bcd_to_Dec:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Dec_to_Bcd:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_I2C_Init_Master:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_I2C_Start:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_I2C_Stop:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_I2C_Restart:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_I2C_Nack:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_I2C_Read:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_isr:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_Read:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_Lcd_Port:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_Lcd_Cmd:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_Lcd_Write_Char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?i1_I2C_Start:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??i1_I2C_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?i1_I2C_Stop:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ??i1_I2C_Stop:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ??i1_I2C_Write:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?i1_Set_day:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?i1_Set_month:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?i1_Set_year:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?i1_Dec_to_Bcd:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ??i1_Dec_to_Bcd:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_I2C_Write:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?i1_I2C_Write:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     0070                     i1I2C_Write@data:	
   709                           ; 2 bytes @ 0x0
   710                           
   711     0070                     i1Dec_to_Bcd@dec_number:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716     0070                     	ds	1
   717     0071                     i1Dec_to_Bcd@bcd_number:
   718                           
   719                           ; 1 bytes @ 0x1
   720     0071                     	ds	1
   721     0072                     ??i1_Set_day:
   722     0072                     ??i1_Set_month:	
   723                           ; 1 bytes @ 0x2
   724                           
   725     0072                     ??i1_Set_year:	
   726                           ; 1 bytes @ 0x2
   727                           
   728     0072                     i1Set_day@day:	
   729                           ; 1 bytes @ 0x2
   730                           
   731     0072                     i1Set_month@month:	
   732                           ; 1 bytes @ 0x2
   733                           
   734     0072                     i1Set_year@year:	
   735                           ; 1 bytes @ 0x2
   736                           
   737                           
   738                           ; 1 bytes @ 0x2
   739     0072                     	ds	1
   740     0073                     ??_isr:
   741                           
   742                           ; 1 bytes @ 0x3
   743     0073                     	ds	4
   744                           
   745                           	psect	cstackBANK0
   746     0020                     __pcstackBANK0:
   747     0020                     ??_Dec_to_Bcd:
   748     0020                     ??_isdigit:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0020                     ??_I2C_Init_Master:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0020                     ??_I2C_Start:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0020                     ??_I2C_Stop:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0020                     ??_I2C_Restart:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0020                     ??_I2C_Nack:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0020                     ??_I2C_Write:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0020                     ??_I2C_Read:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0020                     ??_Lcd_Port:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0020                     ?___bmul:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0020                     ?___wmul:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0020                     ?___lwdiv:	
   782                           ; 2 bytes @ 0x0
   783                           
   784     0020                     I2C_Init_Master@sp_i2c:	
   785                           ; 2 bytes @ 0x0
   786                           
   787     0020                     I2C_Write@data:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0020                     Dec_to_Bcd@dec_number:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0020                     Lcd_Port@a:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0020                     ___bmul@multiplicand:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0020                     _isdigit$1027:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0020                     ___wmul@multiplier:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0020                     ___lwdiv@divisor:	
   806                           ; 2 bytes @ 0x0
   807                           
   808                           
   809                           ; 2 bytes @ 0x0
   810     0020                     	ds	1
   811     0021                     ??_setup:
   812     0021                     ??_Read:	
   813                           ; 1 bytes @ 0x1
   814                           
   815     0021                     ??_Lcd_Cmd:	
   816                           ; 1 bytes @ 0x1
   817                           
   818     0021                     ??_Lcd_Write_Char:	
   819                           ; 1 bytes @ 0x1
   820                           
   821     0021                     ??___bmul:	
   822                           ; 1 bytes @ 0x1
   823                           
   824     0021                     Dec_to_Bcd@bcd_number:	
   825                           ; 1 bytes @ 0x1
   826                           
   827     0021                     isdigit@c:	
   828                           ; 1 bytes @ 0x1
   829                           
   830                           
   831                           ; 1 bytes @ 0x1
   832     0021                     	ds	1
   833     0022                     ??_Set_sec:
   834     0022                     ??_Set_day:	
   835                           ; 1 bytes @ 0x2
   836                           
   837     0022                     ??_Set_hour:	
   838                           ; 1 bytes @ 0x2
   839                           
   840     0022                     ??_Set_day_week:	
   841                           ; 1 bytes @ 0x2
   842                           
   843     0022                     ??_Set_month:	
   844                           ; 1 bytes @ 0x2
   845                           
   846     0022                     ??_Set_year:	
   847                           ; 1 bytes @ 0x2
   848                           
   849     0022                     Read@address:	
   850                           ; 1 bytes @ 0x2
   851                           
   852     0022                     Set_sec@sec:	
   853                           ; 1 bytes @ 0x2
   854                           
   855     0022                     Set_hour@hour:	
   856                           ; 1 bytes @ 0x2
   857                           
   858     0022                     Set_day_week@day_week:	
   859                           ; 1 bytes @ 0x2
   860                           
   861     0022                     Set_day@day:	
   862                           ; 1 bytes @ 0x2
   863                           
   864     0022                     Set_month@month:	
   865                           ; 1 bytes @ 0x2
   866                           
   867     0022                     Set_year@year:	
   868                           ; 1 bytes @ 0x2
   869                           
   870     0022                     Lcd_Write_Char@temp:	
   871                           ; 1 bytes @ 0x2
   872                           
   873     0022                     ___bmul@product:	
   874                           ; 1 bytes @ 0x2
   875                           
   876     0022                     ___wmul@multiplicand:	
   877                           ; 1 bytes @ 0x2
   878                           
   879     0022                     ___lwdiv@dividend:	
   880                           ; 2 bytes @ 0x2
   881                           
   882                           
   883                           ; 2 bytes @ 0x2
   884     0022                     	ds	1
   885     0023                     Read@dato:
   886     0023                     Lcd_Cmd@a:	
   887                           ; 1 bytes @ 0x3
   888                           
   889     0023                     Lcd_Write_Char@y:	
   890                           ; 1 bytes @ 0x3
   891                           
   892     0023                     ___bmul@multiplier:	
   893                           ; 1 bytes @ 0x3
   894                           
   895                           
   896                           ; 1 bytes @ 0x3
   897     0023                     	ds	1
   898     0024                     ??_Lcd_Init:
   899     0024                     ??_Lcd_Clear:	
   900                           ; 1 bytes @ 0x4
   901                           
   902     0024                     ?_Lcd_Set_Cursor:	
   903                           ; 1 bytes @ 0x4
   904                           
   905     0024                     ??_Bcd_to_Dec:	
   906                           ; 1 bytes @ 0x4
   907                           
   908     0024                     ??___wmul:	
   909                           ; 1 bytes @ 0x4
   910                           
   911     0024                     ??___lwdiv:	
   912                           ; 1 bytes @ 0x4
   913                           
   914     0024                     Lcd_Set_Cursor@b:	
   915                           ; 1 bytes @ 0x4
   916                           
   917     0024                     Lcd_Write_Char@a:	
   918                           ; 1 bytes @ 0x4
   919                           
   920     0024                     ___wmul@product:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 2 bytes @ 0x4
   925     0024                     	ds	1
   926     0025                     ??_Lcd_Set_Cursor:
   927     0025                     ?_Lcd_Write_String:	
   928                           ; 1 bytes @ 0x5
   929                           
   930     0025                     Lcd_Write_String@a:	
   931                           ; 1 bytes @ 0x5
   932                           
   933     0025                     ___lwdiv@quotient:	
   934                           ; 2 bytes @ 0x5
   935                           
   936                           
   937                           ; 2 bytes @ 0x5
   938     0025                     	ds	1
   939     0026                     Bcd_to_Dec@dec:
   940     0026                     Lcd_Set_Cursor@a:	
   941                           ; 1 bytes @ 0x6
   942                           
   943                           
   944                           ; 1 bytes @ 0x6
   945     0026                     	ds	1
   946     0027                     ??_Lcd_Write_String:
   947     0027                     Bcd_to_Dec@bcd:	
   948                           ; 1 bytes @ 0x7
   949                           
   950     0027                     Lcd_Set_Cursor@z:	
   951                           ; 1 bytes @ 0x7
   952                           
   953     0027                     ___lwdiv@counter:	
   954                           ; 1 bytes @ 0x7
   955                           
   956                           
   957                           ; 1 bytes @ 0x7
   958     0027                     	ds	1
   959     0028                     ?_Read_Time:
   960     0028                     ?_Read_Fecha:	
   961                           ; 1 bytes @ 0x8
   962                           
   963     0028                     ?___lwmod:	
   964                           ; 1 bytes @ 0x8
   965                           
   966     0028                     Read_Time@m:	
   967                           ; 2 bytes @ 0x8
   968                           
   969     0028                     Read_Fecha@mo:	
   970                           ; 1 bytes @ 0x8
   971                           
   972     0028                     Lcd_Set_Cursor@y:	
   973                           ; 1 bytes @ 0x8
   974                           
   975     0028                     ___lwmod@divisor:	
   976                           ; 1 bytes @ 0x8
   977                           
   978                           
   979                           ; 2 bytes @ 0x8
   980     0028                     	ds	1
   981     0029                     Read_Time@h:
   982     0029                     Read_Fecha@y:	
   983                           ; 1 bytes @ 0x9
   984                           
   985     0029                     Lcd_Set_Cursor@temp:	
   986                           ; 1 bytes @ 0x9
   987                           
   988                           
   989                           ; 1 bytes @ 0x9
   990     0029                     	ds	1
   991     002A                     ??_Read_Time:
   992     002A                     ??_Read_Fecha:	
   993                           ; 1 bytes @ 0xA
   994                           
   995     002A                     Read_Time@s:	
   996                           ; 1 bytes @ 0xA
   997                           
   998     002A                     Read_Fecha@d:	
   999                           ; 1 bytes @ 0xA
  1000                           
  1001     002A                     Lcd_Write_String@i:	
  1002                           ; 1 bytes @ 0xA
  1003                           
  1004     002A                     ___lwmod@dividend:	
  1005                           ; 2 bytes @ 0xA
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0xA
  1009     002A                     	ds	2
  1010     002C                     ??___lwmod:
  1011                           
  1012                           ; 1 bytes @ 0xC
  1013     002C                     	ds	1
  1014     002D                     ___lwmod@counter:
  1015                           
  1016                           ; 1 bytes @ 0xD
  1017     002D                     	ds	1
  1018     002E                     ?_sprintf:
  1019     002E                     sprintf@f:	
  1020                           ; 2 bytes @ 0xE
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xE
  1024     002E                     	ds	7
  1025     0035                     ??_sprintf:
  1026                           
  1027                           ; 1 bytes @ 0x15
  1028     0035                     	ds	3
  1029     0038                     sprintf@prec:
  1030                           
  1031                           ; 1 bytes @ 0x18
  1032     0038                     	ds	1
  1033     0039                     sprintf@ap:
  1034                           
  1035                           ; 1 bytes @ 0x19
  1036     0039                     	ds	1
  1037     003A                     sprintf@val:
  1038                           
  1039                           ; 2 bytes @ 0x1A
  1040     003A                     	ds	2
  1041     003C                     sprintf@flag:
  1042                           
  1043                           ; 1 bytes @ 0x1C
  1044     003C                     	ds	1
  1045     003D                     sprintf@width:
  1046                           
  1047                           ; 2 bytes @ 0x1D
  1048     003D                     	ds	2
  1049     003F                     sprintf@c:
  1050                           
  1051                           ; 1 bytes @ 0x1F
  1052     003F                     	ds	1
  1053     0040                     sprintf@sp:
  1054                           
  1055                           ; 1 bytes @ 0x20
  1056     0040                     	ds	1
  1057     0041                     ??_Slave1:
  1058                           
  1059                           ; 1 bytes @ 0x21
  1060     0041                     	ds	2
  1061     0043                     ??_main:
  1062                           
  1063                           ; 1 bytes @ 0x23
  1064     0043                     	ds	6
  1065                           
  1066                           	psect	maintext
  1067     001F                     __pmaintext:	
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 60 in file "main_master.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : B00/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       6       0       0       0
  1090 ;;      Totals:         0       6       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels required when called: 7
  1093 ;; This function calls:
  1094 ;;		_Lcd_Clear
  1095 ;;		_Lcd_Init
  1096 ;;		_Lcd_Set_Cursor
  1097 ;;		_Lcd_Write_String
  1098 ;;		_Read_Fecha
  1099 ;;		_Read_Time
  1100 ;;		_Set_day
  1101 ;;		_Set_day_week
  1102 ;;		_Set_hour
  1103 ;;		_Set_month
  1104 ;;		_Set_sec
  1105 ;;		_Set_year
  1106 ;;		_Slave1
  1107 ;;		_setup
  1108 ;;		_sprintf
  1109 ;; This function is called by:
  1110 ;;		Startup code after reset
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     001F                     _main:	
  1115                           ;psect for function _main
  1116                           
  1117     001F                     l3131:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1120                           
  1121                           
  1122                           ;main_master.c: 61:     setup();
  1123     001F  120A  158A  25C0  120A  118A  	fcall	_setup
  1124                           
  1125                           ;main_master.c: 62:     Lcd_Init();
  1126     0024  120A  118A  25D3  120A  118A  	fcall	_Lcd_Init
  1127                           
  1128                           ;main_master.c: 63:     Lcd_Clear();
  1129     0029  120A  158A  249D  120A  118A  	fcall	_Lcd_Clear
  1130                           
  1131                           ;main_master.c: 64:     Lcd_Set_Cursor(1,1);
  1132     002E  1283               	bcf	3,5	;RP0=0, select bank0
  1133     002F  1303               	bcf	3,6	;RP1=0, select bank0
  1134     0030  01A4               	clrf	Lcd_Set_Cursor@b
  1135     0031  0AA4               	incf	Lcd_Set_Cursor@b,f
  1136     0032  3001               	movlw	1
  1137     0033  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1138     0038                     l3133:
  1139                           
  1140                           ;main_master.c: 65:     Lcd_Write_String("S1:");
  1141     0038  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1142     0039  1283               	bcf	3,5	;RP0=0, select bank0
  1143     003A  1303               	bcf	3,6	;RP1=0, select bank0
  1144     003B  00A5               	movwf	Lcd_Write_String@a
  1145     003C  3080               	movlw	128
  1146     003D  00A6               	movwf	Lcd_Write_String@a+1
  1147     003E  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1148     0043                     l3135:
  1149                           
  1150                           ;main_master.c: 66:     Set_sec(0);
  1151     0043  3000               	movlw	0
  1152     0044  120A  158A  2681  120A  118A  	fcall	_Set_sec
  1153     0049                     l3137:
  1154                           
  1155                           ;main_master.c: 67:     Set_day(0);
  1156     0049  3000               	movlw	0
  1157     004A  120A  158A  25E5  120A  118A  	fcall	_Set_day
  1158     004F                     l3139:
  1159                           
  1160                           ;main_master.c: 68:     Set_hour(12);
  1161     004F  300C               	movlw	12
  1162     0050  120A  158A  2633  120A  118A  	fcall	_Set_hour
  1163     0055                     l3141:
  1164                           
  1165                           ;main_master.c: 69:     Set_day_week(3);
  1166     0055  3003               	movlw	3
  1167     0056  120A  158A  260C  120A  118A  	fcall	_Set_day_week
  1168     005B                     l3143:
  1169                           
  1170                           ;main_master.c: 70:     Set_day(14);
  1171     005B  300E               	movlw	14
  1172     005C  120A  158A  25E5  120A  118A  	fcall	_Set_day
  1173     0061                     l3145:
  1174                           
  1175                           ;main_master.c: 71:     Set_month(2);
  1176     0061  3002               	movlw	2
  1177     0062  120A  158A  265A  120A  118A  	fcall	_Set_month
  1178     0067                     l3147:
  1179                           
  1180                           ;main_master.c: 72:     Set_year(23);
  1181     0067  3017               	movlw	23
  1182     0068  120A  158A  26A8  120A  118A  	fcall	_Set_year
  1183     006D                     l3149:
  1184                           
  1185                           ;main_master.c: 74:         if (selector == 0){
  1186     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1187     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1188     006F  084A               	movf	_selector,w
  1189     0070  1D03               	btfss	3,2
  1190     0071  2873               	goto	u2821
  1191     0072  2874               	goto	u2820
  1192     0073                     u2821:
  1193     0073  290F               	goto	l3169
  1194     0074                     u2820:
  1195     0074                     l3151:
  1196                           
  1197                           ;main_master.c: 75:             Slave1();
  1198     0074  120A  118A  275F  120A  118A  	fcall	_Slave1
  1199     0079                     l3153:
  1200                           
  1201                           ;main_master.c: 76:             Read_Time(&segundo, &minuto, &hora);
  1202     0079  3063               	movlw	(low (_minuto| 0))& (0+255)
  1203     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1204     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1205     007C  00A8               	movwf	Read_Time@m
  1206     007D  3062               	movlw	(low (_hora| 0))& (0+255)
  1207     007E  00A9               	movwf	Read_Time@h
  1208     007F  3064               	movlw	(low (_segundo| 0))& (0+255)
  1209     0080  120A  158A  2756  120A  118A  	fcall	_Read_Time
  1210     0085                     l3155:
  1211                           
  1212                           ;main_master.c: 77:             Lcd_Set_Cursor(1,7);
  1213     0085  3007               	movlw	7
  1214     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0088  00A4               	movwf	Lcd_Set_Cursor@b
  1217     0089  3001               	movlw	1
  1218     008A  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1219     008F                     l3157:
  1220                           
  1221                           ;main_master.c: 78:             sprintf(buffer, "%02u:%02u:%02u ", hora, minuto, segundo
      +                          );
  1222     008F  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1223     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0092  00AE               	movwf	sprintf@f
  1226     0093  0862               	movf	_hora,w
  1227     0094  00C3               	movwf	??_main
  1228     0095  01C4               	clrf	??_main+1
  1229     0096  0843               	movf	??_main,w
  1230     0097  00AF               	movwf	?_sprintf+1
  1231     0098  0844               	movf	??_main+1,w
  1232     0099  00B0               	movwf	?_sprintf+2
  1233     009A  0863               	movf	_minuto,w
  1234     009B  00C5               	movwf	??_main+2
  1235     009C  01C6               	clrf	??_main+3
  1236     009D  0845               	movf	??_main+2,w
  1237     009E  00B1               	movwf	?_sprintf+3
  1238     009F  0846               	movf	??_main+3,w
  1239     00A0  00B2               	movwf	?_sprintf+4
  1240     00A1  0864               	movf	_segundo,w
  1241     00A2  00C7               	movwf	??_main+4
  1242     00A3  01C8               	clrf	??_main+5
  1243     00A4  0847               	movf	??_main+4,w
  1244     00A5  00B3               	movwf	?_sprintf+5
  1245     00A6  0848               	movf	??_main+5,w
  1246     00A7  00B4               	movwf	?_sprintf+6
  1247     00A8  304B               	movlw	(low (_buffer| 0))& (0+255)
  1248     00A9  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1249     00AE                     l3159:
  1250                           
  1251                           ;main_master.c: 79:             Lcd_Write_String(buffer);
  1252     00AE  304B               	movlw	(low (_buffer| 0))& (0+255)
  1253     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1254     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1255     00B1  00A5               	movwf	Lcd_Write_String@a
  1256     00B2  3000               	movlw	0
  1257     00B3  00A6               	movwf	Lcd_Write_String@a+1
  1258     00B4  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1259     00B9                     l3161:
  1260                           
  1261                           ;main_master.c: 81:             Read_Fecha(&dia, &mes, &ano);
  1262     00B9  3060               	movlw	(low (_mes| 0))& (0+255)
  1263     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1264     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1265     00BC  00A8               	movwf	Read_Fecha@mo
  1266     00BD  305F               	movlw	(low (_ano| 0))& (0+255)
  1267     00BE  00A9               	movwf	Read_Fecha@y
  1268     00BF  3061               	movlw	(low (_dia| 0))& (0+255)
  1269     00C0  120A  158A  2721  120A  118A  	fcall	_Read_Fecha
  1270     00C5                     l3163:
  1271                           
  1272                           ;main_master.c: 82:             Lcd_Set_Cursor(2,7);
  1273     00C5  3007               	movlw	7
  1274     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1275     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1276     00C8  00A4               	movwf	Lcd_Set_Cursor@b
  1277     00C9  3002               	movlw	2
  1278     00CA  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1279                           
  1280                           ;main_master.c: 83:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1281     00CF  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1282     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1283     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1284     00D2  00AE               	movwf	sprintf@f
  1285     00D3  0861               	movf	_dia,w
  1286     00D4  00C3               	movwf	??_main
  1287     00D5  01C4               	clrf	??_main+1
  1288     00D6  0843               	movf	??_main,w
  1289     00D7  00AF               	movwf	?_sprintf+1
  1290     00D8  0844               	movf	??_main+1,w
  1291     00D9  00B0               	movwf	?_sprintf+2
  1292     00DA  0860               	movf	_mes,w
  1293     00DB  00C5               	movwf	??_main+2
  1294     00DC  01C6               	clrf	??_main+3
  1295     00DD  0845               	movf	??_main+2,w
  1296     00DE  00B1               	movwf	?_sprintf+3
  1297     00DF  0846               	movf	??_main+3,w
  1298     00E0  00B2               	movwf	?_sprintf+4
  1299     00E1  085F               	movf	_ano,w
  1300     00E2  00C7               	movwf	??_main+4
  1301     00E3  01C8               	clrf	??_main+5
  1302     00E4  0847               	movf	??_main+4,w
  1303     00E5  00B3               	movwf	?_sprintf+5
  1304     00E6  0848               	movf	??_main+5,w
  1305     00E7  00B4               	movwf	?_sprintf+6
  1306     00E8  304B               	movlw	(low (_buffer| 0))& (0+255)
  1307     00E9  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1308                           
  1309                           ;main_master.c: 84:             Lcd_Write_String(buffer);
  1310     00EE  304B               	movlw	(low (_buffer| 0))& (0+255)
  1311     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1312     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1313     00F1  00A5               	movwf	Lcd_Write_String@a
  1314     00F2  3000               	movlw	0
  1315     00F3  00A6               	movwf	Lcd_Write_String@a+1
  1316     00F4  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1317     00F9                     l3165:
  1318                           
  1319                           ;main_master.c: 86:             Lcd_Set_Cursor(2,5);
  1320     00F9  3005               	movlw	5
  1321     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1322     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1323     00FC  00A4               	movwf	Lcd_Set_Cursor@b
  1324     00FD  3002               	movlw	2
  1325     00FE  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1326     0103                     l3167:
  1327                           
  1328                           ;main_master.c: 87:             Lcd_Write_String("T");
  1329     0103  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1330     0104  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0105  1303               	bcf	3,6	;RP1=0, select bank0
  1332     0106  00A5               	movwf	Lcd_Write_String@a
  1333     0107  3080               	movlw	128
  1334     0108  00A6               	movwf	Lcd_Write_String@a+1
  1335     0109  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1336                           
  1337                           ;main_master.c: 88:         }
  1338     010E  286D               	goto	l3149
  1339     010F                     l3169:
  1340     010F  034A               	decf	_selector,w
  1341     0110  1D03               	btfss	3,2
  1342     0111  2913               	goto	u2831
  1343     0112  2914               	goto	u2830
  1344     0113                     u2831:
  1345     0113  2963               	goto	l3181
  1346     0114                     u2830:
  1347     0114                     l3171:
  1348                           
  1349                           ;main_master.c: 90:             Slave1();
  1350     0114  120A  118A  275F  120A  118A  	fcall	_Slave1
  1351     0119                     l3173:
  1352                           
  1353                           ;main_master.c: 91:             Lcd_Set_Cursor(2,7);
  1354     0119  3007               	movlw	7
  1355     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1356     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1357     011C  00A4               	movwf	Lcd_Set_Cursor@b
  1358     011D  3002               	movlw	2
  1359     011E  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1360     0123                     l3175:
  1361                           
  1362                           ;main_master.c: 92:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1363     0123  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1364     0124  1283               	bcf	3,5	;RP0=0, select bank0
  1365     0125  1303               	bcf	3,6	;RP1=0, select bank0
  1366     0126  00AE               	movwf	sprintf@f
  1367     0127  0861               	movf	_dia,w
  1368     0128  00C3               	movwf	??_main
  1369     0129  01C4               	clrf	??_main+1
  1370     012A  0843               	movf	??_main,w
  1371     012B  00AF               	movwf	?_sprintf+1
  1372     012C  0844               	movf	??_main+1,w
  1373     012D  00B0               	movwf	?_sprintf+2
  1374     012E  0860               	movf	_mes,w
  1375     012F  00C5               	movwf	??_main+2
  1376     0130  01C6               	clrf	??_main+3
  1377     0131  0845               	movf	??_main+2,w
  1378     0132  00B1               	movwf	?_sprintf+3
  1379     0133  0846               	movf	??_main+3,w
  1380     0134  00B2               	movwf	?_sprintf+4
  1381     0135  085F               	movf	_ano,w
  1382     0136  00C7               	movwf	??_main+4
  1383     0137  01C8               	clrf	??_main+5
  1384     0138  0847               	movf	??_main+4,w
  1385     0139  00B3               	movwf	?_sprintf+5
  1386     013A  0848               	movf	??_main+5,w
  1387     013B  00B4               	movwf	?_sprintf+6
  1388     013C  304B               	movlw	(low (_buffer| 0))& (0+255)
  1389     013D  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1390     0142                     l3177:
  1391                           
  1392                           ;main_master.c: 93:             Lcd_Write_String(buffer);
  1393     0142  304B               	movlw	(low (_buffer| 0))& (0+255)
  1394     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1395     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1396     0145  00A5               	movwf	Lcd_Write_String@a
  1397     0146  3000               	movlw	0
  1398     0147  00A6               	movwf	Lcd_Write_String@a+1
  1399     0148  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1400     014D                     l3179:
  1401                           
  1402                           ;main_master.c: 94:             Lcd_Set_Cursor(2,5);
  1403     014D  3005               	movlw	5
  1404     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1405     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1406     0150  00A4               	movwf	Lcd_Set_Cursor@b
  1407     0151  3002               	movlw	2
  1408     0152  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1409                           
  1410                           ;main_master.c: 95:             Lcd_Write_String("D ");
  1411     0157  3038               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1412     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1414     015A  00A5               	movwf	Lcd_Write_String@a
  1415     015B  3080               	movlw	128
  1416     015C  00A6               	movwf	Lcd_Write_String@a+1
  1417     015D  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1418                           
  1419                           ;main_master.c: 96:         }
  1420     0162  286D               	goto	l3149
  1421     0163                     l3181:
  1422     0163  3002               	movlw	2
  1423     0164  064A               	xorwf	_selector,w
  1424     0165  1D03               	btfss	3,2
  1425     0166  2968               	goto	u2841
  1426     0167  2969               	goto	u2840
  1427     0168                     u2841:
  1428     0168  29B8               	goto	l3193
  1429     0169                     u2840:
  1430     0169                     l3183:
  1431                           
  1432                           ;main_master.c: 98:             Slave1();
  1433     0169  120A  118A  275F  120A  118A  	fcall	_Slave1
  1434     016E                     l3185:
  1435                           
  1436                           ;main_master.c: 99:             Lcd_Set_Cursor(2,7);
  1437     016E  3007               	movlw	7
  1438     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1439     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1440     0171  00A4               	movwf	Lcd_Set_Cursor@b
  1441     0172  3002               	movlw	2
  1442     0173  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1443     0178                     l3187:
  1444                           
  1445                           ;main_master.c: 100:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1446     0178  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1447     0179  1283               	bcf	3,5	;RP0=0, select bank0
  1448     017A  1303               	bcf	3,6	;RP1=0, select bank0
  1449     017B  00AE               	movwf	sprintf@f
  1450     017C  0861               	movf	_dia,w
  1451     017D  00C3               	movwf	??_main
  1452     017E  01C4               	clrf	??_main+1
  1453     017F  0843               	movf	??_main,w
  1454     0180  00AF               	movwf	?_sprintf+1
  1455     0181  0844               	movf	??_main+1,w
  1456     0182  00B0               	movwf	?_sprintf+2
  1457     0183  0860               	movf	_mes,w
  1458     0184  00C5               	movwf	??_main+2
  1459     0185  01C6               	clrf	??_main+3
  1460     0186  0845               	movf	??_main+2,w
  1461     0187  00B1               	movwf	?_sprintf+3
  1462     0188  0846               	movf	??_main+3,w
  1463     0189  00B2               	movwf	?_sprintf+4
  1464     018A  085F               	movf	_ano,w
  1465     018B  00C7               	movwf	??_main+4
  1466     018C  01C8               	clrf	??_main+5
  1467     018D  0847               	movf	??_main+4,w
  1468     018E  00B3               	movwf	?_sprintf+5
  1469     018F  0848               	movf	??_main+5,w
  1470     0190  00B4               	movwf	?_sprintf+6
  1471     0191  304B               	movlw	(low (_buffer| 0))& (0+255)
  1472     0192  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1473     0197                     l3189:
  1474                           
  1475                           ;main_master.c: 101:             Lcd_Write_String(buffer);
  1476     0197  304B               	movlw	(low (_buffer| 0))& (0+255)
  1477     0198  1283               	bcf	3,5	;RP0=0, select bank0
  1478     0199  1303               	bcf	3,6	;RP1=0, select bank0
  1479     019A  00A5               	movwf	Lcd_Write_String@a
  1480     019B  3000               	movlw	0
  1481     019C  00A6               	movwf	Lcd_Write_String@a+1
  1482     019D  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1483     01A2                     l3191:
  1484                           
  1485                           ;main_master.c: 102:             Lcd_Set_Cursor(2,5);
  1486     01A2  3005               	movlw	5
  1487     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1488     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1489     01A5  00A4               	movwf	Lcd_Set_Cursor@b
  1490     01A6  3002               	movlw	2
  1491     01A7  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1492                           
  1493                           ;main_master.c: 103:             Lcd_Write_String("M ");
  1494     01AC  303B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1495     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1496     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1497     01AF  00A5               	movwf	Lcd_Write_String@a
  1498     01B0  3080               	movlw	128
  1499     01B1  00A6               	movwf	Lcd_Write_String@a+1
  1500     01B2  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1501                           
  1502                           ;main_master.c: 104:         }
  1503     01B7  286D               	goto	l3149
  1504     01B8                     l3193:
  1505     01B8  3003               	movlw	3
  1506     01B9  064A               	xorwf	_selector,w
  1507     01BA  1D03               	btfss	3,2
  1508     01BB  29BD               	goto	u2851
  1509     01BC  29BE               	goto	u2850
  1510     01BD                     u2851:
  1511     01BD  2A0D               	goto	l171
  1512     01BE                     u2850:
  1513     01BE                     l3195:
  1514                           
  1515                           ;main_master.c: 106:             Slave1();
  1516     01BE  120A  118A  275F  120A  118A  	fcall	_Slave1
  1517     01C3                     l3197:
  1518                           
  1519                           ;main_master.c: 107:             Lcd_Set_Cursor(2,7);
  1520     01C3  3007               	movlw	7
  1521     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1522     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1523     01C6  00A4               	movwf	Lcd_Set_Cursor@b
  1524     01C7  3002               	movlw	2
  1525     01C8  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1526     01CD                     l3199:
  1527                           
  1528                           ;main_master.c: 108:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1529     01CD  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1530     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1531     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1532     01D0  00AE               	movwf	sprintf@f
  1533     01D1  0861               	movf	_dia,w
  1534     01D2  00C3               	movwf	??_main
  1535     01D3  01C4               	clrf	??_main+1
  1536     01D4  0843               	movf	??_main,w
  1537     01D5  00AF               	movwf	?_sprintf+1
  1538     01D6  0844               	movf	??_main+1,w
  1539     01D7  00B0               	movwf	?_sprintf+2
  1540     01D8  0860               	movf	_mes,w
  1541     01D9  00C5               	movwf	??_main+2
  1542     01DA  01C6               	clrf	??_main+3
  1543     01DB  0845               	movf	??_main+2,w
  1544     01DC  00B1               	movwf	?_sprintf+3
  1545     01DD  0846               	movf	??_main+3,w
  1546     01DE  00B2               	movwf	?_sprintf+4
  1547     01DF  085F               	movf	_ano,w
  1548     01E0  00C7               	movwf	??_main+4
  1549     01E1  01C8               	clrf	??_main+5
  1550     01E2  0847               	movf	??_main+4,w
  1551     01E3  00B3               	movwf	?_sprintf+5
  1552     01E4  0848               	movf	??_main+5,w
  1553     01E5  00B4               	movwf	?_sprintf+6
  1554     01E6  304B               	movlw	(low (_buffer| 0))& (0+255)
  1555     01E7  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1556     01EC                     l3201:
  1557                           
  1558                           ;main_master.c: 109:             Lcd_Write_String(buffer);
  1559     01EC  304B               	movlw	(low (_buffer| 0))& (0+255)
  1560     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1561     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1562     01EF  00A5               	movwf	Lcd_Write_String@a
  1563     01F0  3000               	movlw	0
  1564     01F1  00A6               	movwf	Lcd_Write_String@a+1
  1565     01F2  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1566     01F7                     l3203:
  1567                           
  1568                           ;main_master.c: 110:             Lcd_Set_Cursor(2,5);
  1569     01F7  3005               	movlw	5
  1570     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1571     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1572     01FA  00A4               	movwf	Lcd_Set_Cursor@b
  1573     01FB  3002               	movlw	2
  1574     01FC  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1575                           
  1576                           ;main_master.c: 111:             Lcd_Write_String("A ");
  1577     0201  3035               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1578     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1579     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1580     0204  00A5               	movwf	Lcd_Write_String@a
  1581     0205  3080               	movlw	128
  1582     0206  00A6               	movwf	Lcd_Write_String@a+1
  1583     0207  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1584     020C  286D               	goto	l3149
  1585     020D                     l171:
  1586     020D  286D               	goto	l3149
  1587     020E  120A  118A  280C   	ljmp	start
  1588     0211                     __end_of_main:
  1589                           
  1590                           	psect	text1
  1591     0DC0                     __ptext1:	
  1592 ;; *************** function _setup *****************
  1593 ;; Defined at:
  1594 ;;		line 250 in file "main_master.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		_I2C_Init_Master
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622     0DC0                     _setup:	
  1623                           ;psect for function _setup
  1624                           
  1625     0DC0                     l2995:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1628                           
  1629                           
  1630                           ;main_master.c: 251:     ANSEL = 0;
  1631     0DC0  1683               	bsf	3,5	;RP0=1, select bank3
  1632     0DC1  1703               	bsf	3,6	;RP1=1, select bank3
  1633     0DC2  0188               	clrf	8	;volatile
  1634                           
  1635                           ;main_master.c: 252:     ANSELH = 0;
  1636     0DC3  0189               	clrf	9	;volatile
  1637     0DC4                     l2997:
  1638                           
  1639                           ;main_master.c: 254:     TRISB = 0b00001110;
  1640     0DC4  300E               	movlw	14
  1641     0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  1642     0DC6  1303               	bcf	3,6	;RP1=0, select bank1
  1643     0DC7  0086               	movwf	6	;volatile
  1644     0DC8                     l2999:
  1645                           
  1646                           ;main_master.c: 255:     TRISD = 0;
  1647     0DC8  0188               	clrf	8	;volatile
  1648     0DC9                     l3001:
  1649                           
  1650                           ;main_master.c: 256:     PORTB = 0;
  1651     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  1653     0DCB  0186               	clrf	6	;volatile
  1654     0DCC                     l3003:
  1655                           
  1656                           ;main_master.c: 257:     PORTC = 0;
  1657     0DCC  0187               	clrf	7	;volatile
  1658     0DCD                     l3005:
  1659                           
  1660                           ;main_master.c: 258:     PORTD = 0;
  1661     0DCD  0188               	clrf	8	;volatile
  1662     0DCE                     l3007:
  1663                           
  1664                           ;main_master.c: 260:     INTCONbits.GIE = 1;
  1665     0DCE  178B               	bsf	11,7	;volatile
  1666     0DCF                     l3009:
  1667                           
  1668                           ;main_master.c: 261:     INTCONbits.RBIF = 0;
  1669     0DCF  100B               	bcf	11,0	;volatile
  1670     0DD0                     l3011:
  1671                           
  1672                           ;main_master.c: 262:     INTCONbits.RBIE = 1;
  1673     0DD0  158B               	bsf	11,3	;volatile
  1674     0DD1                     l3013:
  1675                           
  1676                           ;main_master.c: 264:     OPTION_REGbits.nRBPU = 0;
  1677     0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  1678     0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  1679     0DD3  1381               	bcf	1,7	;volatile
  1680     0DD4                     l3015:
  1681                           
  1682                           ;main_master.c: 265:     IOCBbits.IOCB3 = 1;
  1683     0DD4  1596               	bsf	22,3	;volatile
  1684     0DD5                     l3017:
  1685                           
  1686                           ;main_master.c: 266:     IOCBbits.IOCB2 = 1;
  1687     0DD5  1516               	bsf	22,2	;volatile
  1688     0DD6                     l3019:
  1689                           
  1690                           ;main_master.c: 267:     IOCBbits.IOCB1 = 1;
  1691     0DD6  1496               	bsf	22,1	;volatile
  1692     0DD7                     l3021:
  1693                           
  1694                           ;main_master.c: 269:     WPUBbits.WPUB3 = 1;
  1695     0DD7  1595               	bsf	21,3	;volatile
  1696     0DD8                     l3023:
  1697                           
  1698                           ;main_master.c: 270:     WPUBbits.WPUB2 = 1;
  1699     0DD8  1515               	bsf	21,2	;volatile
  1700     0DD9                     l3025:
  1701                           
  1702                           ;main_master.c: 271:     WPUBbits.WPUB1 = 1;
  1703     0DD9  1495               	bsf	21,1	;volatile
  1704     0DDA                     l3027:
  1705                           
  1706                           ;main_master.c: 273:     OSCCONbits.IRCF2 = 1;
  1707     0DDA  170F               	bsf	15,6	;volatile
  1708     0DDB                     l3029:
  1709                           
  1710                           ;main_master.c: 274:     OSCCONbits.IRCF1 = 1;
  1711     0DDB  168F               	bsf	15,5	;volatile
  1712     0DDC                     l3031:
  1713                           
  1714                           ;main_master.c: 275:     OSCCONbits.IRCF0 = 1;
  1715     0DDC  160F               	bsf	15,4	;volatile
  1716     0DDD                     l3033:
  1717                           
  1718                           ;main_master.c: 277:     OSCCONbits.SCS = 1;
  1719     0DDD  140F               	bsf	15,0	;volatile
  1720     0DDE                     l3035:
  1721                           
  1722                           ;main_master.c: 278:     I2C_Init_Master(0x80);
  1723     0DDE  3080               	movlw	128
  1724     0DDF  120A  158A  26F6  120A  158A  	fcall	_I2C_Init_Master
  1725     0DE4                     l241:
  1726     0DE4  0008               	return
  1727     0DE5                     __end_of_setup:
  1728                           
  1729                           	psect	text2
  1730     0EF6                     __ptext2:	
  1731 ;; *************** function _I2C_Init_Master *****************
  1732 ;; Defined at:
  1733 ;;		line 12 in file "i2c.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  sp_i2c          1    wreg     unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  sp_i2c          1    0[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       1       0       0       0
  1749 ;;      Temps:          0       0       0       0       0
  1750 ;;      Totals:         0       1       0       0       0
  1751 ;;Total ram usage:        1 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_setup
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     0EF6                     _I2C_Init_Master:	
  1762                           ;psect for function _I2C_Init_Master
  1763                           
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1767                           ;I2C_Init_Master@sp_i2c stored from wreg
  1768     0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  1769     0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  1770     0EF8  00A0               	movwf	I2C_Init_Master@sp_i2c
  1771     0EF9                     l2795:
  1772                           
  1773                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1774     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1775     0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  1776     0EFB  1587               	bsf	7,3	;volatile
  1777                           
  1778                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1779     0EFC  1607               	bsf	7,4	;volatile
  1780     0EFD                     l2797:
  1781                           
  1782                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1783     0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  1784     0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0EFF  0820               	movf	I2C_Init_Master@sp_i2c,w
  1786     0F00  1683               	bsf	3,5	;RP0=1, select bank1
  1787     0F01  1303               	bcf	3,6	;RP1=0, select bank1
  1788     0F02  0094               	movwf	20	;volatile
  1789                           
  1790                           ;i2c.c: 17:  SSPCON = 0x28;
  1791     0F03  3028               	movlw	40
  1792     0F04  1283               	bcf	3,5	;RP0=0, select bank0
  1793     0F05  1303               	bcf	3,6	;RP1=0, select bank0
  1794     0F06  0094               	movwf	20	;volatile
  1795     0F07                     l2799:
  1796                           
  1797                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1798     0F07  1683               	bsf	3,5	;RP0=1, select bank1
  1799     0F08  1303               	bcf	3,6	;RP1=0, select bank1
  1800     0F09  0191               	clrf	17	;volatile
  1801     0F0A                     l2801:
  1802                           
  1803                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1804     0F0A  3080               	movlw	128
  1805     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  1806     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  1807     0F0D  0620               	xorwf	I2C_Init_Master@sp_i2c,w
  1808     0F0E  1D03               	btfss	3,2
  1809     0F0F  2F11               	goto	u2531
  1810     0F10  2F12               	goto	u2530
  1811     0F11                     u2531:
  1812     0F11  2F17               	goto	l2805
  1813     0F12                     u2530:
  1814     0F12                     l2803:
  1815                           
  1816                           ;i2c.c: 20:         SSPADD = 19;
  1817     0F12  3013               	movlw	19
  1818     0F13  1683               	bsf	3,5	;RP0=1, select bank1
  1819     0F14  1303               	bcf	3,6	;RP1=0, select bank1
  1820     0F15  0093               	movwf	19	;volatile
  1821                           
  1822                           ;i2c.c: 21:     }
  1823     0F16  2F20               	goto	l22
  1824     0F17                     l2805:
  1825     0F17  0820               	movf	I2C_Init_Master@sp_i2c,w
  1826     0F18  1D03               	btfss	3,2
  1827     0F19  2F1B               	goto	u2541
  1828     0F1A  2F1C               	goto	u2540
  1829     0F1B                     u2541:
  1830     0F1B  2F20               	goto	l22
  1831     0F1C                     u2540:
  1832     0F1C                     l2807:
  1833                           
  1834                           ;i2c.c: 23:         SSPADD = 29;
  1835     0F1C  301D               	movlw	29
  1836     0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  1837     0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  1838     0F1F  0093               	movwf	19	;volatile
  1839     0F20                     l22:
  1840     0F20  0008               	return
  1841     0F21                     __end_of_I2C_Init_Master:
  1842                           
  1843                           	psect	text3
  1844     075F                     __ptext3:	
  1845 ;; *************** function _Slave1 *****************
  1846 ;; Defined at:
  1847 ;;		line 385 in file "main_master.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          0       2       0       0       0
  1864 ;;      Totals:         0       2       0       0       0
  1865 ;;Total ram usage:        2 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 6
  1868 ;; This function calls:
  1869 ;;		_I2C_Read
  1870 ;;		_I2C_Start
  1871 ;;		_I2C_Stop
  1872 ;;		_I2C_Write
  1873 ;;		_Lcd_Set_Cursor
  1874 ;;		_Lcd_Write_String
  1875 ;;		_sprintf
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881     075F                     _Slave1:	
  1882                           ;psect for function _Slave1
  1883                           
  1884     075F                     l3111:	
  1885                           ;incstack = 0
  1886                           ; Regs used in _Slave1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1887                           
  1888                           
  1889                           ;main_master.c: 386:     I2C_Start();
  1890     075F  120A  158A  2473  120A  118A  	fcall	_I2C_Start
  1891     0764                     l3113:
  1892                           
  1893                           ;main_master.c: 387:     I2C_Write(0x51);
  1894     0764  3051               	movlw	81
  1895     0765  120A  158A  24B8  120A  118A  	fcall	_I2C_Write
  1896     076A                     l3115:
  1897                           
  1898                           ;main_master.c: 388:     voltaje = I2C_Read();
  1899     076A  120A  158A  2492  120A  118A  	fcall	_I2C_Read
  1900     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1901     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1902     0771  00C9               	movwf	_voltaje
  1903     0772                     l3117:
  1904                           
  1905                           ;main_master.c: 389:     Lcd_Set_Cursor(2,1);
  1906     0772  01A4               	clrf	Lcd_Set_Cursor@b
  1907     0773  0AA4               	incf	Lcd_Set_Cursor@b,f
  1908     0774  3002               	movlw	2
  1909     0775  120A  118A  2687  120A  118A  	fcall	_Lcd_Set_Cursor
  1910     077A                     l3119:
  1911                           
  1912                           ;main_master.c: 390:     sprintf(buffer, "%d ", voltaje);
  1913     077A  302D               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1914     077B  1283               	bcf	3,5	;RP0=0, select bank0
  1915     077C  1303               	bcf	3,6	;RP1=0, select bank0
  1916     077D  00AE               	movwf	sprintf@f
  1917     077E  0849               	movf	_voltaje,w
  1918     077F  00C1               	movwf	??_Slave1
  1919     0780  01C2               	clrf	??_Slave1+1
  1920     0781  0841               	movf	??_Slave1,w
  1921     0782  00AF               	movwf	?_sprintf+1
  1922     0783  0842               	movf	??_Slave1+1,w
  1923     0784  00B0               	movwf	?_sprintf+2
  1924     0785  304B               	movlw	(low (_buffer| 0))& (0+255)
  1925     0786  120A  118A  23FC  120A  118A  	fcall	_sprintf
  1926     078B                     l3121:
  1927                           
  1928                           ;main_master.c: 391:     Lcd_Write_String(buffer);
  1929     078B  304B               	movlw	(low (_buffer| 0))& (0+255)
  1930     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1931     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1932     078E  00A5               	movwf	Lcd_Write_String@a
  1933     078F  3000               	movlw	0
  1934     0790  00A6               	movwf	Lcd_Write_String@a+1
  1935     0791  120A  118A  2719  120A  118A  	fcall	_Lcd_Write_String
  1936     0796                     l3123:
  1937                           
  1938                           ;main_master.c: 392:     I2C_Stop();
  1939     0796  120A  158A  247D  120A  118A  	fcall	_I2C_Stop
  1940     079B                     l3125:
  1941                           
  1942                           ;main_master.c: 393:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1943     079B  3005               	movlw	5
  1944     079C  1283               	bcf	3,5	;RP0=0, select bank0
  1945     079D  1303               	bcf	3,6	;RP1=0, select bank0
  1946     079E  00C1               	movwf	??_Slave1
  1947     079F                     u2867:
  1948     079F  0BC1               	decfsz	??_Slave1,f
  1949     07A0  2F9F               	goto	u2867
  1950     07A1  2FA2               	nop2
  1951     07A2                     l285:
  1952     07A2  0008               	return
  1953     07A3                     __end_of_Slave1:
  1954                           
  1955                           	psect	text4
  1956     03FC                     __ptext4:	
  1957 ;; *************** function _sprintf *****************
  1958 ;; Defined at:
  1959 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  sp              1    wreg     PTR unsigned char 
  1962 ;;		 -> buffer(20), 
  1963 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1964 ;;		 -> STR_11(4), STR_9(18), STR_7(18), STR_5(18), 
  1965 ;;		 -> STR_3(18), STR_2(16), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  1968 ;;		 -> buffer(20), 
  1969 ;;  tmpval          4    0        struct .
  1970 ;;  width           2   29[BANK0 ] int 
  1971 ;;  val             2   26[BANK0 ] unsigned int 
  1972 ;;  cp              2    0        PTR const unsigned char 
  1973 ;;  len             2    0        unsigned int 
  1974 ;;  c               1   31[BANK0 ] unsigned char 
  1975 ;;  flag            1   28[BANK0 ] unsigned char 
  1976 ;;  ap              1   25[BANK0 ] PTR void [1]
  1977 ;;		 -> ?_sprintf(2), 
  1978 ;;  prec            1   24[BANK0 ] char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2   14[BANK0 ] int 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       7       0       0       0
  1989 ;;      Locals:         0       9       0       0       0
  1990 ;;      Temps:          0       3       0       0       0
  1991 ;;      Totals:         0      19       0       0       0
  1992 ;;Total ram usage:       19 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 4
  1995 ;; This function calls:
  1996 ;;		___lwdiv
  1997 ;;		___lwmod
  1998 ;;		___wmul
  1999 ;;		_isdigit
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;;		_Slave1
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     03FC                     _sprintf:	
  2007                           ;psect for function _sprintf
  2008                           
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2012                           ;sprintf@sp stored from wreg
  2013     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2014     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2015     03FE  00C0               	movwf	sprintf@sp
  2016     03FF                     l2837:
  2017                           
  2018                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2019     03FF  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2020     0400  00B9               	movwf	sprintf@ap
  2021                           
  2022                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2023     0401  2DBE               	goto	l2945
  2024     0402                     l2839:
  2025                           
  2026                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2027     0402  3025               	movlw	37
  2028     0403  063F               	xorwf	sprintf@c,w
  2029     0404  1903               	btfsc	3,2
  2030     0405  2C07               	goto	u2621
  2031     0406  2C08               	goto	u2620
  2032     0407                     u2621:
  2033     0407  2C12               	goto	l2845
  2034     0408                     u2620:
  2035     0408                     l2841:
  2036                           
  2037                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2038     0408  0840               	movf	sprintf@sp,w
  2039     0409  0084               	movwf	4
  2040     040A  083F               	movf	sprintf@c,w
  2041     040B  1383               	bcf	3,7	;select IRP bank0
  2042     040C  0080               	movwf	0
  2043     040D                     l2843:
  2044     040D  3001               	movlw	1
  2045     040E  00B5               	movwf	??_sprintf
  2046     040F  0835               	movf	??_sprintf,w
  2047     0410  07C0               	addwf	sprintf@sp,f
  2048                           
  2049                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2050     0411  2DBE               	goto	l2945
  2051     0412                     l2845:
  2052                           
  2053                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2054     0412  01BD               	clrf	sprintf@width
  2055     0413  01BE               	clrf	sprintf@width+1
  2056                           
  2057                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2058     0414  01BC               	clrf	sprintf@flag
  2059     0415  2C1B               	goto	l2851
  2060     0416                     l430:	
  2061                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2062                           
  2063                           
  2064                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2065     0416  153C               	bsf	sprintf@flag,2
  2066     0417                     l2847:
  2067                           
  2068                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2069     0417  3001               	movlw	1
  2070     0418  00B5               	movwf	??_sprintf
  2071     0419  0835               	movf	??_sprintf,w
  2072     041A  07AE               	addwf	sprintf@f,f
  2073     041B                     l2851:	
  2074                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2075                           
  2076     041B  082E               	movf	sprintf@f,w
  2077     041C  0084               	movwf	4
  2078     041D  120A  118A  2642  120A  118A  	fcall	stringdir
  2079     0422  00B5               	movwf	??_sprintf
  2080     0423  01B6               	clrf	??_sprintf+1
  2081                           
  2082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 1, Range of values is 0 to 0
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            4     3 (average)
  2088                           ; direct_byte           11     8 (fixed)
  2089                           ; jumptable            260     6 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091     0424  0836               	movf	??_sprintf+1,w
  2092     0425  3A00               	xorlw	0	; case 0
  2093     0426  1903               	skipnz
  2094     0427  2C29               	goto	l3259
  2095     0428  2C2E               	goto	l2853
  2096     0429                     l3259:
  2097                           
  2098                           ; Switch size 1, requested type "simple"
  2099                           ; Number of cases is 1, Range of values is 48 to 48
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte            4     3 (average)
  2103                           ; direct_byte           14    11 (fixed)
  2104                           ; jumptable            263     9 (fixed)
  2105                           ;	Chosen strategy is simple_byte
  2106     0429  0835               	movf	??_sprintf,w
  2107     042A  3A30               	xorlw	48	; case 48
  2108     042B  1903               	skipnz
  2109     042C  2C16               	goto	l430
  2110     042D  2C2E               	goto	l2853
  2111     042E                     l2853:
  2112                           
  2113                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2114     042E  082E               	movf	sprintf@f,w
  2115     042F  0084               	movwf	4
  2116     0430  120A  118A  2642  120A  118A  	fcall	stringdir
  2117     0435  120A  158A  24DA  120A  118A  	fcall	_isdigit
  2118     043A  1C03               	btfss	3,0
  2119     043B  2C3D               	goto	u2631
  2120     043C  2C3E               	goto	u2630
  2121     043D                     u2631:
  2122     043D  2C81               	goto	l2867
  2123     043E                     u2630:
  2124     043E                     l2855:
  2125                           
  2126                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2127     043E  1283               	bcf	3,5	;RP0=0, select bank0
  2128     043F  1303               	bcf	3,6	;RP1=0, select bank0
  2129     0440  01BD               	clrf	sprintf@width
  2130     0441  01BE               	clrf	sprintf@width+1
  2131     0442                     l2857:
  2132                           
  2133                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2134     0442  300A               	movlw	10
  2135     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2136     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2137     0445  00A0               	movwf	___wmul@multiplier
  2138     0446  3000               	movlw	0
  2139     0447  00A1               	movwf	___wmul@multiplier+1
  2140     0448  083E               	movf	sprintf@width+1,w
  2141     0449  00A3               	movwf	___wmul@multiplicand+1
  2142     044A  083D               	movf	sprintf@width,w
  2143     044B  00A2               	movwf	___wmul@multiplicand
  2144     044C  120A  158A  26CF  120A  118A  	fcall	___wmul
  2145     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2146     0452  1303               	bcf	3,6	;RP1=0, select bank0
  2147     0453  0821               	movf	?___wmul+1,w
  2148     0454  00BE               	movwf	sprintf@width+1
  2149     0455  0820               	movf	?___wmul,w
  2150     0456  00BD               	movwf	sprintf@width
  2151     0457                     l2859:
  2152                           
  2153                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2154     0457  082E               	movf	sprintf@f,w
  2155     0458  0084               	movwf	4
  2156     0459  120A  118A  2642  120A  118A  	fcall	stringdir
  2157     045E  3ED0               	addlw	208
  2158     045F  00B5               	movwf	??_sprintf
  2159     0460  30FF               	movlw	255
  2160     0461  1803               	skipnc
  2161     0462  3000               	movlw	0
  2162     0463  00B6               	movwf	??_sprintf+1
  2163     0464  0835               	movf	??_sprintf,w
  2164     0465  07BD               	addwf	sprintf@width,f
  2165     0466  1803               	skipnc
  2166     0467  0ABE               	incf	sprintf@width+1,f
  2167     0468  0836               	movf	??_sprintf+1,w
  2168     0469  07BE               	addwf	sprintf@width+1,f
  2169     046A                     l2861:
  2170     046A  3001               	movlw	1
  2171     046B  00B5               	movwf	??_sprintf
  2172     046C  0835               	movf	??_sprintf,w
  2173     046D  07AE               	addwf	sprintf@f,f
  2174     046E                     l2863:
  2175                           
  2176                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2177     046E  082E               	movf	sprintf@f,w
  2178     046F  0084               	movwf	4
  2179     0470  120A  118A  2642  120A  118A  	fcall	stringdir
  2180     0475  120A  158A  24DA  120A  118A  	fcall	_isdigit
  2181     047A  1803               	btfsc	3,0
  2182     047B  2C7D               	goto	u2641
  2183     047C  2C7E               	goto	u2640
  2184     047D                     u2641:
  2185     047D  2C42               	goto	l2857
  2186     047E                     u2640:
  2187     047E  2C81               	goto	l2867
  2188     047F                     l444:	
  2189                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2190                           
  2191                           
  2192                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2193     047F  173C               	bsf	sprintf@flag,6
  2194                           
  2195                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2196     0480  2CA3               	goto	l442
  2197     0481                     l2867:
  2198     0481  3001               	movlw	1
  2199     0482  1283               	bcf	3,5	;RP0=0, select bank0
  2200     0483  1303               	bcf	3,6	;RP1=0, select bank0
  2201     0484  07AE               	addwf	sprintf@f,f
  2202     0485  30FF               	movlw	-1
  2203     0486  072E               	addwf	sprintf@f,w
  2204     0487  0084               	movwf	4
  2205     0488  120A  118A  2642  120A  118A  	fcall	stringdir
  2206     048D  00BF               	movwf	sprintf@c
  2207     048E  00B5               	movwf	??_sprintf
  2208     048F  01B6               	clrf	??_sprintf+1
  2209                           
  2210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 1, Range of values is 0 to 0
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ; direct_byte           11     8 (fixed)
  2217                           ; jumptable            260     6 (fixed)
  2218                           ;	Chosen strategy is simple_byte
  2219     0490  0836               	movf	??_sprintf+1,w
  2220     0491  3A00               	xorlw	0	; case 0
  2221     0492  1903               	skipnz
  2222     0493  2C95               	goto	l3261
  2223     0494  2DBE               	goto	l2945
  2224     0495                     l3261:
  2225                           
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 4, Range of values is 0 to 117
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte           13     7 (average)
  2231                           ; jumptable            260     6 (fixed)
  2232                           ;	Chosen strategy is simple_byte
  2233     0495  0835               	movf	??_sprintf,w
  2234     0496  3A00               	xorlw	0	; case 0
  2235     0497  1903               	skipnz
  2236     0498  2DCE               	goto	l2947
  2237     0499  3A64               	xorlw	100	; case 100
  2238     049A  1903               	skipnz
  2239     049B  2CA3               	goto	l442
  2240     049C  3A0D               	xorlw	13	; case 105
  2241     049D  1903               	skipnz
  2242     049E  2CA3               	goto	l442
  2243     049F  3A1C               	xorlw	28	; case 117
  2244     04A0  1903               	skipnz
  2245     04A1  2C7F               	goto	l444
  2246     04A2  2DBE               	goto	l2945
  2247     04A3                     l442:
  2248                           
  2249                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2250     04A3  1B3C               	btfsc	sprintf@flag,6
  2251     04A4  2CA6               	goto	u2651
  2252     04A5  2CA7               	goto	u2650
  2253     04A6                     u2651:
  2254     04A6  2CC1               	goto	l2879
  2255     04A7                     u2650:
  2256     04A7                     l2869:
  2257                           
  2258                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2259     04A7  0839               	movf	sprintf@ap,w
  2260     04A8  0084               	movwf	4
  2261     04A9  1383               	bcf	3,7	;select IRP bank0
  2262     04AA  0800               	movf	0,w
  2263     04AB  00BA               	movwf	sprintf@val
  2264     04AC  0A84               	incf	4,f
  2265     04AD  0800               	movf	0,w
  2266     04AE  00BB               	movwf	sprintf@val+1
  2267     04AF                     l2871:
  2268     04AF  3002               	movlw	2
  2269     04B0  00B5               	movwf	??_sprintf
  2270     04B1  0835               	movf	??_sprintf,w
  2271     04B2  07B9               	addwf	sprintf@ap,f
  2272     04B3                     l2873:
  2273                           
  2274                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2275     04B3  1FBB               	btfss	sprintf@val+1,7
  2276     04B4  2CB6               	goto	u2661
  2277     04B5  2CB7               	goto	u2660
  2278     04B6                     u2661:
  2279     04B6  2CCD               	goto	l2883
  2280     04B7                     u2660:
  2281     04B7                     l2875:
  2282                           
  2283                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2284     04B7  3003               	movlw	3
  2285     04B8  00B5               	movwf	??_sprintf
  2286     04B9  0835               	movf	??_sprintf,w
  2287     04BA  04BC               	iorwf	sprintf@flag,f
  2288     04BB                     l2877:
  2289                           
  2290                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2291     04BB  09BA               	comf	sprintf@val,f
  2292     04BC  09BB               	comf	sprintf@val+1,f
  2293     04BD  0ABA               	incf	sprintf@val,f
  2294     04BE  1903               	skipnz
  2295     04BF  0ABB               	incf	sprintf@val+1,f
  2296     04C0  2CCD               	goto	l2883
  2297     04C1                     l2879:
  2298                           
  2299                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2300     04C1  0839               	movf	sprintf@ap,w
  2301     04C2  0084               	movwf	4
  2302     04C3  1383               	bcf	3,7	;select IRP bank0
  2303     04C4  0800               	movf	0,w
  2304     04C5  00BA               	movwf	sprintf@val
  2305     04C6  0A84               	incf	4,f
  2306     04C7  0800               	movf	0,w
  2307     04C8  00BB               	movwf	sprintf@val+1
  2308     04C9                     l2881:
  2309     04C9  3002               	movlw	2
  2310     04CA  00B5               	movwf	??_sprintf
  2311     04CB  0835               	movf	??_sprintf,w
  2312     04CC  07B9               	addwf	sprintf@ap,f
  2313     04CD                     l2883:
  2314                           
  2315                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2316     04CD  01BF               	clrf	sprintf@c
  2317     04CE  0ABF               	incf	sprintf@c,f
  2318     04CF                     l2889:
  2319                           
  2320                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2321     04CF  083F               	movf	sprintf@c,w
  2322     04D0  00B5               	movwf	??_sprintf
  2323     04D1  0735               	addwf	??_sprintf,w
  2324     04D2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2325     04D3  0084               	movwf	4
  2326     04D4  120A  118A  2642  120A  118A  	fcall	stringdir
  2327     04D9  00B6               	movwf	??_sprintf+1
  2328     04DA  120A  118A  2642  120A  118A  	fcall	stringdir
  2329     04DF  00B7               	movwf	??_sprintf+2
  2330     04E0  0837               	movf	??_sprintf+2,w
  2331     04E1  023B               	subwf	sprintf@val+1,w
  2332     04E2  1D03               	skipz
  2333     04E3  2CE6               	goto	u2675
  2334     04E4  0836               	movf	??_sprintf+1,w
  2335     04E5  023A               	subwf	sprintf@val,w
  2336     04E6                     u2675:
  2337     04E6  1803               	skipnc
  2338     04E7  2CE9               	goto	u2671
  2339     04E8  2CEA               	goto	u2670
  2340     04E9                     u2671:
  2341     04E9  2CEB               	goto	l2893
  2342     04EA                     u2670:
  2343     04EA  2CF5               	goto	l2895
  2344     04EB                     l2893:
  2345     04EB  3001               	movlw	1
  2346     04EC  00B5               	movwf	??_sprintf
  2347     04ED  0835               	movf	??_sprintf,w
  2348     04EE  07BF               	addwf	sprintf@c,f
  2349     04EF  3005               	movlw	5
  2350     04F0  063F               	xorwf	sprintf@c,w
  2351     04F1  1D03               	btfss	3,2
  2352     04F2  2CF4               	goto	u2681
  2353     04F3  2CF5               	goto	u2680
  2354     04F4                     u2681:
  2355     04F4  2CCF               	goto	l2889
  2356     04F5                     u2680:
  2357     04F5                     l2895:
  2358                           
  2359                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2360     04F5  083D               	movf	sprintf@width,w
  2361     04F6  043E               	iorwf	sprintf@width+1,w
  2362     04F7  1903               	btfsc	3,2
  2363     04F8  2CFA               	goto	u2691
  2364     04F9  2CFB               	goto	u2690
  2365     04FA                     u2691:
  2366     04FA  2D07               	goto	l451
  2367     04FB                     u2690:
  2368     04FB                     l2897:
  2369     04FB  083C               	movf	sprintf@flag,w
  2370     04FC  3903               	andlw	3
  2371     04FD  1903               	btfsc	3,2
  2372     04FE  2D00               	goto	u2701
  2373     04FF  2D01               	goto	u2700
  2374     0500                     u2701:
  2375     0500  2D07               	goto	l451
  2376     0501                     u2700:
  2377     0501                     l2899:
  2378                           
  2379                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2380     0501  30FF               	movlw	255
  2381     0502  07BD               	addwf	sprintf@width,f
  2382     0503  1803               	skipnc
  2383     0504  0ABE               	incf	sprintf@width+1,f
  2384     0505  30FF               	movlw	255
  2385     0506  07BE               	addwf	sprintf@width+1,f
  2386     0507                     l451:
  2387                           
  2388                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2389     0507  083E               	movf	sprintf@width+1,w
  2390     0508  3A80               	xorlw	128
  2391     0509  3C80               	sublw	128
  2392     050A  1D03               	skipz
  2393     050B  2D0E               	goto	u2715
  2394     050C  083D               	movf	sprintf@width,w
  2395     050D  023F               	subwf	sprintf@c,w
  2396     050E                     u2715:
  2397     050E  1803               	skipnc
  2398     050F  2D11               	goto	u2711
  2399     0510  2D12               	goto	u2710
  2400     0511                     u2711:
  2401     0511  2D1E               	goto	l2903
  2402     0512                     u2710:
  2403     0512                     l2901:
  2404                           
  2405                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2406     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2407     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2408     0514  083F               	movf	sprintf@c,w
  2409     0515  00B5               	movwf	??_sprintf
  2410     0516  01B6               	clrf	??_sprintf+1
  2411     0517  0835               	movf	??_sprintf,w
  2412     0518  02BD               	subwf	sprintf@width,f
  2413     0519  0836               	movf	??_sprintf+1,w
  2414     051A  1C03               	skipc
  2415     051B  03BE               	decf	sprintf@width+1,f
  2416     051C  02BE               	subwf	sprintf@width+1,f
  2417     051D  2D22               	goto	l2905
  2418     051E                     l2903:
  2419                           
  2420                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2421     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2422     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2423     0520  01BD               	clrf	sprintf@width
  2424     0521  01BE               	clrf	sprintf@width+1
  2425     0522                     l2905:
  2426                           
  2427                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2428     0522  1D3C               	btfss	sprintf@flag,2
  2429     0523  2D25               	goto	u2721
  2430     0524  2D26               	goto	u2720
  2431     0525                     u2721:
  2432     0525  2D51               	goto	l2921
  2433     0526                     u2720:
  2434     0526                     l2907:
  2435                           
  2436                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2437     0526  083C               	movf	sprintf@flag,w
  2438     0527  3903               	andlw	3
  2439     0528  1903               	btfsc	3,2
  2440     0529  2D2B               	goto	u2731
  2441     052A  2D2C               	goto	u2730
  2442     052B                     u2731:
  2443     052B  2D35               	goto	l2913
  2444     052C                     u2730:
  2445     052C                     l2909:
  2446                           
  2447                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2448     052C  0840               	movf	sprintf@sp,w
  2449     052D  0084               	movwf	4
  2450     052E  302D               	movlw	45
  2451     052F  1383               	bcf	3,7	;select IRP bank0
  2452     0530  0080               	movwf	0
  2453     0531                     l2911:
  2454     0531  3001               	movlw	1
  2455     0532  00B5               	movwf	??_sprintf
  2456     0533  0835               	movf	??_sprintf,w
  2457     0534  07C0               	addwf	sprintf@sp,f
  2458     0535                     l2913:
  2459                           
  2460                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2461     0535  083D               	movf	sprintf@width,w
  2462     0536  043E               	iorwf	sprintf@width+1,w
  2463     0537  1903               	btfsc	3,2
  2464     0538  2D3A               	goto	u2741
  2465     0539  2D3B               	goto	u2740
  2466     053A                     u2741:
  2467     053A  2D7B               	goto	l2935
  2468     053B                     u2740:
  2469     053B                     l2915:
  2470                           
  2471                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2472     053B  0840               	movf	sprintf@sp,w
  2473     053C  0084               	movwf	4
  2474     053D  3030               	movlw	48
  2475     053E  1383               	bcf	3,7	;select IRP bank0
  2476     053F  0080               	movwf	0
  2477     0540                     l2917:
  2478     0540  3001               	movlw	1
  2479     0541  00B5               	movwf	??_sprintf
  2480     0542  0835               	movf	??_sprintf,w
  2481     0543  07C0               	addwf	sprintf@sp,f
  2482     0544                     l2919:
  2483     0544  30FF               	movlw	255
  2484     0545  07BD               	addwf	sprintf@width,f
  2485     0546  1803               	skipnc
  2486     0547  0ABE               	incf	sprintf@width+1,f
  2487     0548  30FF               	movlw	255
  2488     0549  07BE               	addwf	sprintf@width+1,f
  2489     054A  083D               	movf	sprintf@width,w
  2490     054B  043E               	iorwf	sprintf@width+1,w
  2491     054C  1D03               	btfss	3,2
  2492     054D  2D4F               	goto	u2751
  2493     054E  2D50               	goto	u2750
  2494     054F                     u2751:
  2495     054F  2D3B               	goto	l2915
  2496     0550                     u2750:
  2497     0550  2D7B               	goto	l2935
  2498     0551                     l2921:
  2499                           
  2500                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2501     0551  083D               	movf	sprintf@width,w
  2502     0552  043E               	iorwf	sprintf@width+1,w
  2503     0553  1903               	btfsc	3,2
  2504     0554  2D56               	goto	u2761
  2505     0555  2D57               	goto	u2760
  2506     0556                     u2761:
  2507     0556  2D6C               	goto	l2929
  2508     0557                     u2760:
  2509     0557                     l2923:
  2510                           
  2511                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2512     0557  0840               	movf	sprintf@sp,w
  2513     0558  0084               	movwf	4
  2514     0559  3020               	movlw	32
  2515     055A  1383               	bcf	3,7	;select IRP bank0
  2516     055B  0080               	movwf	0
  2517     055C                     l2925:
  2518     055C  3001               	movlw	1
  2519     055D  00B5               	movwf	??_sprintf
  2520     055E  0835               	movf	??_sprintf,w
  2521     055F  07C0               	addwf	sprintf@sp,f
  2522     0560                     l2927:
  2523     0560  30FF               	movlw	255
  2524     0561  07BD               	addwf	sprintf@width,f
  2525     0562  1803               	skipnc
  2526     0563  0ABE               	incf	sprintf@width+1,f
  2527     0564  30FF               	movlw	255
  2528     0565  07BE               	addwf	sprintf@width+1,f
  2529     0566  083D               	movf	sprintf@width,w
  2530     0567  043E               	iorwf	sprintf@width+1,w
  2531     0568  1D03               	btfss	3,2
  2532     0569  2D6B               	goto	u2771
  2533     056A  2D6C               	goto	u2770
  2534     056B                     u2771:
  2535     056B  2D57               	goto	l2923
  2536     056C                     u2770:
  2537     056C                     l2929:
  2538                           
  2539                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2540     056C  083C               	movf	sprintf@flag,w
  2541     056D  3903               	andlw	3
  2542     056E  1903               	btfsc	3,2
  2543     056F  2D71               	goto	u2781
  2544     0570  2D72               	goto	u2780
  2545     0571                     u2781:
  2546     0571  2D7B               	goto	l2935
  2547     0572                     u2780:
  2548     0572                     l2931:
  2549                           
  2550                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2551     0572  0840               	movf	sprintf@sp,w
  2552     0573  0084               	movwf	4
  2553     0574  302D               	movlw	45
  2554     0575  1383               	bcf	3,7	;select IRP bank0
  2555     0576  0080               	movwf	0
  2556     0577                     l2933:
  2557     0577  3001               	movlw	1
  2558     0578  00B5               	movwf	??_sprintf
  2559     0579  0835               	movf	??_sprintf,w
  2560     057A  07C0               	addwf	sprintf@sp,f
  2561     057B                     l2935:
  2562                           
  2563                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2564     057B  083F               	movf	sprintf@c,w
  2565     057C  00B8               	movwf	sprintf@prec
  2566                           
  2567                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2568     057D  2DB5               	goto	l2943
  2569     057E                     l2937:
  2570                           
  2571                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2572     057E  300A               	movlw	10
  2573     057F  00A8               	movwf	___lwmod@divisor
  2574     0580  3000               	movlw	0
  2575     0581  00A9               	movwf	___lwmod@divisor+1
  2576     0582  0838               	movf	sprintf@prec,w
  2577     0583  00B5               	movwf	??_sprintf
  2578     0584  0735               	addwf	??_sprintf,w
  2579     0585  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2580     0586  0084               	movwf	4
  2581     0587  120A  118A  2642  120A  118A  	fcall	stringdir
  2582     058C  00A0               	movwf	___lwdiv@divisor
  2583     058D  120A  118A  2642  120A  118A  	fcall	stringdir
  2584     0592  00A1               	movwf	___lwdiv@divisor+1
  2585     0593  083B               	movf	sprintf@val+1,w
  2586     0594  00A3               	movwf	___lwdiv@dividend+1
  2587     0595  083A               	movf	sprintf@val,w
  2588     0596  00A2               	movwf	___lwdiv@dividend
  2589     0597  120A  118A  26D3  120A  118A  	fcall	___lwdiv
  2590     059C  1283               	bcf	3,5	;RP0=0, select bank0
  2591     059D  1303               	bcf	3,6	;RP1=0, select bank0
  2592     059E  0821               	movf	?___lwdiv+1,w
  2593     059F  00AB               	movwf	___lwmod@dividend+1
  2594     05A0  0820               	movf	?___lwdiv,w
  2595     05A1  00AA               	movwf	___lwmod@dividend
  2596     05A2  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2597     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2598     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2599     05A9  0828               	movf	?___lwmod,w
  2600     05AA  3E30               	addlw	48
  2601     05AB  00BF               	movwf	sprintf@c
  2602     05AC                     l2939:
  2603                           
  2604                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2605     05AC  0840               	movf	sprintf@sp,w
  2606     05AD  0084               	movwf	4
  2607     05AE  083F               	movf	sprintf@c,w
  2608     05AF  1383               	bcf	3,7	;select IRP bank0
  2609     05B0  0080               	movwf	0
  2610     05B1                     l2941:
  2611     05B1  3001               	movlw	1
  2612     05B2  00B5               	movwf	??_sprintf
  2613     05B3  0835               	movf	??_sprintf,w
  2614     05B4  07C0               	addwf	sprintf@sp,f
  2615     05B5                     l2943:
  2616                           
  2617                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2618     05B5  30FF               	movlw	255
  2619     05B6  00B5               	movwf	??_sprintf
  2620     05B7  0835               	movf	??_sprintf,w
  2621     05B8  07B8               	addwf	sprintf@prec,f
  2622     05B9  0A38               	incf	sprintf@prec,w
  2623     05BA  1D03               	btfss	3,2
  2624     05BB  2DBD               	goto	u2791
  2625     05BC  2DBE               	goto	u2790
  2626     05BD                     u2791:
  2627     05BD  2D7E               	goto	l2937
  2628     05BE                     u2790:
  2629     05BE                     l2945:
  2630                           
  2631                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2632     05BE  3001               	movlw	1
  2633     05BF  07AE               	addwf	sprintf@f,f
  2634     05C0  30FF               	movlw	-1
  2635     05C1  072E               	addwf	sprintf@f,w
  2636     05C2  0084               	movwf	4
  2637     05C3  120A  118A  2642  120A  118A  	fcall	stringdir
  2638     05C8  00BF               	movwf	sprintf@c
  2639     05C9  083F               	movf	sprintf@c,w
  2640     05CA  1D03               	btfss	3,2
  2641     05CB  2DCD               	goto	u2801
  2642     05CC  2DCE               	goto	u2800
  2643     05CD                     u2801:
  2644     05CD  2C02               	goto	l2839
  2645     05CE                     u2800:
  2646     05CE                     l2947:
  2647                           
  2648                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2649     05CE  0840               	movf	sprintf@sp,w
  2650     05CF  0084               	movwf	4
  2651     05D0  1383               	bcf	3,7	;select IRP bank0
  2652     05D1  0180               	clrf	0
  2653     05D2                     l468:
  2654     05D2  0008               	return
  2655     05D3                     __end_of_sprintf:
  2656                           
  2657                           	psect	text5
  2658     0CDA                     __ptext5:	
  2659 ;; *************** function _isdigit *****************
  2660 ;; Defined at:
  2661 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  c               1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  c               1    1[BANK0 ] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       0       0       0
  2676 ;;      Locals:         0       2       0       0       0
  2677 ;;      Temps:          0       0       0       0       0
  2678 ;;      Totals:         0       2       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 3
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_sprintf
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689     0CDA                     _isdigit:	
  2690                           ;psect for function _isdigit
  2691                           
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2695                           ;isdigit@c stored from wreg
  2696     0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  2698     0CDC  00A1               	movwf	isdigit@c
  2699     0CDD                     l2769:
  2700     0CDD  01A0               	clrf	_isdigit$1027
  2701     0CDE                     l2771:
  2702     0CDE  303A               	movlw	58
  2703     0CDF  0221               	subwf	isdigit@c,w
  2704     0CE0  1803               	skipnc
  2705     0CE1  2CE3               	goto	u2471
  2706     0CE2  2CE4               	goto	u2470
  2707     0CE3                     u2471:
  2708     0CE3  2CEC               	goto	l2777
  2709     0CE4                     u2470:
  2710     0CE4                     l2773:
  2711     0CE4  3030               	movlw	48
  2712     0CE5  0221               	subwf	isdigit@c,w
  2713     0CE6  1C03               	skipc
  2714     0CE7  2CE9               	goto	u2481
  2715     0CE8  2CEA               	goto	u2480
  2716     0CE9                     u2481:
  2717     0CE9  2CEC               	goto	l2777
  2718     0CEA                     u2480:
  2719     0CEA                     l2775:
  2720     0CEA  01A0               	clrf	_isdigit$1027
  2721     0CEB  0AA0               	incf	_isdigit$1027,f
  2722     0CEC                     l2777:
  2723     0CEC  0C20               	rrf	_isdigit$1027,w
  2724     0CED                     l925:
  2725     0CED  0008               	return
  2726     0CEE                     __end_of_isdigit:
  2727                           
  2728                           	psect	text6
  2729     0ECF                     __ptext6:	
  2730 ;; *************** function ___wmul *****************
  2731 ;; Defined at:
  2732 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2735 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  product         2    4[BANK0 ] unsigned int 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[BANK0 ] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       4       0       0       0
  2748 ;;      Locals:         0       2       0       0       0
  2749 ;;      Temps:          0       0       0       0       0
  2750 ;;      Totals:         0       6       0       0       0
  2751 ;;Total ram usage:        6 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 3
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_sprintf
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761     0ECF                     ___wmul:	
  2762                           ;psect for function ___wmul
  2763                           
  2764     0ECF                     l2781:	
  2765                           ;incstack = 0
  2766                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2767                           
  2768     0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2769     0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2770     0ED1  01A4               	clrf	___wmul@product
  2771     0ED2  01A5               	clrf	___wmul@product+1
  2772     0ED3                     l2783:
  2773     0ED3  1C20               	btfss	___wmul@multiplier,0
  2774     0ED4  2ED6               	goto	u2491
  2775     0ED5  2ED7               	goto	u2490
  2776     0ED6                     u2491:
  2777     0ED6  2EDD               	goto	l472
  2778     0ED7                     u2490:
  2779     0ED7                     l2785:
  2780     0ED7  0822               	movf	___wmul@multiplicand,w
  2781     0ED8  07A4               	addwf	___wmul@product,f
  2782     0ED9  1803               	skipnc
  2783     0EDA  0AA5               	incf	___wmul@product+1,f
  2784     0EDB  0823               	movf	___wmul@multiplicand+1,w
  2785     0EDC  07A5               	addwf	___wmul@product+1,f
  2786     0EDD                     l472:
  2787     0EDD  3001               	movlw	1
  2788     0EDE                     u2505:
  2789     0EDE  1003               	clrc
  2790     0EDF  0DA2               	rlf	___wmul@multiplicand,f
  2791     0EE0  0DA3               	rlf	___wmul@multiplicand+1,f
  2792     0EE1  3EFF               	addlw	-1
  2793     0EE2  1D03               	skipz
  2794     0EE3  2EDE               	goto	u2505
  2795     0EE4                     l2787:
  2796     0EE4  3001               	movlw	1
  2797     0EE5                     u2515:
  2798     0EE5  1003               	clrc
  2799     0EE6  0CA1               	rrf	___wmul@multiplier+1,f
  2800     0EE7  0CA0               	rrf	___wmul@multiplier,f
  2801     0EE8  3EFF               	addlw	-1
  2802     0EE9  1D03               	skipz
  2803     0EEA  2EE5               	goto	u2515
  2804     0EEB                     l2789:
  2805     0EEB  0820               	movf	___wmul@multiplier,w
  2806     0EEC  0421               	iorwf	___wmul@multiplier+1,w
  2807     0EED  1D03               	btfss	3,2
  2808     0EEE  2EF0               	goto	u2521
  2809     0EEF  2EF1               	goto	u2520
  2810     0EF0                     u2521:
  2811     0EF0  2ED3               	goto	l2783
  2812     0EF1                     u2520:
  2813     0EF1                     l2791:
  2814     0EF1  0825               	movf	___wmul@product+1,w
  2815     0EF2  00A1               	movwf	?___wmul+1
  2816     0EF3  0824               	movf	___wmul@product,w
  2817     0EF4  00A0               	movwf	?___wmul
  2818     0EF5                     l474:
  2819     0EF5  0008               	return
  2820     0EF6                     __end_of___wmul:
  2821                           
  2822                           	psect	text7
  2823     0FC4                     __ptext7:	
  2824 ;; *************** function ___lwmod *****************
  2825 ;; Defined at:
  2826 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  divisor         2    8[BANK0 ] unsigned int 
  2829 ;;  dividend        2   10[BANK0 ] unsigned int 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  counter         1   13[BANK0 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2    8[BANK0 ] unsigned int 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       4       0       0       0
  2842 ;;      Locals:         0       1       0       0       0
  2843 ;;      Temps:          0       1       0       0       0
  2844 ;;      Totals:         0       6       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 3
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_sprintf
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855     0FC4                     ___lwmod:	
  2856                           ;psect for function ___lwmod
  2857                           
  2858     0FC4                     l1973:	
  2859                           ;incstack = 0
  2860                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2861                           
  2862     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0FC6  0828               	movf	___lwmod@divisor,w
  2865     0FC7  0429               	iorwf	___lwmod@divisor+1,w
  2866     0FC8  1903               	btfsc	3,2
  2867     0FC9  2FCB               	goto	u1451
  2868     0FCA  2FCC               	goto	u1450
  2869     0FCB                     u1451:
  2870     0FCB  2FFB               	goto	l1991
  2871     0FCC                     u1450:
  2872     0FCC                     l1975:
  2873     0FCC  01AD               	clrf	___lwmod@counter
  2874     0FCD  0AAD               	incf	___lwmod@counter,f
  2875     0FCE  2FDA               	goto	l1981
  2876     0FCF                     l1977:
  2877     0FCF  3001               	movlw	1
  2878     0FD0                     u1465:
  2879     0FD0  1003               	clrc
  2880     0FD1  0DA8               	rlf	___lwmod@divisor,f
  2881     0FD2  0DA9               	rlf	___lwmod@divisor+1,f
  2882     0FD3  3EFF               	addlw	-1
  2883     0FD4  1D03               	skipz
  2884     0FD5  2FD0               	goto	u1465
  2885     0FD6                     l1979:
  2886     0FD6  3001               	movlw	1
  2887     0FD7  00AC               	movwf	??___lwmod
  2888     0FD8  082C               	movf	??___lwmod,w
  2889     0FD9  07AD               	addwf	___lwmod@counter,f
  2890     0FDA                     l1981:
  2891     0FDA  1FA9               	btfss	___lwmod@divisor+1,7
  2892     0FDB  2FDD               	goto	u1471
  2893     0FDC  2FDE               	goto	u1470
  2894     0FDD                     u1471:
  2895     0FDD  2FCF               	goto	l1977
  2896     0FDE                     u1470:
  2897     0FDE                     l1983:
  2898     0FDE  0829               	movf	___lwmod@divisor+1,w
  2899     0FDF  022B               	subwf	___lwmod@dividend+1,w
  2900     0FE0  1D03               	skipz
  2901     0FE1  2FE4               	goto	u1485
  2902     0FE2  0828               	movf	___lwmod@divisor,w
  2903     0FE3  022A               	subwf	___lwmod@dividend,w
  2904     0FE4                     u1485:
  2905     0FE4  1C03               	skipc
  2906     0FE5  2FE7               	goto	u1481
  2907     0FE6  2FE8               	goto	u1480
  2908     0FE7                     u1481:
  2909     0FE7  2FEE               	goto	l1987
  2910     0FE8                     u1480:
  2911     0FE8                     l1985:
  2912     0FE8  0828               	movf	___lwmod@divisor,w
  2913     0FE9  02AA               	subwf	___lwmod@dividend,f
  2914     0FEA  0829               	movf	___lwmod@divisor+1,w
  2915     0FEB  1C03               	skipc
  2916     0FEC  03AB               	decf	___lwmod@dividend+1,f
  2917     0FED  02AB               	subwf	___lwmod@dividend+1,f
  2918     0FEE                     l1987:
  2919     0FEE  3001               	movlw	1
  2920     0FEF                     u1495:
  2921     0FEF  1003               	clrc
  2922     0FF0  0CA9               	rrf	___lwmod@divisor+1,f
  2923     0FF1  0CA8               	rrf	___lwmod@divisor,f
  2924     0FF2  3EFF               	addlw	-1
  2925     0FF3  1D03               	skipz
  2926     0FF4  2FEF               	goto	u1495
  2927     0FF5                     l1989:
  2928     0FF5  3001               	movlw	1
  2929     0FF6  02AD               	subwf	___lwmod@counter,f
  2930     0FF7  1D03               	btfss	3,2
  2931     0FF8  2FFA               	goto	u1501
  2932     0FF9  2FFB               	goto	u1500
  2933     0FFA                     u1501:
  2934     0FFA  2FDE               	goto	l1983
  2935     0FFB                     u1500:
  2936     0FFB                     l1991:
  2937     0FFB  082B               	movf	___lwmod@dividend+1,w
  2938     0FFC  00A9               	movwf	?___lwmod+1
  2939     0FFD  082A               	movf	___lwmod@dividend,w
  2940     0FFE  00A8               	movwf	?___lwmod
  2941     0FFF                     l754:
  2942     0FFF  0008               	return
  2943     1000                     __end_of___lwmod:
  2944                           
  2945                           	psect	text8
  2946     06D3                     __ptext8:	
  2947 ;; *************** function ___lwdiv *****************
  2948 ;; Defined at:
  2949 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  divisor         2    0[BANK0 ] unsigned int 
  2952 ;;  dividend        2    2[BANK0 ] unsigned int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  quotient        2    5[BANK0 ] unsigned int 
  2955 ;;  counter         1    7[BANK0 ] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  2    0[BANK0 ] unsigned int 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       4       0       0       0
  2966 ;;      Locals:         0       3       0       0       0
  2967 ;;      Temps:          0       1       0       0       0
  2968 ;;      Totals:         0       8       0       0       0
  2969 ;;Total ram usage:        8 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 3
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_sprintf
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979     06D3                     ___lwdiv:	
  2980                           ;psect for function ___lwdiv
  2981                           
  2982     06D3                     l1947:	
  2983                           ;incstack = 0
  2984                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2985                           
  2986     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2987     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2988     06D5  01A5               	clrf	___lwdiv@quotient
  2989     06D6  01A6               	clrf	___lwdiv@quotient+1
  2990     06D7                     l1949:
  2991     06D7  0820               	movf	___lwdiv@divisor,w
  2992     06D8  0421               	iorwf	___lwdiv@divisor+1,w
  2993     06D9  1903               	btfsc	3,2
  2994     06DA  2EDC               	goto	u1381
  2995     06DB  2EDD               	goto	u1380
  2996     06DC                     u1381:
  2997     06DC  2F14               	goto	l1969
  2998     06DD                     u1380:
  2999     06DD                     l1951:
  3000     06DD  01A7               	clrf	___lwdiv@counter
  3001     06DE  0AA7               	incf	___lwdiv@counter,f
  3002     06DF  2EEB               	goto	l1957
  3003     06E0                     l1953:
  3004     06E0  3001               	movlw	1
  3005     06E1                     u1395:
  3006     06E1  1003               	clrc
  3007     06E2  0DA0               	rlf	___lwdiv@divisor,f
  3008     06E3  0DA1               	rlf	___lwdiv@divisor+1,f
  3009     06E4  3EFF               	addlw	-1
  3010     06E5  1D03               	skipz
  3011     06E6  2EE1               	goto	u1395
  3012     06E7                     l1955:
  3013     06E7  3001               	movlw	1
  3014     06E8  00A4               	movwf	??___lwdiv
  3015     06E9  0824               	movf	??___lwdiv,w
  3016     06EA  07A7               	addwf	___lwdiv@counter,f
  3017     06EB                     l1957:
  3018     06EB  1FA1               	btfss	___lwdiv@divisor+1,7
  3019     06EC  2EEE               	goto	u1401
  3020     06ED  2EEF               	goto	u1400
  3021     06EE                     u1401:
  3022     06EE  2EE0               	goto	l1953
  3023     06EF                     u1400:
  3024     06EF                     l1959:
  3025     06EF  3001               	movlw	1
  3026     06F0                     u1415:
  3027     06F0  1003               	clrc
  3028     06F1  0DA5               	rlf	___lwdiv@quotient,f
  3029     06F2  0DA6               	rlf	___lwdiv@quotient+1,f
  3030     06F3  3EFF               	addlw	-1
  3031     06F4  1D03               	skipz
  3032     06F5  2EF0               	goto	u1415
  3033     06F6  0821               	movf	___lwdiv@divisor+1,w
  3034     06F7  0223               	subwf	___lwdiv@dividend+1,w
  3035     06F8  1D03               	skipz
  3036     06F9  2EFC               	goto	u1425
  3037     06FA  0820               	movf	___lwdiv@divisor,w
  3038     06FB  0222               	subwf	___lwdiv@dividend,w
  3039     06FC                     u1425:
  3040     06FC  1C03               	skipc
  3041     06FD  2EFF               	goto	u1421
  3042     06FE  2F00               	goto	u1420
  3043     06FF                     u1421:
  3044     06FF  2F07               	goto	l1965
  3045     0700                     u1420:
  3046     0700                     l1961:
  3047     0700  0820               	movf	___lwdiv@divisor,w
  3048     0701  02A2               	subwf	___lwdiv@dividend,f
  3049     0702  0821               	movf	___lwdiv@divisor+1,w
  3050     0703  1C03               	skipc
  3051     0704  03A3               	decf	___lwdiv@dividend+1,f
  3052     0705  02A3               	subwf	___lwdiv@dividend+1,f
  3053     0706                     l1963:
  3054     0706  1425               	bsf	___lwdiv@quotient,0
  3055     0707                     l1965:
  3056     0707  3001               	movlw	1
  3057     0708                     u1435:
  3058     0708  1003               	clrc
  3059     0709  0CA1               	rrf	___lwdiv@divisor+1,f
  3060     070A  0CA0               	rrf	___lwdiv@divisor,f
  3061     070B  3EFF               	addlw	-1
  3062     070C  1D03               	skipz
  3063     070D  2F08               	goto	u1435
  3064     070E                     l1967:
  3065     070E  3001               	movlw	1
  3066     070F  02A7               	subwf	___lwdiv@counter,f
  3067     0710  1D03               	btfss	3,2
  3068     0711  2F13               	goto	u1441
  3069     0712  2F14               	goto	u1440
  3070     0713                     u1441:
  3071     0713  2EEF               	goto	l1959
  3072     0714                     u1440:
  3073     0714                     l1969:
  3074     0714  0826               	movf	___lwdiv@quotient+1,w
  3075     0715  00A1               	movwf	?___lwdiv+1
  3076     0716  0825               	movf	___lwdiv@quotient,w
  3077     0717  00A0               	movwf	?___lwdiv
  3078     0718                     l744:
  3079     0718  0008               	return
  3080     0719                     __end_of___lwdiv:
  3081                           
  3082                           	psect	text9
  3083     0719                     __ptext9:	
  3084 ;; *************** function _Lcd_Write_String *****************
  3085 ;; Defined at:
  3086 ;;		line 98 in file "LCD.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  a               2    5[BANK0 ] PTR unsigned char 
  3089 ;;		 -> STR_10(3), STR_8(3), STR_6(3), STR_4(2), 
  3090 ;;		 -> buffer(20), STR_1(4), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  i               2   10[BANK0 ] int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       2       0       0       0
  3103 ;;      Locals:         0       2       0       0       0
  3104 ;;      Temps:          0       3       0       0       0
  3105 ;;      Totals:         0       7       0       0       0
  3106 ;;Total ram usage:        7 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 5
  3109 ;; This function calls:
  3110 ;;		_Lcd_Write_Char
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;;		_Slave1
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117     0719                     _Lcd_Write_String:	
  3118                           ;psect for function _Lcd_Write_String
  3119                           
  3120     0719                     l2829:	
  3121                           ;incstack = 0
  3122                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3123                           
  3124                           
  3125                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3126     0719  1283               	bcf	3,5	;RP0=0, select bank0
  3127     071A  1303               	bcf	3,6	;RP1=0, select bank0
  3128     071B  01AA               	clrf	Lcd_Write_String@i
  3129     071C  01AB               	clrf	Lcd_Write_String@i+1
  3130     071D  2F42               	goto	l2835
  3131     071E                     l2831:
  3132                           
  3133                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3134     071E  082A               	movf	Lcd_Write_String@i,w
  3135     071F  0725               	addwf	Lcd_Write_String@a,w
  3136     0720  00A8               	movwf	??_Lcd_Write_String+1
  3137     0721  0826               	movf	Lcd_Write_String@a+1,w
  3138     0722  00A7               	movwf	??_Lcd_Write_String
  3139     0723  1803               	skipnc
  3140     0724  0AA7               	incf	??_Lcd_Write_String,f
  3141     0725  1FAA               	btfss	Lcd_Write_String@i,7
  3142     0726  2F28               	goto	u2590
  3143     0727  03A7               	decf	??_Lcd_Write_String,f
  3144     0728                     u2590:
  3145     0728  1283               	bcf	3,5	;RP0=0, select bank0
  3146     0729  1303               	bcf	3,6	;RP1=0, select bank0
  3147     072A  0827               	movf	??_Lcd_Write_String,w
  3148     072B  00A9               	movwf	??_Lcd_Write_String+2
  3149     072C  0829               	movf	??_Lcd_Write_String+2,w
  3150     072D  00FF               	movwf	btemp+1
  3151     072E  0828               	movf	??_Lcd_Write_String+1,w
  3152     072F  0084               	movwf	4
  3153     0730  120A  118A  2638  120A  118A  	fcall	stringtab
  3154     0735  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  3155     073A                     l2833:
  3156     073A  3001               	movlw	1
  3157     073B  1283               	bcf	3,5	;RP0=0, select bank0
  3158     073C  1303               	bcf	3,6	;RP1=0, select bank0
  3159     073D  07AA               	addwf	Lcd_Write_String@i,f
  3160     073E  1803               	skipnc
  3161     073F  0AAB               	incf	Lcd_Write_String@i+1,f
  3162     0740  3000               	movlw	0
  3163     0741  07AB               	addwf	Lcd_Write_String@i+1,f
  3164     0742                     l2835:
  3165     0742  082A               	movf	Lcd_Write_String@i,w
  3166     0743  0725               	addwf	Lcd_Write_String@a,w
  3167     0744  00A8               	movwf	??_Lcd_Write_String+1
  3168     0745  0826               	movf	Lcd_Write_String@a+1,w
  3169     0746  00A7               	movwf	??_Lcd_Write_String
  3170     0747  1803               	skipnc
  3171     0748  0AA7               	incf	??_Lcd_Write_String,f
  3172     0749  1FAA               	btfss	Lcd_Write_String@i,7
  3173     074A  2F4C               	goto	u2600
  3174     074B  03A7               	decf	??_Lcd_Write_String,f
  3175     074C                     u2600:
  3176     074C  1283               	bcf	3,5	;RP0=0, select bank0
  3177     074D  1303               	bcf	3,6	;RP1=0, select bank0
  3178     074E  0827               	movf	??_Lcd_Write_String,w
  3179     074F  00A9               	movwf	??_Lcd_Write_String+2
  3180     0750  0829               	movf	??_Lcd_Write_String+2,w
  3181     0751  00FF               	movwf	btemp+1
  3182     0752  0828               	movf	??_Lcd_Write_String+1,w
  3183     0753  0084               	movwf	4
  3184     0754  120A  118A  2638  120A  118A  	fcall	stringtab
  3185     0759  3A00               	xorlw	0
  3186     075A  1D03               	skipz
  3187     075B  2F5D               	goto	u2611
  3188     075C  2F5E               	goto	u2610
  3189     075D                     u2611:
  3190     075D  2F1E               	goto	l2831
  3191     075E                     u2610:
  3192     075E                     l326:
  3193     075E  0008               	return
  3194     075F                     __end_of_Lcd_Write_String:
  3195                           
  3196                           	psect	text10
  3197     0F8B                     __ptext10:	
  3198 ;; *************** function _Lcd_Write_Char *****************
  3199 ;; Defined at:
  3200 ;;		line 83 in file "LCD.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  a               1    wreg     unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  a               1    4[BANK0 ] unsigned char 
  3205 ;;  y               1    3[BANK0 ] unsigned char 
  3206 ;;  temp            1    2[BANK0 ] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         0       3       0       0       0
  3218 ;;      Temps:          0       1       0       0       0
  3219 ;;      Totals:         0       4       0       0       0
  3220 ;;Total ram usage:        4 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 4
  3223 ;; This function calls:
  3224 ;;		_Lcd_Port
  3225 ;; This function is called by:
  3226 ;;		_Lcd_Write_String
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230     0F8B                     _Lcd_Write_Char:	
  3231                           ;psect for function _Lcd_Write_Char
  3232                           
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3236                           ;Lcd_Write_Char@a stored from wreg
  3237     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3238     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  3239     0F8D  00A4               	movwf	Lcd_Write_Char@a
  3240     0F8E                     l2749:
  3241                           
  3242                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3243     0F8E  0824               	movf	Lcd_Write_Char@a,w
  3244     0F8F  390F               	andlw	15
  3245     0F90  00A2               	movwf	Lcd_Write_Char@temp
  3246                           
  3247                           ;LCD.c: 86:     y = a & 0xF0;
  3248     0F91  0824               	movf	Lcd_Write_Char@a,w
  3249     0F92  39F0               	andlw	240
  3250     0F93  00A3               	movwf	Lcd_Write_Char@y
  3251     0F94                     l2751:
  3252                           
  3253                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  3254     0F94  1708               	bsf	8,6	;volatile
  3255     0F95                     l2753:
  3256                           
  3257                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3258     0F95  0823               	movf	Lcd_Write_Char@y,w
  3259     0F96  00A1               	movwf	??_Lcd_Write_Char
  3260     0F97  3004               	movlw	4
  3261     0F98                     u2465:
  3262     0F98  1003               	clrc
  3263     0F99  0CA1               	rrf	??_Lcd_Write_Char,f
  3264     0F9A  3EFF               	addlw	-1
  3265     0F9B  1D03               	skipz
  3266     0F9C  2F98               	goto	u2465
  3267     0F9D  0821               	movf	??_Lcd_Write_Char,w
  3268     0F9E  120A  158A  2537  120A  158A  	fcall	_Lcd_Port
  3269     0FA3                     l2755:
  3270                           
  3271                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  3272     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3273     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3274     0FA5  1788               	bsf	8,7	;volatile
  3275     0FA6                     l2757:
  3276                           
  3277                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3278     0FA6  3019               	movlw	25
  3279     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3280     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3281     0FA9  00A1               	movwf	??_Lcd_Write_Char
  3282     0FAA                     u2877:
  3283     0FAA  0BA1               	decfsz	??_Lcd_Write_Char,f
  3284     0FAB  2FAA               	goto	u2877
  3285     0FAC  2FAD               	nop2
  3286     0FAD                     l2759:
  3287                           
  3288                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  3289     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3290     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3291     0FAF  1388               	bcf	8,7	;volatile
  3292     0FB0                     l2761:
  3293                           
  3294                           ;LCD.c: 92:     Lcd_Port(temp);
  3295     0FB0  0822               	movf	Lcd_Write_Char@temp,w
  3296     0FB1  120A  158A  2537  120A  158A  	fcall	_Lcd_Port
  3297     0FB6                     l2763:
  3298                           
  3299                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  3300     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3301     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3302     0FB8  1788               	bsf	8,7	;volatile
  3303     0FB9                     l2765:
  3304                           
  3305                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3306     0FB9  3019               	movlw	25
  3307     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3308     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3309     0FBC  00A1               	movwf	??_Lcd_Write_Char
  3310     0FBD                     u2887:
  3311     0FBD  0BA1               	decfsz	??_Lcd_Write_Char,f
  3312     0FBE  2FBD               	goto	u2887
  3313     0FBF  2FC0               	nop2
  3314     0FC0                     l2767:
  3315                           
  3316                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  3317     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3318     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3319     0FC2  1388               	bcf	8,7	;volatile
  3320     0FC3                     l320:
  3321     0FC3  0008               	return
  3322     0FC4                     __end_of_Lcd_Write_Char:
  3323                           
  3324                           	psect	text11
  3325     0687                     __ptext11:	
  3326 ;; *************** function _Lcd_Set_Cursor *****************
  3327 ;; Defined at:
  3328 ;;		line 48 in file "LCD.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  a               1    wreg     unsigned char 
  3331 ;;  b               1    4[BANK0 ] unsigned char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  a               1    6[BANK0 ] unsigned char 
  3334 ;;  temp            1    9[BANK0 ] unsigned char 
  3335 ;;  y               1    8[BANK0 ] unsigned char 
  3336 ;;  z               1    7[BANK0 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       1       0       0       0
  3347 ;;      Locals:         0       4       0       0       0
  3348 ;;      Temps:          0       1       0       0       0
  3349 ;;      Totals:         0       6       0       0       0
  3350 ;;Total ram usage:        6 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 5
  3353 ;; This function calls:
  3354 ;;		_Lcd_Cmd
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;;		_Slave1
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361     0687                     _Lcd_Set_Cursor:	
  3362                           ;psect for function _Lcd_Set_Cursor
  3363                           
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3367                           ;Lcd_Set_Cursor@a stored from wreg
  3368     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3369     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3370     0689  00A6               	movwf	Lcd_Set_Cursor@a
  3371     068A                     l2809:
  3372                           
  3373                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3374     068A  0326               	decf	Lcd_Set_Cursor@a,w
  3375     068B  1D03               	btfss	3,2
  3376     068C  2E8E               	goto	u2551
  3377     068D  2E8F               	goto	u2550
  3378     068E                     u2551:
  3379     068E  2EAE               	goto	l2819
  3380     068F                     u2550:
  3381     068F                     l2811:
  3382                           
  3383                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3384     068F  0824               	movf	Lcd_Set_Cursor@b,w
  3385     0690  3E7F               	addlw	127
  3386     0691  00A9               	movwf	Lcd_Set_Cursor@temp
  3387                           
  3388                           ;LCD.c: 52:         z = temp >> 4;
  3389     0692  0829               	movf	Lcd_Set_Cursor@temp,w
  3390     0693  00A5               	movwf	??_Lcd_Set_Cursor
  3391     0694  3004               	movlw	4
  3392     0695                     u2565:
  3393     0695  1003               	clrc
  3394     0696  0CA5               	rrf	??_Lcd_Set_Cursor,f
  3395     0697  3EFF               	addlw	-1
  3396     0698  1D03               	skipz
  3397     0699  2E95               	goto	u2565
  3398     069A  0825               	movf	??_Lcd_Set_Cursor,w
  3399     069B  00A7               	movwf	Lcd_Set_Cursor@z
  3400     069C                     l2813:
  3401                           
  3402                           ;LCD.c: 53:         y = temp & 0x0F;
  3403     069C  0829               	movf	Lcd_Set_Cursor@temp,w
  3404     069D  390F               	andlw	15
  3405     069E  00A8               	movwf	Lcd_Set_Cursor@y
  3406     069F                     l2815:
  3407                           
  3408                           ;LCD.c: 54:         Lcd_Cmd(z);
  3409     069F  0827               	movf	Lcd_Set_Cursor@z,w
  3410     06A0  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  3411     06A5                     l2817:
  3412                           
  3413                           ;LCD.c: 55:         Lcd_Cmd(y);
  3414     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3415     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3416     06A7  0828               	movf	Lcd_Set_Cursor@y,w
  3417     06A8  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  3418                           
  3419                           ;LCD.c: 56:     } else if (a == 2) {
  3420     06AD  2ED2               	goto	l314
  3421     06AE                     l2819:
  3422     06AE  3002               	movlw	2
  3423     06AF  0626               	xorwf	Lcd_Set_Cursor@a,w
  3424     06B0  1D03               	btfss	3,2
  3425     06B1  2EB3               	goto	u2571
  3426     06B2  2EB4               	goto	u2570
  3427     06B3                     u2571:
  3428     06B3  2ED2               	goto	l314
  3429     06B4                     u2570:
  3430     06B4                     l2821:
  3431                           
  3432                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3433     06B4  0824               	movf	Lcd_Set_Cursor@b,w
  3434     06B5  3EBF               	addlw	191
  3435     06B6  00A9               	movwf	Lcd_Set_Cursor@temp
  3436                           
  3437                           ;LCD.c: 58:         z = temp >> 4;
  3438     06B7  0829               	movf	Lcd_Set_Cursor@temp,w
  3439     06B8  00A5               	movwf	??_Lcd_Set_Cursor
  3440     06B9  3004               	movlw	4
  3441     06BA                     u2585:
  3442     06BA  1003               	clrc
  3443     06BB  0CA5               	rrf	??_Lcd_Set_Cursor,f
  3444     06BC  3EFF               	addlw	-1
  3445     06BD  1D03               	skipz
  3446     06BE  2EBA               	goto	u2585
  3447     06BF  0825               	movf	??_Lcd_Set_Cursor,w
  3448     06C0  00A7               	movwf	Lcd_Set_Cursor@z
  3449     06C1                     l2823:
  3450                           
  3451                           ;LCD.c: 59:         y = temp & 0x0F;
  3452     06C1  0829               	movf	Lcd_Set_Cursor@temp,w
  3453     06C2  390F               	andlw	15
  3454     06C3  00A8               	movwf	Lcd_Set_Cursor@y
  3455     06C4                     l2825:
  3456                           
  3457                           ;LCD.c: 60:         Lcd_Cmd(z);
  3458     06C4  0827               	movf	Lcd_Set_Cursor@z,w
  3459     06C5  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  3460     06CA                     l2827:
  3461                           
  3462                           ;LCD.c: 61:         Lcd_Cmd(y);
  3463     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3464     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3465     06CC  0828               	movf	Lcd_Set_Cursor@y,w
  3466     06CD  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  3467     06D2                     l314:
  3468     06D2  0008               	return
  3469     06D3                     __end_of_Lcd_Set_Cursor:
  3470                           
  3471                           	psect	text12
  3472     0EA8                     __ptext12:	
  3473 ;; *************** function _Set_year *****************
  3474 ;; Defined at:
  3475 ;;		line 355 in file "main_master.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  year            1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  year            1    2[BANK0 ] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, pclath, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         0       0       0       0       0
  3490 ;;      Locals:         0       1       0       0       0
  3491 ;;      Temps:          0       0       0       0       0
  3492 ;;      Totals:         0       1       0       0       0
  3493 ;;Total ram usage:        1 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 4
  3496 ;; This function calls:
  3497 ;;		_Dec_to_Bcd
  3498 ;;		_I2C_Start
  3499 ;;		_I2C_Stop
  3500 ;;		_I2C_Write
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506     0EA8                     _Set_year:	
  3507                           ;psect for function _Set_year
  3508                           
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  3512                           ;Set_year@year stored from wreg
  3513     0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3514     0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3515     0EAA  00A2               	movwf	Set_year@year
  3516     0EAB                     l3101:
  3517                           
  3518                           ;main_master.c: 356:     I2C_Start();
  3519     0EAB  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3520     0EB0                     l3103:
  3521                           
  3522                           ;main_master.c: 357:     I2C_Write(0xD0);
  3523     0EB0  30D0               	movlw	208
  3524     0EB1  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3525     0EB6                     l3105:
  3526                           
  3527                           ;main_master.c: 358:     I2C_Write(0x06);
  3528     0EB6  3006               	movlw	6
  3529     0EB7  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3530     0EBC                     l3107:
  3531                           
  3532                           ;main_master.c: 359:     I2C_Write(Dec_to_Bcd(year));
  3533     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3534     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3535     0EBE  0822               	movf	Set_year@year,w
  3536     0EBF  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3537     0EC4  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3538     0EC9                     l3109:
  3539                           
  3540                           ;main_master.c: 360:     I2C_Stop();
  3541     0EC9  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3542     0ECE                     l271:
  3543     0ECE  0008               	return
  3544     0ECF                     __end_of_Set_year:
  3545                           
  3546                           	psect	text13
  3547     0E81                     __ptext13:	
  3548 ;; *************** function _Set_sec *****************
  3549 ;; Defined at:
  3550 ;;		line 307 in file "main_master.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  sec             1    wreg     unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  sec             1    2[BANK0 ] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       1       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         0       1       0       0       0
  3568 ;;Total ram usage:        1 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 4
  3571 ;; This function calls:
  3572 ;;		_Dec_to_Bcd
  3573 ;;		_I2C_Start
  3574 ;;		_I2C_Stop
  3575 ;;		_I2C_Write
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581     0E81                     _Set_sec:	
  3582                           ;psect for function _Set_sec
  3583                           
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  3587                           ;Set_sec@sec stored from wreg
  3588     0E81  1283               	bcf	3,5	;RP0=0, select bank0
  3589     0E82  1303               	bcf	3,6	;RP1=0, select bank0
  3590     0E83  00A2               	movwf	Set_sec@sec
  3591     0E84                     l3051:
  3592                           
  3593                           ;main_master.c: 308:     I2C_Start();
  3594     0E84  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3595     0E89                     l3053:
  3596                           
  3597                           ;main_master.c: 309:     I2C_Write(0xD0);
  3598     0E89  30D0               	movlw	208
  3599     0E8A  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3600     0E8F                     l3055:
  3601                           
  3602                           ;main_master.c: 310:     I2C_Write(0x00);
  3603     0E8F  3000               	movlw	0
  3604     0E90  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3605     0E95                     l3057:
  3606                           
  3607                           ;main_master.c: 311:     I2C_Write(Dec_to_Bcd(sec));
  3608     0E95  1283               	bcf	3,5	;RP0=0, select bank0
  3609     0E96  1303               	bcf	3,6	;RP1=0, select bank0
  3610     0E97  0822               	movf	Set_sec@sec,w
  3611     0E98  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3612     0E9D  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3613     0EA2                     l3059:
  3614                           
  3615                           ;main_master.c: 312:     I2C_Stop();
  3616     0EA2  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3617     0EA7                     l253:
  3618     0EA7  0008               	return
  3619     0EA8                     __end_of_Set_sec:
  3620                           
  3621                           	psect	text14
  3622     0E5A                     __ptext14:	
  3623 ;; *************** function _Set_month *****************
  3624 ;; Defined at:
  3625 ;;		line 347 in file "main_master.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  month           1    wreg     unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  month           1    2[BANK0 ] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, pclath, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3639 ;;      Params:         0       0       0       0       0
  3640 ;;      Locals:         0       1       0       0       0
  3641 ;;      Temps:          0       0       0       0       0
  3642 ;;      Totals:         0       1       0       0       0
  3643 ;;Total ram usage:        1 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 4
  3646 ;; This function calls:
  3647 ;;		_Dec_to_Bcd
  3648 ;;		_I2C_Start
  3649 ;;		_I2C_Stop
  3650 ;;		_I2C_Write
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656     0E5A                     _Set_month:	
  3657                           ;psect for function _Set_month
  3658                           
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  3662                           ;Set_month@month stored from wreg
  3663     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3664     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3665     0E5C  00A2               	movwf	Set_month@month
  3666     0E5D                     l3091:
  3667                           
  3668                           ;main_master.c: 348:     I2C_Start();
  3669     0E5D  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3670     0E62                     l3093:
  3671                           
  3672                           ;main_master.c: 349:     I2C_Write(0xD0);
  3673     0E62  30D0               	movlw	208
  3674     0E63  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3675     0E68                     l3095:
  3676                           
  3677                           ;main_master.c: 350:     I2C_Write(0x05);
  3678     0E68  3005               	movlw	5
  3679     0E69  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3680     0E6E                     l3097:
  3681                           
  3682                           ;main_master.c: 351:     I2C_Write(Dec_to_Bcd(month));
  3683     0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  3684     0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  3685     0E70  0822               	movf	Set_month@month,w
  3686     0E71  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3687     0E76  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3688     0E7B                     l3099:
  3689                           
  3690                           ;main_master.c: 352:     I2C_Stop();
  3691     0E7B  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3692     0E80                     l268:
  3693     0E80  0008               	return
  3694     0E81                     __end_of_Set_month:
  3695                           
  3696                           	psect	text15
  3697     0E33                     __ptext15:	
  3698 ;; *************** function _Set_hour *****************
  3699 ;; Defined at:
  3700 ;;		line 323 in file "main_master.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  hour            1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  hour            1    2[BANK0 ] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         0       0       0       0       0
  3715 ;;      Locals:         0       1       0       0       0
  3716 ;;      Temps:          0       0       0       0       0
  3717 ;;      Totals:         0       1       0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 4
  3721 ;; This function calls:
  3722 ;;		_Dec_to_Bcd
  3723 ;;		_I2C_Start
  3724 ;;		_I2C_Stop
  3725 ;;		_I2C_Write
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731     0E33                     _Set_hour:	
  3732                           ;psect for function _Set_hour
  3733                           
  3734                           
  3735                           ;incstack = 0
  3736                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  3737                           ;Set_hour@hour stored from wreg
  3738     0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3739     0E34  1303               	bcf	3,6	;RP1=0, select bank0
  3740     0E35  00A2               	movwf	Set_hour@hour
  3741     0E36                     l3071:
  3742                           
  3743                           ;main_master.c: 324:     I2C_Start();
  3744     0E36  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3745     0E3B                     l3073:
  3746                           
  3747                           ;main_master.c: 325:     I2C_Write(0xD0);
  3748     0E3B  30D0               	movlw	208
  3749     0E3C  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3750     0E41                     l3075:
  3751                           
  3752                           ;main_master.c: 326:     I2C_Write(0x02);
  3753     0E41  3002               	movlw	2
  3754     0E42  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3755     0E47                     l3077:
  3756                           
  3757                           ;main_master.c: 327:     I2C_Write(Dec_to_Bcd(hour));
  3758     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  3759     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  3760     0E49  0822               	movf	Set_hour@hour,w
  3761     0E4A  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3762     0E4F  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3763     0E54                     l3079:
  3764                           
  3765                           ;main_master.c: 328:     I2C_Stop();
  3766     0E54  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3767     0E59                     l259:
  3768     0E59  0008               	return
  3769     0E5A                     __end_of_Set_hour:
  3770                           
  3771                           	psect	text16
  3772     0E0C                     __ptext16:	
  3773 ;; *************** function _Set_day_week *****************
  3774 ;; Defined at:
  3775 ;;		line 331 in file "main_master.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  day_week        1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  day_week        1    2[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         0       1       0       0       0
  3791 ;;      Temps:          0       0       0       0       0
  3792 ;;      Totals:         0       1       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 4
  3796 ;; This function calls:
  3797 ;;		_Dec_to_Bcd
  3798 ;;		_I2C_Start
  3799 ;;		_I2C_Stop
  3800 ;;		_I2C_Write
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806     0E0C                     _Set_day_week:	
  3807                           ;psect for function _Set_day_week
  3808                           
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _Set_day_week: [wreg+status,2+status,0+pclath+cstack]
  3812                           ;Set_day_week@day_week stored from wreg
  3813     0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  3814     0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  3815     0E0E  00A2               	movwf	Set_day_week@day_week
  3816     0E0F                     l3081:
  3817                           
  3818                           ;main_master.c: 332:     I2C_Start();
  3819     0E0F  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3820     0E14                     l3083:
  3821                           
  3822                           ;main_master.c: 333:     I2C_Write(0xD0);
  3823     0E14  30D0               	movlw	208
  3824     0E15  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3825     0E1A                     l3085:
  3826                           
  3827                           ;main_master.c: 334:     I2C_Write(0x03);
  3828     0E1A  3003               	movlw	3
  3829     0E1B  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3830     0E20                     l3087:
  3831                           
  3832                           ;main_master.c: 335:     I2C_Write(Dec_to_Bcd(day_week));
  3833     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3834     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3835     0E22  0822               	movf	Set_day_week@day_week,w
  3836     0E23  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3837     0E28  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3838     0E2D                     l3089:
  3839                           
  3840                           ;main_master.c: 336:     I2C_Stop();
  3841     0E2D  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3842     0E32                     l262:
  3843     0E32  0008               	return
  3844     0E33                     __end_of_Set_day_week:
  3845                           
  3846                           	psect	text17
  3847     0DE5                     __ptext17:	
  3848 ;; *************** function _Set_day *****************
  3849 ;; Defined at:
  3850 ;;		line 339 in file "main_master.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  day             1    wreg     unsigned char 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  day             1    2[BANK0 ] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         0       0       0       0       0
  3865 ;;      Locals:         0       1       0       0       0
  3866 ;;      Temps:          0       0       0       0       0
  3867 ;;      Totals:         0       1       0       0       0
  3868 ;;Total ram usage:        1 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 4
  3871 ;; This function calls:
  3872 ;;		_Dec_to_Bcd
  3873 ;;		_I2C_Start
  3874 ;;		_I2C_Stop
  3875 ;;		_I2C_Write
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881     0DE5                     _Set_day:	
  3882                           ;psect for function _Set_day
  3883                           
  3884                           
  3885                           ;incstack = 0
  3886                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  3887                           ;Set_day@day stored from wreg
  3888     0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3889     0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  3890     0DE7  00A2               	movwf	Set_day@day
  3891     0DE8                     l3061:
  3892                           
  3893                           ;main_master.c: 340:     I2C_Start();
  3894     0DE8  120A  158A  2473  120A  158A  	fcall	_I2C_Start
  3895     0DED                     l3063:
  3896                           
  3897                           ;main_master.c: 341:     I2C_Write(0xD0);
  3898     0DED  30D0               	movlw	208
  3899     0DEE  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3900     0DF3                     l3065:
  3901                           
  3902                           ;main_master.c: 342:     I2C_Write(0x04);
  3903     0DF3  3004               	movlw	4
  3904     0DF4  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3905     0DF9                     l3067:
  3906                           
  3907                           ;main_master.c: 343:     I2C_Write(Dec_to_Bcd(day));
  3908     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3909     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3910     0DFB  0822               	movf	Set_day@day,w
  3911     0DFC  120A  158A  24EE  120A  158A  	fcall	_Dec_to_Bcd
  3912     0E01  120A  158A  24B8  120A  158A  	fcall	_I2C_Write
  3913     0E06                     l3069:
  3914                           
  3915                           ;main_master.c: 344:     I2C_Stop();
  3916     0E06  120A  158A  247D  120A  158A  	fcall	_I2C_Stop
  3917     0E0B                     l265:
  3918     0E0B  0008               	return
  3919     0E0C                     __end_of_Set_day:
  3920                           
  3921                           	psect	text18
  3922     0CEE                     __ptext18:	
  3923 ;; *************** function _Dec_to_Bcd *****************
  3924 ;; Defined at:
  3925 ;;		line 363 in file "main_master.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  dec_number      1    wreg     unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  dec_number      1    0[BANK0 ] unsigned char 
  3930 ;;  bcd_number      1    1[BANK0 ] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      unsigned char 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         0       2       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         0       2       0       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 3
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_Set_sec
  3951 ;;		_Set_hour
  3952 ;;		_Set_day_week
  3953 ;;		_Set_day
  3954 ;;		_Set_month
  3955 ;;		_Set_year
  3956 ;;		_Set_min
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960     0CEE                     _Dec_to_Bcd:	
  3961                           ;psect for function _Dec_to_Bcd
  3962                           
  3963                           
  3964                           ;incstack = 0
  3965                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  3966                           ;Dec_to_Bcd@dec_number stored from wreg
  3967     0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3968     0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3969     0CF0  00A0               	movwf	Dec_to_Bcd@dec_number
  3970     0CF1                     l2983:
  3971                           
  3972                           ;main_master.c: 364:     uint8_t bcd_number;;main_master.c: 365:     bcd_number = 0;
  3973     0CF1  01A1               	clrf	Dec_to_Bcd@bcd_number
  3974     0CF2                     l2985:
  3975                           
  3976                           ;main_master.c: 367:         if (dec_number >= 10){
  3977     0CF2  300A               	movlw	10
  3978     0CF3  0220               	subwf	Dec_to_Bcd@dec_number,w
  3979     0CF4  1C03               	skipc
  3980     0CF5  2CF7               	goto	u2811
  3981     0CF6  2CF8               	goto	u2810
  3982     0CF7                     u2811:
  3983     0CF7  2CFF               	goto	l2989
  3984     0CF8                     u2810:
  3985     0CF8                     l2987:
  3986                           
  3987                           ;main_master.c: 368:             dec_number = dec_number - 10;
  3988     0CF8  0820               	movf	Dec_to_Bcd@dec_number,w
  3989     0CF9  3EF6               	addlw	246
  3990     0CFA  00A0               	movwf	Dec_to_Bcd@dec_number
  3991                           
  3992                           ;main_master.c: 369:             bcd_number = bcd_number + 0b00010000;
  3993     0CFB  0821               	movf	Dec_to_Bcd@bcd_number,w
  3994     0CFC  3E10               	addlw	16
  3995     0CFD  00A1               	movwf	Dec_to_Bcd@bcd_number
  3996                           
  3997                           ;main_master.c: 370:         }
  3998     0CFE  2CF2               	goto	l2985
  3999     0CFF                     l2989:
  4000                           
  4001                           ;main_master.c: 372:             bcd_number = bcd_number + dec_number;
  4002     0CFF  0820               	movf	Dec_to_Bcd@dec_number,w
  4003     0D00  0721               	addwf	Dec_to_Bcd@bcd_number,w
  4004     0D01  00A1               	movwf	Dec_to_Bcd@bcd_number
  4005     0D02                     l2991:	
  4006                           ;main_master.c: 373:             break;
  4007                           
  4008                           
  4009                           ;main_master.c: 376:     return bcd_number;
  4010     0D02  0821               	movf	Dec_to_Bcd@bcd_number,w
  4011     0D03                     l279:
  4012     0D03  0008               	return
  4013     0D04                     __end_of_Dec_to_Bcd:
  4014                           
  4015                           	psect	text19
  4016     0F56                     __ptext19:	
  4017 ;; *************** function _Read_Time *****************
  4018 ;; Defined at:
  4019 ;;		line 295 in file "main_master.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  s               1    wreg     PTR unsigned char 
  4022 ;;		 -> segundo(1), 
  4023 ;;  m               1    8[BANK0 ] PTR unsigned char 
  4024 ;;		 -> minuto(1), 
  4025 ;;  h               1    9[BANK0 ] PTR unsigned char 
  4026 ;;		 -> hora(1), 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  s               1   10[BANK0 ] PTR unsigned char 
  4029 ;;		 -> segundo(1), 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       2       0       0       0
  4040 ;;      Locals:         0       1       0       0       0
  4041 ;;      Temps:          0       0       0       0       0
  4042 ;;      Totals:         0       3       0       0       0
  4043 ;;Total ram usage:        3 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 5
  4046 ;; This function calls:
  4047 ;;		_Bcd_to_Dec
  4048 ;;		_Read
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054     0F56                     _Read_Time:	
  4055                           ;psect for function _Read_Time
  4056                           
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4060                           ;Read_Time@s stored from wreg
  4061     0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4062     0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4063     0F58  00AA               	movwf	Read_Time@s
  4064     0F59                     l3127:
  4065                           
  4066                           ;main_master.c: 296:     *s = Bcd_to_Dec(Read(0x00));
  4067     0F59  082A               	movf	Read_Time@s,w
  4068     0F5A  0084               	movwf	4
  4069     0F5B  3000               	movlw	0
  4070     0F5C  120A  118A  27A3  120A  158A  	fcall	_Read
  4071     0F61  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4072     0F66  1383               	bcf	3,7	;select IRP bank0
  4073     0F67  0080               	movwf	0
  4074                           
  4075                           ;main_master.c: 297:     *m = Bcd_to_Dec(Read(0x01));
  4076     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4077     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4078     0F6A  0828               	movf	Read_Time@m,w
  4079     0F6B  0084               	movwf	4
  4080     0F6C  3001               	movlw	1
  4081     0F6D  120A  118A  27A3  120A  158A  	fcall	_Read
  4082     0F72  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4083     0F77  1383               	bcf	3,7	;select IRP bank0
  4084     0F78  0080               	movwf	0
  4085                           
  4086                           ;main_master.c: 298:     *h = Bcd_to_Dec(Read(0x02));
  4087     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4088     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4089     0F7B  0829               	movf	Read_Time@h,w
  4090     0F7C  0084               	movwf	4
  4091     0F7D  3002               	movlw	2
  4092     0F7E  120A  118A  27A3  120A  158A  	fcall	_Read
  4093     0F83  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4094     0F88  1383               	bcf	3,7	;select IRP bank0
  4095     0F89  0080               	movwf	0
  4096     0F8A                     l247:
  4097     0F8A  0008               	return
  4098     0F8B                     __end_of_Read_Time:
  4099                           
  4100                           	psect	text20
  4101     0F21                     __ptext20:	
  4102 ;; *************** function _Read_Fecha *****************
  4103 ;; Defined at:
  4104 ;;		line 301 in file "main_master.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  d               1    wreg     PTR unsigned char 
  4107 ;;		 -> dia(1), 
  4108 ;;  mo              1    8[BANK0 ] PTR unsigned char 
  4109 ;;		 -> mes(1), 
  4110 ;;  y               1    9[BANK0 ] PTR unsigned char 
  4111 ;;		 -> ano(1), 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  d               1   10[BANK0 ] PTR unsigned char 
  4114 ;;		 -> dia(1), 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       2       0       0       0
  4125 ;;      Locals:         0       1       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         0       3       0       0       0
  4128 ;;Total ram usage:        3 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 5
  4131 ;; This function calls:
  4132 ;;		_Bcd_to_Dec
  4133 ;;		_Read
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139     0F21                     _Read_Fecha:	
  4140                           ;psect for function _Read_Fecha
  4141                           
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in _Read_Fecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4145                           ;Read_Fecha@d stored from wreg
  4146     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4147     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4148     0F23  00AA               	movwf	Read_Fecha@d
  4149     0F24                     l3129:
  4150                           
  4151                           ;main_master.c: 302:     *d = Bcd_to_Dec(Read(0x04));
  4152     0F24  082A               	movf	Read_Fecha@d,w
  4153     0F25  0084               	movwf	4
  4154     0F26  3004               	movlw	4
  4155     0F27  120A  118A  27A3  120A  158A  	fcall	_Read
  4156     0F2C  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4157     0F31  1383               	bcf	3,7	;select IRP bank0
  4158     0F32  0080               	movwf	0
  4159                           
  4160                           ;main_master.c: 303:     *mo = Bcd_to_Dec(Read(0x05));
  4161     0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4162     0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4163     0F35  0828               	movf	Read_Fecha@mo,w
  4164     0F36  0084               	movwf	4
  4165     0F37  3005               	movlw	5
  4166     0F38  120A  118A  27A3  120A  158A  	fcall	_Read
  4167     0F3D  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4168     0F42  1383               	bcf	3,7	;select IRP bank0
  4169     0F43  0080               	movwf	0
  4170                           
  4171                           ;main_master.c: 304:     *y = Bcd_to_Dec(Read(0x06));
  4172     0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4173     0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4174     0F46  0829               	movf	Read_Fecha@y,w
  4175     0F47  0084               	movwf	4
  4176     0F48  3006               	movlw	6
  4177     0F49  120A  118A  27A3  120A  158A  	fcall	_Read
  4178     0F4E  120A  118A  27E1  120A  158A  	fcall	_Bcd_to_Dec
  4179     0F53  1383               	bcf	3,7	;select IRP bank0
  4180     0F54  0080               	movwf	0
  4181     0F55                     l250:
  4182     0F55  0008               	return
  4183     0F56                     __end_of_Read_Fecha:
  4184                           
  4185                           	psect	text21
  4186     07A3                     __ptext21:	
  4187 ;; *************** function _Read *****************
  4188 ;; Defined at:
  4189 ;;		line 281 in file "main_master.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  address         1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  address         1    2[BANK0 ] unsigned char 
  4194 ;;  dato            1    3[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         0       0       0       0       0
  4205 ;;      Locals:         0       2       0       0       0
  4206 ;;      Temps:          0       1       0       0       0
  4207 ;;      Totals:         0       3       0       0       0
  4208 ;;Total ram usage:        3 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 4
  4211 ;; This function calls:
  4212 ;;		_I2C_Nack
  4213 ;;		_I2C_Read
  4214 ;;		_I2C_Restart
  4215 ;;		_I2C_Start
  4216 ;;		_I2C_Stop
  4217 ;;		_I2C_Write
  4218 ;; This function is called by:
  4219 ;;		_Read_Time
  4220 ;;		_Read_Fecha
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224     07A3                     _Read:	
  4225                           ;psect for function _Read
  4226                           
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  4230                           ;Read@address stored from wreg
  4231     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4232     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4233     07A5  00A2               	movwf	Read@address
  4234     07A6                     l2959:
  4235     07A6                     l2961:
  4236                           
  4237                           ;main_master.c: 283:     I2C_Start();
  4238     07A6  120A  158A  2473  120A  118A  	fcall	_I2C_Start
  4239     07AB                     l2963:
  4240                           
  4241                           ;main_master.c: 284:     I2C_Write(0xD0);
  4242     07AB  30D0               	movlw	208
  4243     07AC  120A  158A  24B8  120A  118A  	fcall	_I2C_Write
  4244     07B1                     l2965:
  4245                           
  4246                           ;main_master.c: 285:     I2C_Write(address);
  4247     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4248     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4249     07B3  0822               	movf	Read@address,w
  4250     07B4  120A  158A  24B8  120A  118A  	fcall	_I2C_Write
  4251     07B9                     l2967:
  4252                           
  4253                           ;main_master.c: 286:     I2C_Restart();
  4254     07B9  120A  158A  2469  120A  118A  	fcall	_I2C_Restart
  4255     07BE                     l2969:
  4256                           
  4257                           ;main_master.c: 287:     I2C_Write(0xD1);
  4258     07BE  30D1               	movlw	209
  4259     07BF  120A  158A  24B8  120A  118A  	fcall	_I2C_Write
  4260     07C4                     l2971:
  4261                           
  4262                           ;main_master.c: 288:     dato = I2C_Read();
  4263     07C4  120A  158A  2492  120A  118A  	fcall	_I2C_Read
  4264     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  4265     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  4266     07CB  00A3               	movwf	Read@dato
  4267     07CC                     l2973:
  4268                           
  4269                           ;main_master.c: 289:     I2C_Nack();
  4270     07CC  120A  158A  2487  120A  118A  	fcall	_I2C_Nack
  4271     07D1                     l2975:
  4272                           
  4273                           ;main_master.c: 290:     I2C_Stop();
  4274     07D1  120A  158A  247D  120A  118A  	fcall	_I2C_Stop
  4275     07D6                     l2977:
  4276                           
  4277                           ;main_master.c: 291:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4278     07D6  3005               	movlw	5
  4279     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  4280     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  4281     07D9  00A1               	movwf	??_Read
  4282     07DA                     u2897:
  4283     07DA  0BA1               	decfsz	??_Read,f
  4284     07DB  2FDA               	goto	u2897
  4285     07DC  2FDD               	nop2
  4286     07DD                     l2979:
  4287                           
  4288                           ;main_master.c: 292:     return dato;
  4289     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  4290     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  4291     07DF  0823               	movf	Read@dato,w
  4292     07E0                     l244:
  4293     07E0  0008               	return
  4294     07E1                     __end_of_Read:
  4295                           
  4296                           	psect	text22
  4297     0CB8                     __ptext22:	
  4298 ;; *************** function _I2C_Write *****************
  4299 ;; Defined at:
  4300 ;;		line 64 in file "i2c.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  data            1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  data            1    0[BANK0 ] unsigned char 
  4305 ;;  b_ok            2    0        short 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2   54[None  ] short 
  4308 ;; Registers used:
  4309 ;;		wreg
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       0       0       0       0
  4316 ;;      Locals:         0       1       0       0       0
  4317 ;;      Temps:          0       0       0       0       0
  4318 ;;      Totals:         0       1       0       0       0
  4319 ;;Total ram usage:        1 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; Hardware stack levels required when called: 3
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_Read
  4326 ;;		_Set_sec
  4327 ;;		_Set_hour
  4328 ;;		_Set_day_week
  4329 ;;		_Set_day
  4330 ;;		_Set_month
  4331 ;;		_Set_year
  4332 ;;		_Slave1
  4333 ;;		_Set_min
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337     0CB8                     _I2C_Write:	
  4338                           ;psect for function _I2C_Write
  4339                           
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _I2C_Write: [wreg]
  4343                           ;I2C_Write@data stored from wreg
  4344     0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  4345     0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  4346     0CBA  00A0               	movwf	I2C_Write@data
  4347     0CBB                     l2727:
  4348                           
  4349                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  4350     0CBB  0820               	movf	I2C_Write@data,w
  4351     0CBC  0093               	movwf	19	;volatile
  4352     0CBD                     l55:	
  4353                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  4354                           
  4355     0CBD  1D8C               	btfss	12,3	;volatile
  4356     0CBE  2CC0               	goto	u2441
  4357     0CBF  2CC1               	goto	u2440
  4358     0CC0                     u2441:
  4359     0CC0  2CBD               	goto	l55
  4360     0CC1                     u2440:
  4361     0CC1                     l57:
  4362                           
  4363                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  4364     0CC1  118C               	bcf	12,3	;volatile
  4365     0CC2                     l2729:
  4366     0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  4367     0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  4368     0CC4  0811               	movf	17,w	;volatile
  4369     0CC5                     l58:
  4370     0CC5  0008               	return
  4371     0CC6                     __end_of_I2C_Write:
  4372                           
  4373                           	psect	text23
  4374     0C7D                     __ptext23:	
  4375 ;; *************** function _I2C_Stop *****************
  4376 ;; Defined at:
  4377 ;;		line 34 in file "i2c.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		None
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0
  4394 ;;      Totals:         0       0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 3
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_Read
  4402 ;;		_Set_sec
  4403 ;;		_Set_hour
  4404 ;;		_Set_day_week
  4405 ;;		_Set_day
  4406 ;;		_Set_month
  4407 ;;		_Set_year
  4408 ;;		_Slave1
  4409 ;;		_Set_min
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413     0C7D                     _I2C_Stop:	
  4414                           ;psect for function _I2C_Stop
  4415                           
  4416     0C7D                     l2721:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _I2C_Stop: []
  4419                           
  4420                           
  4421                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  4422     0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  4423     0C7E  1303               	bcf	3,6	;RP1=0, select bank1
  4424     0C7F  1511               	bsf	17,2	;volatile
  4425     0C80                     l31:	
  4426                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  4427                           
  4428     0C80  1283               	bcf	3,5	;RP0=0, select bank0
  4429     0C81  1D8C               	btfss	12,3	;volatile
  4430     0C82  2C84               	goto	u2411
  4431     0C83  2C85               	goto	u2410
  4432     0C84                     u2411:
  4433     0C84  2C80               	goto	l31
  4434     0C85                     u2410:
  4435     0C85                     l33:
  4436                           
  4437                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  4438     0C85  118C               	bcf	12,3	;volatile
  4439     0C86                     l34:
  4440     0C86  0008               	return
  4441     0C87                     __end_of_I2C_Stop:
  4442                           
  4443                           	psect	text24
  4444     0C73                     __ptext24:	
  4445 ;; *************** function _I2C_Start *****************
  4446 ;; Defined at:
  4447 ;;		line 27 in file "i2c.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		None
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 3
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_Read
  4472 ;;		_Set_sec
  4473 ;;		_Set_hour
  4474 ;;		_Set_day_week
  4475 ;;		_Set_day
  4476 ;;		_Set_month
  4477 ;;		_Set_year
  4478 ;;		_Slave1
  4479 ;;		_Set_min
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483     0C73                     _I2C_Start:	
  4484                           ;psect for function _I2C_Start
  4485                           
  4486     0C73                     l2719:	
  4487                           ;incstack = 0
  4488                           ; Regs used in _I2C_Start: []
  4489                           
  4490                           
  4491                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  4492     0C73  1683               	bsf	3,5	;RP0=1, select bank1
  4493     0C74  1303               	bcf	3,6	;RP1=0, select bank1
  4494     0C75  1411               	bsf	17,0	;volatile
  4495     0C76                     l25:	
  4496                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  4497                           
  4498     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4499     0C77  1D8C               	btfss	12,3	;volatile
  4500     0C78  2C7A               	goto	u2401
  4501     0C79  2C7B               	goto	u2400
  4502     0C7A                     u2401:
  4503     0C7A  2C76               	goto	l25
  4504     0C7B                     u2400:
  4505     0C7B                     l27:
  4506                           
  4507                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  4508     0C7B  118C               	bcf	12,3	;volatile
  4509     0C7C                     l28:
  4510     0C7C  0008               	return
  4511     0C7D                     __end_of_I2C_Start:
  4512                           
  4513                           	psect	text25
  4514     0C69                     __ptext25:	
  4515 ;; *************** function _I2C_Restart *****************
  4516 ;; Defined at:
  4517 ;;		line 41 in file "i2c.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		None
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0
  4534 ;;      Totals:         0       0       0       0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 3
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_Read
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545     0C69                     _I2C_Restart:	
  4546                           ;psect for function _I2C_Restart
  4547                           
  4548     0C69                     l2723:	
  4549                           ;incstack = 0
  4550                           ; Regs used in _I2C_Restart: []
  4551                           
  4552                           
  4553                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  4554     0C69  1683               	bsf	3,5	;RP0=1, select bank1
  4555     0C6A  1303               	bcf	3,6	;RP1=0, select bank1
  4556     0C6B  1491               	bsf	17,1	;volatile
  4557     0C6C                     l37:	
  4558                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
  4559                           
  4560     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  4561     0C6D  1D8C               	btfss	12,3	;volatile
  4562     0C6E  2C70               	goto	u2421
  4563     0C6F  2C71               	goto	u2420
  4564     0C70                     u2421:
  4565     0C70  2C6C               	goto	l37
  4566     0C71                     u2420:
  4567     0C71                     l39:
  4568                           
  4569                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  4570     0C71  118C               	bcf	12,3	;volatile
  4571     0C72                     l40:
  4572     0C72  0008               	return
  4573     0C73                     __end_of_I2C_Restart:
  4574                           
  4575                           	psect	text26
  4576     0C92                     __ptext26:	
  4577 ;; *************** function _I2C_Read *****************
  4578 ;; Defined at:
  4579 ;;		line 73 in file "i2c.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 3
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_Read
  4604 ;;		_Slave1
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608     0C92                     _I2C_Read:	
  4609                           ;psect for function _I2C_Read
  4610                           
  4611     0C92                     l2733:	
  4612                           ;incstack = 0
  4613                           ; Regs used in _I2C_Read: [wreg]
  4614                           
  4615                           
  4616                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  4617     0C92  1683               	bsf	3,5	;RP0=1, select bank1
  4618     0C93  1303               	bcf	3,6	;RP1=0, select bank1
  4619     0C94  1591               	bsf	17,3	;volatile
  4620     0C95                     l61:	
  4621                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  4622                           
  4623     0C95  1283               	bcf	3,5	;RP0=0, select bank0
  4624     0C96  1D8C               	btfss	12,3	;volatile
  4625     0C97  2C99               	goto	u2451
  4626     0C98  2C9A               	goto	u2450
  4627     0C99                     u2451:
  4628     0C99  2C95               	goto	l61
  4629     0C9A                     u2450:
  4630     0C9A                     l63:
  4631                           
  4632                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  4633     0C9A  118C               	bcf	12,3	;volatile
  4634     0C9B                     l2735:
  4635                           
  4636                           ;i2c.c: 78:     return SSPBUF;
  4637     0C9B  0813               	movf	19,w	;volatile
  4638     0C9C                     l64:
  4639     0C9C  0008               	return
  4640     0C9D                     __end_of_I2C_Read:
  4641                           
  4642                           	psect	text27
  4643     0C87                     __ptext27:	
  4644 ;; *************** function _I2C_Nack *****************
  4645 ;; Defined at:
  4646 ;;		line 56 in file "i2c.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		None
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 3
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_Read
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674     0C87                     _I2C_Nack:	
  4675                           ;psect for function _I2C_Nack
  4676                           
  4677     0C87                     l2725:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _I2C_Nack: []
  4680                           
  4681                           
  4682                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  4683     0C87  1683               	bsf	3,5	;RP0=1, select bank1
  4684     0C88  1303               	bcf	3,6	;RP1=0, select bank1
  4685     0C89  1691               	bsf	17,5	;volatile
  4686                           
  4687                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  4688     0C8A  1611               	bsf	17,4	;volatile
  4689     0C8B                     l49:	
  4690                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
  4691                           
  4692     0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4693     0C8C  1D8C               	btfss	12,3	;volatile
  4694     0C8D  2C8F               	goto	u2431
  4695     0C8E  2C90               	goto	u2430
  4696     0C8F                     u2431:
  4697     0C8F  2C8B               	goto	l49
  4698     0C90                     u2430:
  4699     0C90                     l51:
  4700                           
  4701                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  4702     0C90  118C               	bcf	12,3	;volatile
  4703     0C91                     l52:
  4704     0C91  0008               	return
  4705     0C92                     __end_of_I2C_Nack:
  4706                           
  4707                           	psect	text28
  4708     07E1                     __ptext28:	
  4709 ;; *************** function _Bcd_to_Dec *****************
  4710 ;; Defined at:
  4711 ;;		line 379 in file "main_master.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  bcd             1    wreg     unsigned char 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  bcd             1    7[BANK0 ] unsigned char 
  4716 ;;  dec             1    6[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      unsigned char 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       0       0       0       0
  4727 ;;      Locals:         0       2       0       0       0
  4728 ;;      Temps:          0       2       0       0       0
  4729 ;;      Totals:         0       4       0       0       0
  4730 ;;Total ram usage:        4 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 4
  4733 ;; This function calls:
  4734 ;;		___bmul
  4735 ;; This function is called by:
  4736 ;;		_Read_Time
  4737 ;;		_Read_Fecha
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741     07E1                     _Bcd_to_Dec:	
  4742                           ;psect for function _Bcd_to_Dec
  4743                           
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  4747                           ;Bcd_to_Dec@bcd stored from wreg
  4748     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4749     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4750     07E3  00A7               	movwf	Bcd_to_Dec@bcd
  4751     07E4                     l2183:
  4752                           
  4753                           ;main_master.c: 380:     uint8_t dec;;main_master.c: 381:     dec = ((bcd>>4)*10)+(bcd &
      +                           0b00001111);
  4754     07E4  300F               	movlw	15
  4755     07E5  0527               	andwf	Bcd_to_Dec@bcd,w
  4756     07E6  00A4               	movwf	??_Bcd_to_Dec
  4757     07E7  300A               	movlw	10
  4758     07E8  00A0               	movwf	___bmul@multiplicand
  4759     07E9  0827               	movf	Bcd_to_Dec@bcd,w
  4760     07EA  00A5               	movwf	??_Bcd_to_Dec+1
  4761     07EB  3004               	movlw	4
  4762     07EC                     u1795:
  4763     07EC  1003               	clrc
  4764     07ED  0CA5               	rrf	??_Bcd_to_Dec+1,f
  4765     07EE  3EFF               	addlw	-1
  4766     07EF  1D03               	skipz
  4767     07F0  2FEC               	goto	u1795
  4768     07F1  0825               	movf	??_Bcd_to_Dec+1,w
  4769     07F2  120A  158A  2504  120A  118A  	fcall	___bmul
  4770     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  4771     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  4772     07F9  0724               	addwf	??_Bcd_to_Dec,w
  4773     07FA  00A6               	movwf	Bcd_to_Dec@dec
  4774     07FB                     l2185:
  4775                           
  4776                           ;main_master.c: 382:     return dec;
  4777     07FB  0826               	movf	Bcd_to_Dec@dec,w
  4778     07FC                     l282:
  4779     07FC  0008               	return
  4780     07FD                     __end_of_Bcd_to_Dec:
  4781                           
  4782                           	psect	text29
  4783     0D04                     __ptext29:	
  4784 ;; *************** function ___bmul *****************
  4785 ;; Defined at:
  4786 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  multiplier      1    wreg     unsigned char 
  4789 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4792 ;;  product         1    2[BANK0 ] unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      unsigned char 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4802 ;;      Params:         0       1       0       0       0
  4803 ;;      Locals:         0       2       0       0       0
  4804 ;;      Temps:          0       1       0       0       0
  4805 ;;      Totals:         0       4       0       0       0
  4806 ;;Total ram usage:        4 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 3
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_Bcd_to_Dec
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816     0D04                     ___bmul:	
  4817                           ;psect for function ___bmul
  4818                           
  4819                           
  4820                           ;incstack = 0
  4821                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4822                           ;___bmul@multiplier stored from wreg
  4823     0D04  1283               	bcf	3,5	;RP0=0, select bank0
  4824     0D05  1303               	bcf	3,6	;RP1=0, select bank0
  4825     0D06  00A3               	movwf	___bmul@multiplier
  4826     0D07                     l1933:
  4827     0D07  01A2               	clrf	___bmul@product
  4828     0D08                     l1935:
  4829     0D08  1C23               	btfss	___bmul@multiplier,0
  4830     0D09  2D0B               	goto	u1361
  4831     0D0A  2D0C               	goto	u1360
  4832     0D0B                     u1361:
  4833     0D0B  2D10               	goto	l1939
  4834     0D0C                     u1360:
  4835     0D0C                     l1937:
  4836     0D0C  0820               	movf	___bmul@multiplicand,w
  4837     0D0D  00A1               	movwf	??___bmul
  4838     0D0E  0821               	movf	??___bmul,w
  4839     0D0F  07A2               	addwf	___bmul@product,f
  4840     0D10                     l1939:
  4841     0D10  1003               	clrc
  4842     0D11  0DA0               	rlf	___bmul@multiplicand,f
  4843     0D12                     l1941:
  4844     0D12  1003               	clrc
  4845     0D13  0CA3               	rrf	___bmul@multiplier,f
  4846     0D14  0823               	movf	___bmul@multiplier,w
  4847     0D15  1D03               	btfss	3,2
  4848     0D16  2D18               	goto	u1371
  4849     0D17  2D19               	goto	u1370
  4850     0D18                     u1371:
  4851     0D18  2D08               	goto	l1935
  4852     0D19                     u1370:
  4853     0D19                     l1943:
  4854     0D19  0822               	movf	___bmul@product,w
  4855     0D1A                     l498:
  4856     0D1A  0008               	return
  4857     0D1B                     __end_of___bmul:
  4858                           
  4859                           	psect	text30
  4860     05D3                     __ptext30:	
  4861 ;; *************** function _Lcd_Init *****************
  4862 ;; Defined at:
  4863 ;;		line 65 in file "LCD.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4877 ;;      Params:         0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0
  4879 ;;      Temps:          0       2       0       0       0
  4880 ;;      Totals:         0       2       0       0       0
  4881 ;;Total ram usage:        2 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 5
  4884 ;; This function calls:
  4885 ;;		_Lcd_Cmd
  4886 ;;		_Lcd_Port
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892     05D3                     _Lcd_Init:	
  4893                           ;psect for function _Lcd_Init
  4894                           
  4895     05D3                     l3037:	
  4896                           ;incstack = 0
  4897                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4898                           
  4899                           
  4900                           ;LCD.c: 66:     Lcd_Port(0x00);
  4901     05D3  3000               	movlw	0
  4902     05D4  120A  158A  2537  120A  118A  	fcall	_Lcd_Port
  4903     05D9                     l3039:
  4904                           
  4905                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4906     05D9  3034               	movlw	52
  4907     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4908     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4909     05DC  00A5               	movwf	??_Lcd_Init+1
  4910     05DD  30F1               	movlw	241
  4911     05DE  00A4               	movwf	??_Lcd_Init
  4912     05DF                     u2907:
  4913     05DF  0BA4               	decfsz	??_Lcd_Init,f
  4914     05E0  2DDF               	goto	u2907
  4915     05E1  0BA5               	decfsz	??_Lcd_Init+1,f
  4916     05E2  2DDF               	goto	u2907
  4917     05E3                     l3041:
  4918                           
  4919                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4920     05E3  3003               	movlw	3
  4921     05E4  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4922                           
  4923                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4924     05E9  300D               	movlw	13
  4925     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4926     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4927     05EC  00A5               	movwf	??_Lcd_Init+1
  4928     05ED  30FB               	movlw	251
  4929     05EE  00A4               	movwf	??_Lcd_Init
  4930     05EF                     u2917:
  4931     05EF  0BA4               	decfsz	??_Lcd_Init,f
  4932     05F0  2DEF               	goto	u2917
  4933     05F1  0BA5               	decfsz	??_Lcd_Init+1,f
  4934     05F2  2DEF               	goto	u2917
  4935     05F3                     l3043:
  4936                           
  4937                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4938     05F3  3003               	movlw	3
  4939     05F4  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4940     05F9                     l3045:
  4941                           
  4942                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4943     05F9  3084               	movlw	132
  4944     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  4945     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  4946     05FC  00A4               	movwf	??_Lcd_Init
  4947     05FD                     u2927:
  4948     05FD  0BA4               	decfsz	??_Lcd_Init,f
  4949     05FE  2DFD               	goto	u2927
  4950     05FF  0000               	nop
  4951                           
  4952                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4953     0600  3003               	movlw	3
  4954     0601  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4955                           
  4956                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  4957     0606  3002               	movlw	2
  4958     0607  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4959                           
  4960                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4961     060C  3002               	movlw	2
  4962     060D  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4963                           
  4964                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  4965     0612  3008               	movlw	8
  4966     0613  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4967                           
  4968                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  4969     0618  3000               	movlw	0
  4970     0619  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4971                           
  4972                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  4973     061E  300C               	movlw	12
  4974     061F  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4975                           
  4976                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  4977     0624  3000               	movlw	0
  4978     0625  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4979                           
  4980                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  4981     062A  3006               	movlw	6
  4982     062B  120A  158A  251B  120A  118A  	fcall	_Lcd_Cmd
  4983     0630                     l3047:
  4984                           
  4985                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  4986     0630  3041               	movlw	65
  4987     0631  1283               	bcf	3,5	;RP0=0, select bank0
  4988     0632  1303               	bcf	3,6	;RP1=0, select bank0
  4989     0633  00A4               	movwf	??_Lcd_Init
  4990     0634                     u2937:
  4991     0634  0BA4               	decfsz	??_Lcd_Init,f
  4992     0635  2E34               	goto	u2937
  4993     0636  2E37               	nop2
  4994     0637                     l317:
  4995     0637  0008               	return
  4996     0638                     __end_of_Lcd_Init:
  4997                           
  4998                           	psect	text31
  4999     0C9D                     __ptext31:	
  5000 ;; *************** function _Lcd_Clear *****************
  5001 ;; Defined at:
  5002 ;;		line 43 in file "LCD.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 5
  5023 ;; This function calls:
  5024 ;;		_Lcd_Cmd
  5025 ;; This function is called by:
  5026 ;;		_main
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030     0C9D                     _Lcd_Clear:	
  5031                           ;psect for function _Lcd_Clear
  5032                           
  5033     0C9D                     l3049:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5036                           
  5037                           
  5038                           ;LCD.c: 44:     Lcd_Cmd(0);
  5039     0C9D  3000               	movlw	0
  5040     0C9E  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  5041                           
  5042                           ;LCD.c: 45:     Lcd_Cmd(1);
  5043     0CA3  3001               	movlw	1
  5044     0CA4  120A  158A  251B  120A  158A  	fcall	_Lcd_Cmd
  5045     0CA9                     l308:
  5046     0CA9  0008               	return
  5047     0CAA                     __end_of_Lcd_Clear:
  5048                           
  5049                           	psect	text32
  5050     0D1B                     __ptext32:	
  5051 ;; *************** function _Lcd_Cmd *****************
  5052 ;; Defined at:
  5053 ;;		line 35 in file "LCD.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  a               1    wreg     unsigned char 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  a               1    3[BANK0 ] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0, pclath, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         0       0       0       0       0
  5068 ;;      Locals:         0       1       0       0       0
  5069 ;;      Temps:          0       2       0       0       0
  5070 ;;      Totals:         0       3       0       0       0
  5071 ;;Total ram usage:        3 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; Hardware stack levels required when called: 4
  5074 ;; This function calls:
  5075 ;;		_Lcd_Port
  5076 ;; This function is called by:
  5077 ;;		_Lcd_Clear
  5078 ;;		_Lcd_Set_Cursor
  5079 ;;		_Lcd_Init
  5080 ;;		_Lcd_Shift_Right
  5081 ;;		_Lcd_Shift_Left
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085     0D1B                     _Lcd_Cmd:	
  5086                           ;psect for function _Lcd_Cmd
  5087                           
  5088                           
  5089                           ;incstack = 0
  5090                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5091                           ;Lcd_Cmd@a stored from wreg
  5092     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  5093     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  5094     0D1D  00A3               	movwf	Lcd_Cmd@a
  5095     0D1E                     l2739:
  5096                           
  5097                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  5098     0D1E  1308               	bcf	8,6	;volatile
  5099     0D1F                     l2741:
  5100                           
  5101                           ;LCD.c: 37:     Lcd_Port(a);
  5102     0D1F  0823               	movf	Lcd_Cmd@a,w
  5103     0D20  120A  158A  2537  120A  158A  	fcall	_Lcd_Port
  5104     0D25                     l2743:
  5105                           
  5106                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  5107     0D25  1283               	bcf	3,5	;RP0=0, select bank0
  5108     0D26  1303               	bcf	3,6	;RP1=0, select bank0
  5109     0D27  1788               	bsf	8,7	;volatile
  5110     0D28                     l2745:
  5111                           
  5112                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5113     0D28  300B               	movlw	11
  5114     0D29  1283               	bcf	3,5	;RP0=0, select bank0
  5115     0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  5116     0D2B  00A2               	movwf	??_Lcd_Cmd+1
  5117     0D2C  3061               	movlw	97
  5118     0D2D  00A1               	movwf	??_Lcd_Cmd
  5119     0D2E                     u2947:
  5120     0D2E  0BA1               	decfsz	??_Lcd_Cmd,f
  5121     0D2F  2D2E               	goto	u2947
  5122     0D30  0BA2               	decfsz	??_Lcd_Cmd+1,f
  5123     0D31  2D2E               	goto	u2947
  5124     0D32  2D33               	nop2
  5125     0D33                     l2747:
  5126                           
  5127                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  5128     0D33  1283               	bcf	3,5	;RP0=0, select bank0
  5129     0D34  1303               	bcf	3,6	;RP1=0, select bank0
  5130     0D35  1388               	bcf	8,7	;volatile
  5131     0D36                     l305:
  5132     0D36  0008               	return
  5133     0D37                     __end_of_Lcd_Cmd:
  5134                           
  5135                           	psect	text33
  5136     0D37                     __ptext33:	
  5137 ;; *************** function _Lcd_Port *****************
  5138 ;; Defined at:
  5139 ;;		line 13 in file "LCD.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  a               1    wreg     unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  a               1    0[BANK0 ] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5153 ;;      Params:         0       0       0       0       0
  5154 ;;      Locals:         0       1       0       0       0
  5155 ;;      Temps:          0       0       0       0       0
  5156 ;;      Totals:         0       1       0       0       0
  5157 ;;Total ram usage:        1 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 3
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_Lcd_Cmd
  5164 ;;		_Lcd_Init
  5165 ;;		_Lcd_Write_Char
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     0D37                     _Lcd_Port:	
  5170                           ;psect for function _Lcd_Port
  5171                           
  5172                           
  5173                           ;incstack = 0
  5174                           ; Regs used in _Lcd_Port: [wreg]
  5175                           ;Lcd_Port@a stored from wreg
  5176     0D37  1283               	bcf	3,5	;RP0=0, select bank0
  5177     0D38  1303               	bcf	3,6	;RP1=0, select bank0
  5178     0D39  00A0               	movwf	Lcd_Port@a
  5179     0D3A                     l2709:
  5180                           
  5181                           ;LCD.c: 14:     if (a & 1)
  5182     0D3A  1C20               	btfss	Lcd_Port@a,0
  5183     0D3B  2D3D               	goto	u2361
  5184     0D3C  2D3E               	goto	u2360
  5185     0D3D                     u2361:
  5186     0D3D  2D40               	goto	l294
  5187     0D3E                     u2360:
  5188     0D3E                     l2711:
  5189                           
  5190                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  5191     0D3E  1606               	bsf	6,4	;volatile
  5192     0D3F  2D41               	goto	l295
  5193     0D40                     l294:	
  5194                           ;LCD.c: 16:     else
  5195                           
  5196                           
  5197                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  5198     0D40  1206               	bcf	6,4	;volatile
  5199     0D41                     l295:
  5200                           
  5201                           ;LCD.c: 19:     if (a & 2)
  5202     0D41  1CA0               	btfss	Lcd_Port@a,1
  5203     0D42  2D44               	goto	u2371
  5204     0D43  2D45               	goto	u2370
  5205     0D44                     u2371:
  5206     0D44  2D47               	goto	l296
  5207     0D45                     u2370:
  5208     0D45                     l2713:
  5209                           
  5210                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  5211     0D45  1686               	bsf	6,5	;volatile
  5212     0D46  2D48               	goto	l297
  5213     0D47                     l296:	
  5214                           ;LCD.c: 21:     else
  5215                           
  5216                           
  5217                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  5218     0D47  1286               	bcf	6,5	;volatile
  5219     0D48                     l297:
  5220                           
  5221                           ;LCD.c: 24:     if (a & 4)
  5222     0D48  1D20               	btfss	Lcd_Port@a,2
  5223     0D49  2D4B               	goto	u2381
  5224     0D4A  2D4C               	goto	u2380
  5225     0D4B                     u2381:
  5226     0D4B  2D4E               	goto	l298
  5227     0D4C                     u2380:
  5228     0D4C                     l2715:
  5229                           
  5230                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  5231     0D4C  1706               	bsf	6,6	;volatile
  5232     0D4D  2D4F               	goto	l299
  5233     0D4E                     l298:	
  5234                           ;LCD.c: 26:     else
  5235                           
  5236                           
  5237                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  5238     0D4E  1306               	bcf	6,6	;volatile
  5239     0D4F                     l299:
  5240                           
  5241                           ;LCD.c: 29:     if (a & 8)
  5242     0D4F  1DA0               	btfss	Lcd_Port@a,3
  5243     0D50  2D52               	goto	u2391
  5244     0D51  2D53               	goto	u2390
  5245     0D52                     u2391:
  5246     0D52  2D55               	goto	l300
  5247     0D53                     u2390:
  5248     0D53                     l2717:
  5249                           
  5250                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  5251     0D53  1786               	bsf	6,7	;volatile
  5252     0D54  2D56               	goto	l302
  5253     0D55                     l300:	
  5254                           ;LCD.c: 31:     else
  5255                           
  5256                           
  5257                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  5258     0D55  1386               	bcf	6,7	;volatile
  5259     0D56                     l302:
  5260     0D56  0008               	return
  5261     0D57                     __end_of_Lcd_Port:
  5262                           
  5263                           	psect	text34
  5264     0211                     __ptext34:	
  5265 ;; *************** function _isr *****************
  5266 ;; Defined at:
  5267 ;;		line 116 in file "main_master.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;		None
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      void 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0, pclath, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5281 ;;      Params:         0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0
  5283 ;;      Temps:          4       0       0       0       0
  5284 ;;      Totals:         4       0       0       0       0
  5285 ;;Total ram usage:        4 bytes
  5286 ;; Hardware stack levels used: 1
  5287 ;; Hardware stack levels required when called: 2
  5288 ;; This function calls:
  5289 ;;		i1_Set_day
  5290 ;;		i1_Set_month
  5291 ;;		i1_Set_year
  5292 ;; This function is called by:
  5293 ;;		Interrupt level 1
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297     0211                     _isr:	
  5298                           ;psect for function _isr
  5299                           
  5300     0211                     i1l2463:
  5301                           
  5302                           ;main_master.c: 117:     if (INTCONbits.RBIF == 1){
  5303     0211  1C0B               	btfss	11,0	;volatile
  5304     0212  2A14               	goto	u189_21
  5305     0213  2A15               	goto	u189_20
  5306     0214                     u189_21:
  5307     0214  2BF5               	goto	i1l238
  5308     0215                     u189_20:
  5309     0215                     i1l2465:
  5310                           
  5311                           ;main_master.c: 118:         INTCONbits.RBIF = 0;
  5312     0215  100B               	bcf	11,0	;volatile
  5313                           
  5314                           ;main_master.c: 119:         if (PORTBbits.RB3 == 0){
  5315     0216  1283               	bcf	3,5	;RP0=0, select bank0
  5316     0217  1303               	bcf	3,6	;RP1=0, select bank0
  5317     0218  1986               	btfsc	6,3	;volatile
  5318     0219  2A1B               	goto	u190_21
  5319     021A  2A1C               	goto	u190_20
  5320     021B                     u190_21:
  5321     021B  2A27               	goto	i1l2471
  5322     021C                     u190_20:
  5323     021C                     i1l2467:
  5324                           
  5325                           ;main_master.c: 120:             bandera = 1;
  5326     021C  01F9               	clrf	_bandera
  5327     021D  0AF9               	incf	_bandera,f
  5328     021E                     i1l2469:
  5329                           
  5330                           ;main_master.c: 121:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5331     021E  3003               	movlw	3
  5332     021F  00F4               	movwf	??_isr+1
  5333     0220  3097               	movlw	151
  5334     0221  00F3               	movwf	??_isr
  5335     0222                     u295_27:
  5336     0222  0BF3               	decfsz	??_isr,f
  5337     0223  2A22               	goto	u295_27
  5338     0224  0BF4               	decfsz	??_isr+1,f
  5339     0225  2A22               	goto	u295_27
  5340     0226  2A27               	nop2
  5341     0227                     i1l2471:
  5342                           
  5343                           ;main_master.c: 123:         if (PORTBbits.RB3 == 1 && bandera == 1){
  5344     0227  1283               	bcf	3,5	;RP0=0, select bank0
  5345     0228  1303               	bcf	3,6	;RP1=0, select bank0
  5346     0229  1D86               	btfss	6,3	;volatile
  5347     022A  2A2C               	goto	u191_21
  5348     022B  2A2D               	goto	u191_20
  5349     022C                     u191_21:
  5350     022C  2A55               	goto	i1l2497
  5351     022D                     u191_20:
  5352     022D                     i1l2473:
  5353     022D  0379               	decf	_bandera,w
  5354     022E  1D03               	btfss	3,2
  5355     022F  2A31               	goto	u192_21
  5356     0230  2A32               	goto	u192_20
  5357     0231                     u192_21:
  5358     0231  2A55               	goto	i1l2497
  5359     0232                     u192_20:
  5360     0232                     i1l2475:
  5361                           
  5362                           ;main_master.c: 124:             if (selector == 0){
  5363     0232  084A               	movf	_selector,w
  5364     0233  1D03               	btfss	3,2
  5365     0234  2A36               	goto	u193_21
  5366     0235  2A37               	goto	u193_20
  5367     0236                     u193_21:
  5368     0236  2A3B               	goto	i1l2481
  5369     0237                     u193_20:
  5370     0237                     i1l2477:
  5371                           
  5372                           ;main_master.c: 125:                 selector = 1;
  5373     0237  01CA               	clrf	_selector
  5374     0238  0ACA               	incf	_selector,f
  5375     0239                     i1l2479:
  5376                           
  5377                           ;main_master.c: 126:                 bandera = 0;
  5378     0239  01F9               	clrf	_bandera
  5379                           
  5380                           ;main_master.c: 127:             }
  5381     023A  2A55               	goto	i1l2497
  5382     023B                     i1l2481:
  5383     023B  034A               	decf	_selector,w
  5384     023C  1D03               	btfss	3,2
  5385     023D  2A3F               	goto	u194_21
  5386     023E  2A40               	goto	u194_20
  5387     023F                     u194_21:
  5388     023F  2A43               	goto	i1l2487
  5389     0240                     u194_20:
  5390     0240                     i1l2483:
  5391                           
  5392                           ;main_master.c: 129:                 selector = 2;
  5393     0240  3002               	movlw	2
  5394     0241  00CA               	movwf	_selector
  5395     0242  2A39               	goto	i1l2479
  5396     0243                     i1l2487:
  5397     0243  3002               	movlw	2
  5398     0244  064A               	xorwf	_selector,w
  5399     0245  1D03               	btfss	3,2
  5400     0246  2A48               	goto	u195_21
  5401     0247  2A49               	goto	u195_20
  5402     0248                     u195_21:
  5403     0248  2A4C               	goto	i1l2493
  5404     0249                     u195_20:
  5405     0249                     i1l2489:
  5406                           
  5407                           ;main_master.c: 133:                 selector = 3;
  5408     0249  3003               	movlw	3
  5409     024A  00CA               	movwf	_selector
  5410     024B  2A39               	goto	i1l2479
  5411     024C                     i1l2493:
  5412     024C  3003               	movlw	3
  5413     024D  064A               	xorwf	_selector,w
  5414     024E  1D03               	btfss	3,2
  5415     024F  2A51               	goto	u196_21
  5416     0250  2A52               	goto	u196_20
  5417     0251                     u196_21:
  5418     0251  2A55               	goto	i1l188
  5419     0252                     u196_20:
  5420     0252                     i1l2495:
  5421                           
  5422                           ;main_master.c: 137:                 selector = 0;
  5423     0252  01CA               	clrf	_selector
  5424                           
  5425                           ;main_master.c: 138:                 bandera = 0;
  5426     0253  01F9               	clrf	_bandera
  5427     0254  2A55               	goto	i1l2497
  5428     0255                     i1l188:
  5429     0255                     i1l2497:
  5430                           
  5431                           ;main_master.c: 141:         if (PORTBbits.RB2 == 0){
  5432     0255  1906               	btfsc	6,2	;volatile
  5433     0256  2A58               	goto	u197_21
  5434     0257  2A59               	goto	u197_20
  5435     0258                     u197_21:
  5436     0258  2A64               	goto	i1l2501
  5437     0259                     u197_20:
  5438     0259                     i1l2499:
  5439                           
  5440                           ;main_master.c: 142:             bandera = 2;
  5441     0259  3002               	movlw	2
  5442     025A  00F9               	movwf	_bandera
  5443                           
  5444                           ;main_master.c: 143:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5445     025B  3003               	movlw	3
  5446     025C  00F4               	movwf	??_isr+1
  5447     025D  3097               	movlw	151
  5448     025E  00F3               	movwf	??_isr
  5449     025F                     u296_27:
  5450     025F  0BF3               	decfsz	??_isr,f
  5451     0260  2A5F               	goto	u296_27
  5452     0261  0BF4               	decfsz	??_isr+1,f
  5453     0262  2A5F               	goto	u296_27
  5454     0263  2A64               	nop2
  5455     0264                     i1l2501:
  5456                           
  5457                           ;main_master.c: 145:         if (PORTBbits.RB2 == 1 && bandera == 2){
  5458     0264  1283               	bcf	3,5	;RP0=0, select bank0
  5459     0265  1303               	bcf	3,6	;RP1=0, select bank0
  5460     0266  1D06               	btfss	6,2	;volatile
  5461     0267  2A69               	goto	u198_21
  5462     0268  2A6A               	goto	u198_20
  5463     0269                     u198_21:
  5464     0269  2B82               	goto	i1l2605
  5465     026A                     u198_20:
  5466     026A                     i1l2503:
  5467     026A  3002               	movlw	2
  5468     026B  0679               	xorwf	_bandera,w
  5469     026C  1D03               	btfss	3,2
  5470     026D  2A6F               	goto	u199_21
  5471     026E  2A70               	goto	u199_20
  5472     026F                     u199_21:
  5473     026F  2B82               	goto	i1l2605
  5474     0270                     u199_20:
  5475     0270                     i1l2505:
  5476                           
  5477                           ;main_master.c: 146:             if (selector == 1){
  5478     0270  034A               	decf	_selector,w
  5479     0271  1D03               	btfss	3,2
  5480     0272  2A74               	goto	u200_21
  5481     0273  2A75               	goto	u200_20
  5482     0274                     u200_21:
  5483     0274  2B0B               	goto	i1l2563
  5484     0275                     u200_20:
  5485     0275                     i1l2507:
  5486                           
  5487                           ;main_master.c: 147:                 if (mes == 1 || mes == 3 || mes == 5 || mes == 7 ||
      +                           mes == 8 || mes == 10 || mes == 12){
  5488     0275  0360               	decf	_mes,w
  5489     0276  1903               	btfsc	3,2
  5490     0277  2A79               	goto	u201_21
  5491     0278  2A7A               	goto	u201_20
  5492     0279                     u201_21:
  5493     0279  2A9E               	goto	i1l2521
  5494     027A                     u201_20:
  5495     027A                     i1l2509:
  5496     027A  3003               	movlw	3
  5497     027B  0660               	xorwf	_mes,w
  5498     027C  1903               	btfsc	3,2
  5499     027D  2A7F               	goto	u202_21
  5500     027E  2A80               	goto	u202_20
  5501     027F                     u202_21:
  5502     027F  2A9E               	goto	i1l2521
  5503     0280                     u202_20:
  5504     0280                     i1l2511:
  5505     0280  3005               	movlw	5
  5506     0281  0660               	xorwf	_mes,w
  5507     0282  1903               	btfsc	3,2
  5508     0283  2A85               	goto	u203_21
  5509     0284  2A86               	goto	u203_20
  5510     0285                     u203_21:
  5511     0285  2A9E               	goto	i1l2521
  5512     0286                     u203_20:
  5513     0286                     i1l2513:
  5514     0286  3007               	movlw	7
  5515     0287  0660               	xorwf	_mes,w
  5516     0288  1903               	btfsc	3,2
  5517     0289  2A8B               	goto	u204_21
  5518     028A  2A8C               	goto	u204_20
  5519     028B                     u204_21:
  5520     028B  2A9E               	goto	i1l2521
  5521     028C                     u204_20:
  5522     028C                     i1l2515:
  5523     028C  3008               	movlw	8
  5524     028D  0660               	xorwf	_mes,w
  5525     028E  1903               	btfsc	3,2
  5526     028F  2A91               	goto	u205_21
  5527     0290  2A92               	goto	u205_20
  5528     0291                     u205_21:
  5529     0291  2A9E               	goto	i1l2521
  5530     0292                     u205_20:
  5531     0292                     i1l2517:
  5532     0292  300A               	movlw	10
  5533     0293  0660               	xorwf	_mes,w
  5534     0294  1903               	btfsc	3,2
  5535     0295  2A97               	goto	u206_21
  5536     0296  2A98               	goto	u206_20
  5537     0297                     u206_21:
  5538     0297  2A9E               	goto	i1l2521
  5539     0298                     u206_20:
  5540     0298                     i1l2519:
  5541     0298  300C               	movlw	12
  5542     0299  0660               	xorwf	_mes,w
  5543     029A  1D03               	btfss	3,2
  5544     029B  2A9D               	goto	u207_21
  5545     029C  2A9E               	goto	u207_20
  5546     029D                     u207_21:
  5547     029D  2AB8               	goto	i1l2531
  5548     029E                     u207_20:
  5549     029E                     i1l2521:
  5550                           
  5551                           ;main_master.c: 148:                     if (dia == 31){
  5552     029E  301F               	movlw	31
  5553     029F  0661               	xorwf	_dia,w
  5554     02A0  1D03               	btfss	3,2
  5555     02A1  2AA3               	goto	u208_21
  5556     02A2  2AA4               	goto	u208_20
  5557     02A3                     u208_21:
  5558     02A3  2AAD               	goto	i1l2527
  5559     02A4                     u208_20:
  5560     02A4                     i1l2523:
  5561                           
  5562                           ;main_master.c: 149:                         dia = 31;
  5563     02A4  301F               	movlw	31
  5564     02A5  00E1               	movwf	_dia
  5565     02A6                     i1l2525:
  5566                           
  5567                           ;main_master.c: 150:                         Set_day(dia);
  5568     02A6  0861               	movf	_dia,w
  5569     02A7  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5570                           
  5571                           ;main_master.c: 151:                     }
  5572     02AC  2B09               	goto	i1l2561
  5573     02AD                     i1l2527:
  5574                           
  5575                           ;main_master.c: 153:                         dia++;
  5576     02AD  3001               	movlw	1
  5577     02AE  00F3               	movwf	??_isr
  5578     02AF  0873               	movf	??_isr,w
  5579     02B0  07E1               	addwf	_dia,f
  5580     02B1                     i1l2529:
  5581                           
  5582                           ;main_master.c: 154:                         Set_day(dia);
  5583     02B1  0861               	movf	_dia,w
  5584     02B2  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5585     02B7  2B09               	goto	i1l2561
  5586     02B8                     i1l2531:
  5587     02B8  3004               	movlw	4
  5588     02B9  0660               	xorwf	_mes,w
  5589     02BA  1903               	btfsc	3,2
  5590     02BB  2ABD               	goto	u209_21
  5591     02BC  2ABE               	goto	u209_20
  5592     02BD                     u209_21:
  5593     02BD  2AD0               	goto	i1l2539
  5594     02BE                     u209_20:
  5595     02BE                     i1l2533:
  5596     02BE  3006               	movlw	6
  5597     02BF  0660               	xorwf	_mes,w
  5598     02C0  1903               	btfsc	3,2
  5599     02C1  2AC3               	goto	u210_21
  5600     02C2  2AC4               	goto	u210_20
  5601     02C3                     u210_21:
  5602     02C3  2AD0               	goto	i1l2539
  5603     02C4                     u210_20:
  5604     02C4                     i1l2535:
  5605     02C4  3009               	movlw	9
  5606     02C5  0660               	xorwf	_mes,w
  5607     02C6  1903               	btfsc	3,2
  5608     02C7  2AC9               	goto	u211_21
  5609     02C8  2ACA               	goto	u211_20
  5610     02C9                     u211_21:
  5611     02C9  2AD0               	goto	i1l2539
  5612     02CA                     u211_20:
  5613     02CA                     i1l2537:
  5614     02CA  300B               	movlw	11
  5615     02CB  0660               	xorwf	_mes,w
  5616     02CC  1D03               	btfss	3,2
  5617     02CD  2ACF               	goto	u212_21
  5618     02CE  2AD0               	goto	u212_20
  5619     02CF                     u212_21:
  5620     02CF  2AEA               	goto	i1l2549
  5621     02D0                     u212_20:
  5622     02D0                     i1l2539:
  5623                           
  5624                           ;main_master.c: 158:                     if (dia == 30){
  5625     02D0  301E               	movlw	30
  5626     02D1  0661               	xorwf	_dia,w
  5627     02D2  1D03               	btfss	3,2
  5628     02D3  2AD5               	goto	u213_21
  5629     02D4  2AD6               	goto	u213_20
  5630     02D5                     u213_21:
  5631     02D5  2ADF               	goto	i1l2545
  5632     02D6                     u213_20:
  5633     02D6                     i1l2541:
  5634                           
  5635                           ;main_master.c: 159:                         dia = 30;
  5636     02D6  301E               	movlw	30
  5637     02D7  00E1               	movwf	_dia
  5638     02D8                     i1l2543:
  5639                           
  5640                           ;main_master.c: 160:                         Set_day(dia);
  5641     02D8  0861               	movf	_dia,w
  5642     02D9  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5643                           
  5644                           ;main_master.c: 161:                     }
  5645     02DE  2B09               	goto	i1l2561
  5646     02DF                     i1l2545:
  5647                           
  5648                           ;main_master.c: 163:                         dia++;
  5649     02DF  3001               	movlw	1
  5650     02E0  00F3               	movwf	??_isr
  5651     02E1  0873               	movf	??_isr,w
  5652     02E2  07E1               	addwf	_dia,f
  5653     02E3                     i1l2547:
  5654                           
  5655                           ;main_master.c: 164:                         Set_day(dia);
  5656     02E3  0861               	movf	_dia,w
  5657     02E4  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5658     02E9  2B09               	goto	i1l2561
  5659     02EA                     i1l2549:
  5660     02EA  3002               	movlw	2
  5661     02EB  0660               	xorwf	_mes,w
  5662     02EC  1D03               	btfss	3,2
  5663     02ED  2AEF               	goto	u214_21
  5664     02EE  2AF0               	goto	u214_20
  5665     02EF                     u214_21:
  5666     02EF  2B09               	goto	i1l2561
  5667     02F0                     u214_20:
  5668     02F0                     i1l2551:
  5669                           
  5670                           ;main_master.c: 168:                     if (dia == 28){
  5671     02F0  301C               	movlw	28
  5672     02F1  0661               	xorwf	_dia,w
  5673     02F2  1D03               	btfss	3,2
  5674     02F3  2AF5               	goto	u215_21
  5675     02F4  2AF6               	goto	u215_20
  5676     02F5                     u215_21:
  5677     02F5  2AFF               	goto	i1l2557
  5678     02F6                     u215_20:
  5679     02F6                     i1l2553:
  5680                           
  5681                           ;main_master.c: 169:                         dia = 28;
  5682     02F6  301C               	movlw	28
  5683     02F7  00E1               	movwf	_dia
  5684     02F8                     i1l2555:
  5685                           
  5686                           ;main_master.c: 170:                         Set_day(dia);
  5687     02F8  0861               	movf	_dia,w
  5688     02F9  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5689                           
  5690                           ;main_master.c: 171:                     }
  5691     02FE  2B09               	goto	i1l2561
  5692     02FF                     i1l2557:
  5693                           
  5694                           ;main_master.c: 173:                         dia++;
  5695     02FF  3001               	movlw	1
  5696     0300  00F3               	movwf	??_isr
  5697     0301  0873               	movf	??_isr,w
  5698     0302  07E1               	addwf	_dia,f
  5699     0303                     i1l2559:
  5700                           
  5701                           ;main_master.c: 174:                         Set_day(dia);
  5702     0303  0861               	movf	_dia,w
  5703     0304  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5704     0309                     i1l2561:
  5705                           
  5706                           ;main_master.c: 177:                 bandera = 0;
  5707     0309  01F9               	clrf	_bandera
  5708                           
  5709                           ;main_master.c: 178:             }
  5710     030A  2B82               	goto	i1l2605
  5711     030B                     i1l2563:
  5712     030B  3002               	movlw	2
  5713     030C  064A               	xorwf	_selector,w
  5714     030D  1D03               	btfss	3,2
  5715     030E  2B10               	goto	u216_21
  5716     030F  2B11               	goto	u216_20
  5717     0310                     u216_21:
  5718     0310  2B62               	goto	i1l2591
  5719     0311                     u216_20:
  5720     0311                     i1l2565:
  5721                           
  5722                           ;main_master.c: 180:                 if (mes == 12){
  5723     0311  300C               	movlw	12
  5724     0312  0660               	xorwf	_mes,w
  5725     0313  1D03               	btfss	3,2
  5726     0314  2B16               	goto	u217_21
  5727     0315  2B17               	goto	u217_20
  5728     0316                     u217_21:
  5729     0316  2B20               	goto	i1l2571
  5730     0317                     u217_20:
  5731     0317                     i1l2567:
  5732                           
  5733                           ;main_master.c: 181:                     mes = 12;
  5734     0317  300C               	movlw	12
  5735     0318  00E0               	movwf	_mes
  5736     0319                     i1l2569:
  5737                           
  5738                           ;main_master.c: 182:                     Set_month(mes);
  5739     0319  0860               	movf	_mes,w
  5740     031A  120A  158A  257A  120A  118A  	fcall	i1_Set_month
  5741                           
  5742                           ;main_master.c: 183:                 }
  5743     031F  2B09               	goto	i1l2561
  5744     0320                     i1l2571:
  5745                           
  5746                           ;main_master.c: 185:                     mes++;
  5747     0320  3001               	movlw	1
  5748     0321  00F3               	movwf	??_isr
  5749     0322  0873               	movf	??_isr,w
  5750     0323  07E0               	addwf	_mes,f
  5751                           
  5752                           ;main_master.c: 186:                     if ((mes == 4 || mes == 6 || mes == 9 || mes ==
      +                           11) && (dia >> 30)){
  5753     0324  3004               	movlw	4
  5754     0325  0660               	xorwf	_mes,w
  5755     0326  1903               	btfsc	3,2
  5756     0327  2B29               	goto	u218_21
  5757     0328  2B2A               	goto	u218_20
  5758     0329                     u218_21:
  5759     0329  2B3C               	goto	i1l2579
  5760     032A                     u218_20:
  5761     032A                     i1l2573:
  5762     032A  3006               	movlw	6
  5763     032B  0660               	xorwf	_mes,w
  5764     032C  1903               	btfsc	3,2
  5765     032D  2B2F               	goto	u219_21
  5766     032E  2B30               	goto	u219_20
  5767     032F                     u219_21:
  5768     032F  2B3C               	goto	i1l2579
  5769     0330                     u219_20:
  5770     0330                     i1l2575:
  5771     0330  3009               	movlw	9
  5772     0331  0660               	xorwf	_mes,w
  5773     0332  1903               	btfsc	3,2
  5774     0333  2B35               	goto	u220_21
  5775     0334  2B36               	goto	u220_20
  5776     0335                     u220_21:
  5777     0335  2B3C               	goto	i1l2579
  5778     0336                     u220_20:
  5779     0336                     i1l2577:
  5780     0336  300B               	movlw	11
  5781     0337  0660               	xorwf	_mes,w
  5782     0338  1D03               	btfss	3,2
  5783     0339  2B3B               	goto	u221_21
  5784     033A  2B3C               	goto	u221_20
  5785     033B                     u221_21:
  5786     033B  2B48               	goto	i1l2583
  5787     033C                     u221_20:
  5788     033C                     i1l2579:
  5789     033C  0861               	movf	_dia,w
  5790     033D  1903               	btfsc	3,2
  5791     033E  2B40               	goto	u222_21
  5792     033F  2B41               	goto	u222_20
  5793     0340                     u222_21:
  5794     0340  2B48               	goto	i1l2583
  5795     0341                     u222_20:
  5796     0341                     i1l2581:
  5797                           
  5798                           ;main_master.c: 187:                         Set_day(30);
  5799     0341  301E               	movlw	30
  5800     0342  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5801                           
  5802                           ;main_master.c: 188:                     }
  5803     0347  2B59               	goto	i1l219
  5804     0348                     i1l2583:
  5805     0348  3002               	movlw	2
  5806     0349  0660               	xorwf	_mes,w
  5807     034A  1D03               	btfss	3,2
  5808     034B  2B4D               	goto	u223_21
  5809     034C  2B4E               	goto	u223_20
  5810     034D                     u223_21:
  5811     034D  2B59               	goto	i1l219
  5812     034E                     u223_20:
  5813     034E                     i1l2585:
  5814     034E  0861               	movf	_dia,w
  5815     034F  1903               	btfsc	3,2
  5816     0350  2B52               	goto	u224_21
  5817     0351  2B53               	goto	u224_20
  5818     0352                     u224_21:
  5819     0352  2B59               	goto	i1l219
  5820     0353                     u224_20:
  5821     0353                     i1l2587:
  5822                           
  5823                           ;main_master.c: 190:                         Set_day(28);
  5824     0353  301C               	movlw	28
  5825     0354  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5826     0359                     i1l219:
  5827                           
  5828                           ;main_master.c: 192:                     Set_month(mes);
  5829     0359  1283               	bcf	3,5	;RP0=0, select bank0
  5830     035A  1303               	bcf	3,6	;RP1=0, select bank0
  5831     035B  0860               	movf	_mes,w
  5832     035C  120A  158A  257A  120A  118A  	fcall	i1_Set_month
  5833     0361  2B09               	goto	i1l2561
  5834     0362                     i1l2591:
  5835     0362  3003               	movlw	3
  5836     0363  064A               	xorwf	_selector,w
  5837     0364  1D03               	btfss	3,2
  5838     0365  2B67               	goto	u225_21
  5839     0366  2B68               	goto	u225_20
  5840     0367                     u225_21:
  5841     0367  2B82               	goto	i1l212
  5842     0368                     u225_20:
  5843     0368                     i1l2593:
  5844                           
  5845                           ;main_master.c: 197:                 if (ano == 99){
  5846     0368  3063               	movlw	99
  5847     0369  065F               	xorwf	_ano,w
  5848     036A  1D03               	btfss	3,2
  5849     036B  2B6D               	goto	u226_21
  5850     036C  2B6E               	goto	u226_20
  5851     036D                     u226_21:
  5852     036D  2B77               	goto	i1l2599
  5853     036E                     u226_20:
  5854     036E                     i1l2595:
  5855                           
  5856                           ;main_master.c: 198:                     ano = 99;
  5857     036E  3063               	movlw	99
  5858     036F  00DF               	movwf	_ano
  5859     0370                     i1l2597:
  5860                           
  5861                           ;main_master.c: 199:                     Set_year(ano);
  5862     0370  085F               	movf	_ano,w
  5863     0371  120A  158A  259D  120A  118A  	fcall	i1_Set_year
  5864                           
  5865                           ;main_master.c: 200:                 }
  5866     0376  2B09               	goto	i1l2561
  5867     0377                     i1l2599:
  5868                           
  5869                           ;main_master.c: 202:                     ano++;
  5870     0377  3001               	movlw	1
  5871     0378  00F3               	movwf	??_isr
  5872     0379  0873               	movf	??_isr,w
  5873     037A  07DF               	addwf	_ano,f
  5874     037B                     i1l2601:
  5875                           
  5876                           ;main_master.c: 203:                     Set_year(ano);
  5877     037B  085F               	movf	_ano,w
  5878     037C  120A  158A  259D  120A  118A  	fcall	i1_Set_year
  5879     0381  2B09               	goto	i1l2561
  5880     0382                     i1l212:
  5881     0382                     i1l2605:
  5882                           
  5883                           ;main_master.c: 208:         if (PORTBbits.RB1 == 0){
  5884     0382  1283               	bcf	3,5	;RP0=0, select bank0
  5885     0383  1303               	bcf	3,6	;RP1=0, select bank0
  5886     0384  1886               	btfsc	6,1	;volatile
  5887     0385  2B87               	goto	u227_21
  5888     0386  2B88               	goto	u227_20
  5889     0387                     u227_21:
  5890     0387  2B93               	goto	i1l2609
  5891     0388                     u227_20:
  5892     0388                     i1l2607:
  5893                           
  5894                           ;main_master.c: 209:             bandera = 3;
  5895     0388  3003               	movlw	3
  5896     0389  00F9               	movwf	_bandera
  5897                           
  5898                           ;main_master.c: 210:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5899     038A  3003               	movlw	3
  5900     038B  00F4               	movwf	??_isr+1
  5901     038C  3097               	movlw	151
  5902     038D  00F3               	movwf	??_isr
  5903     038E                     u297_27:
  5904     038E  0BF3               	decfsz	??_isr,f
  5905     038F  2B8E               	goto	u297_27
  5906     0390  0BF4               	decfsz	??_isr+1,f
  5907     0391  2B8E               	goto	u297_27
  5908     0392  2B93               	nop2
  5909     0393                     i1l2609:
  5910                           
  5911                           ;main_master.c: 212:         if (PORTBbits.RB1 == 1 && bandera == 3){
  5912     0393  1283               	bcf	3,5	;RP0=0, select bank0
  5913     0394  1303               	bcf	3,6	;RP1=0, select bank0
  5914     0395  1C86               	btfss	6,1	;volatile
  5915     0396  2B98               	goto	u228_21
  5916     0397  2B99               	goto	u228_20
  5917     0398                     u228_21:
  5918     0398  2BF5               	goto	i1l238
  5919     0399                     u228_20:
  5920     0399                     i1l2611:
  5921     0399  3003               	movlw	3
  5922     039A  0679               	xorwf	_bandera,w
  5923     039B  1D03               	btfss	3,2
  5924     039C  2B9E               	goto	u229_21
  5925     039D  2B9F               	goto	u229_20
  5926     039E                     u229_21:
  5927     039E  2BF5               	goto	i1l238
  5928     039F                     u229_20:
  5929     039F                     i1l2613:
  5930                           
  5931                           ;main_master.c: 213:             if (selector == 1){
  5932     039F  034A               	decf	_selector,w
  5933     03A0  1D03               	btfss	3,2
  5934     03A1  2BA3               	goto	u230_21
  5935     03A2  2BA4               	goto	u230_20
  5936     03A3                     u230_21:
  5937     03A3  2BBC               	goto	i1l2627
  5938     03A4                     u230_20:
  5939     03A4                     i1l2615:
  5940                           
  5941                           ;main_master.c: 214:                 if (dia == 1){
  5942     03A4  0361               	decf	_dia,w
  5943     03A5  1D03               	btfss	3,2
  5944     03A6  2BA8               	goto	u231_21
  5945     03A7  2BA9               	goto	u231_20
  5946     03A8                     u231_21:
  5947     03A8  2BB2               	goto	i1l2621
  5948     03A9                     u231_20:
  5949     03A9                     i1l2617:
  5950                           
  5951                           ;main_master.c: 215:                     dia = 1;
  5952     03A9  01E1               	clrf	_dia
  5953     03AA  0AE1               	incf	_dia,f
  5954     03AB                     i1l2619:
  5955                           
  5956                           ;main_master.c: 216:                     Set_day(dia);
  5957     03AB  0861               	movf	_dia,w
  5958     03AC  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5959                           
  5960                           ;main_master.c: 217:                 }
  5961     03B1  2BBA               	goto	i1l2625
  5962     03B2                     i1l2621:
  5963                           
  5964                           ;main_master.c: 219:                     dia--;
  5965     03B2  3001               	movlw	1
  5966     03B3  02E1               	subwf	_dia,f
  5967     03B4                     i1l2623:
  5968                           
  5969                           ;main_master.c: 220:                     Set_day(dia);
  5970     03B4  0861               	movf	_dia,w
  5971     03B5  120A  158A  2557  120A  118A  	fcall	i1_Set_day
  5972     03BA                     i1l2625:
  5973                           
  5974                           ;main_master.c: 222:                 bandera = 0;
  5975     03BA  01F9               	clrf	_bandera
  5976                           
  5977                           ;main_master.c: 223:             }
  5978     03BB  2BF5               	goto	i1l238
  5979     03BC                     i1l2627:
  5980     03BC  3002               	movlw	2
  5981     03BD  064A               	xorwf	_selector,w
  5982     03BE  1D03               	btfss	3,2
  5983     03BF  2BC1               	goto	u232_21
  5984     03C0  2BC2               	goto	u232_20
  5985     03C1                     u232_21:
  5986     03C1  2BD9               	goto	i1l2641
  5987     03C2                     u232_20:
  5988     03C2                     i1l2629:
  5989                           
  5990                           ;main_master.c: 225:                 if (mes == 1){
  5991     03C2  0360               	decf	_mes,w
  5992     03C3  1D03               	btfss	3,2
  5993     03C4  2BC6               	goto	u233_21
  5994     03C5  2BC7               	goto	u233_20
  5995     03C6                     u233_21:
  5996     03C6  2BD0               	goto	i1l2635
  5997     03C7                     u233_20:
  5998     03C7                     i1l2631:
  5999                           
  6000                           ;main_master.c: 226:                     mes = 1;
  6001     03C7  01E0               	clrf	_mes
  6002     03C8  0AE0               	incf	_mes,f
  6003     03C9                     i1l2633:
  6004                           
  6005                           ;main_master.c: 227:                     Set_month(mes);
  6006     03C9  0860               	movf	_mes,w
  6007     03CA  120A  158A  257A  120A  118A  	fcall	i1_Set_month
  6008                           
  6009                           ;main_master.c: 228:                 }
  6010     03CF  2BBA               	goto	i1l2625
  6011     03D0                     i1l2635:
  6012                           
  6013                           ;main_master.c: 230:                     mes--;
  6014     03D0  3001               	movlw	1
  6015     03D1  02E0               	subwf	_mes,f
  6016     03D2                     i1l2637:
  6017                           
  6018                           ;main_master.c: 231:                     Set_month(mes);
  6019     03D2  0860               	movf	_mes,w
  6020     03D3  120A  158A  257A  120A  118A  	fcall	i1_Set_month
  6021     03D8  2BBA               	goto	i1l2625
  6022     03D9                     i1l2641:
  6023     03D9  3003               	movlw	3
  6024     03DA  064A               	xorwf	_selector,w
  6025     03DB  1D03               	btfss	3,2
  6026     03DC  2BDE               	goto	u234_21
  6027     03DD  2BDF               	goto	u234_20
  6028     03DE                     u234_21:
  6029     03DE  2BF5               	goto	i1l226
  6030     03DF                     u234_20:
  6031     03DF                     i1l2643:
  6032                           
  6033                           ;main_master.c: 236:                 if (ano == 0){
  6034     03DF  085F               	movf	_ano,w
  6035     03E0  1D03               	btfss	3,2
  6036     03E1  2BE3               	goto	u235_21
  6037     03E2  2BE4               	goto	u235_20
  6038     03E3                     u235_21:
  6039     03E3  2BEC               	goto	i1l2649
  6040     03E4                     u235_20:
  6041     03E4                     i1l2645:
  6042                           
  6043                           ;main_master.c: 237:                     ano = 0;
  6044     03E4  01DF               	clrf	_ano
  6045     03E5                     i1l2647:
  6046                           
  6047                           ;main_master.c: 238:                     Set_year(ano);
  6048     03E5  085F               	movf	_ano,w
  6049     03E6  120A  158A  259D  120A  118A  	fcall	i1_Set_year
  6050                           
  6051                           ;main_master.c: 239:                 }
  6052     03EB  2BBA               	goto	i1l2625
  6053     03EC                     i1l2649:
  6054                           
  6055                           ;main_master.c: 241:                     ano--;
  6056     03EC  3001               	movlw	1
  6057     03ED  02DF               	subwf	_ano,f
  6058     03EE                     i1l2651:
  6059                           
  6060                           ;main_master.c: 242:                     Set_year(ano);
  6061     03EE  085F               	movf	_ano,w
  6062     03EF  120A  158A  259D  120A  118A  	fcall	i1_Set_year
  6063     03F4  2BBA               	goto	i1l2625
  6064     03F5                     i1l226:	
  6065                           ;main_master.c: 246:         }
  6066                           
  6067     03F5                     i1l238:
  6068     03F5  0876               	movf	??_isr+3,w
  6069     03F6  008A               	movwf	10
  6070     03F7  0E75               	swapf	??_isr+2,w
  6071     03F8  0083               	movwf	3
  6072     03F9  0EFE               	swapf	btemp,f
  6073     03FA  0E7E               	swapf	btemp,w
  6074     03FB  0009               	retfie
  6075     03FC                     __end_of_isr:
  6076                           
  6077                           	psect	intentry
  6078     0004                     __pintentry:	
  6079                           ;incstack = 0
  6080                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6081                           
  6082     0004                     interrupt_function:
  6083     007E                     saved_w	set	btemp
  6084     0004  00FE               	movwf	btemp
  6085     0005  0E03               	swapf	3,w
  6086     0006  00F5               	movwf	??_isr+2
  6087     0007  080A               	movf	10,w
  6088     0008  00F6               	movwf	??_isr+3
  6089     0009  120A  118A  2A11   	ljmp	_isr
  6090                           
  6091                           	psect	text35
  6092     0D9D                     __ptext35:	
  6093 ;; *************** function i1_Set_year *****************
  6094 ;; Defined at:
  6095 ;;		line 355 in file "main_master.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  year            1    wreg     unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  year            1    2[COMMON] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, pclath, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         0       0       0       0       0
  6110 ;;      Locals:         1       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0
  6112 ;;      Totals:         1       0       0       0       0
  6113 ;;Total ram usage:        1 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; Hardware stack levels required when called: 1
  6116 ;; This function calls:
  6117 ;;		i1_Dec_to_Bcd
  6118 ;;		i1_I2C_Start
  6119 ;;		i1_I2C_Stop
  6120 ;;		i1_I2C_Write
  6121 ;; This function is called by:
  6122 ;;		_isr
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126     0D9D                     i1_Set_year:	
  6127                           ;psect for function i1_Set_year
  6128                           
  6129                           
  6130                           ;incstack = 0
  6131                           ; Regs used in i1_Set_year: [wreg+status,2+status,0+pclath+cstack]
  6132                           ;i1Set_year@year stored from wreg
  6133     0D9D  00F2               	movwf	i1Set_year@year
  6134     0D9E                     i1l2379:
  6135                           
  6136                           ;main_master.c: 356:     I2C_Start();
  6137     0D9E  120A  158A  2455  120A  158A  	fcall	i1_I2C_Start
  6138     0DA3                     i1l2381:
  6139                           
  6140                           ;main_master.c: 357:     I2C_Write(0xD0);
  6141     0DA3  30D0               	movlw	208
  6142     0DA4  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6143     0DA9                     i1l2383:
  6144                           
  6145                           ;main_master.c: 358:     I2C_Write(0x06);
  6146     0DA9  3006               	movlw	6
  6147     0DAA  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6148     0DAF                     i1l2385:
  6149                           
  6150                           ;main_master.c: 359:     I2C_Write(Dec_to_Bcd(year));
  6151     0DAF  0872               	movf	i1Set_year@year,w
  6152     0DB0  120A  158A  24C6  120A  158A  	fcall	i1_Dec_to_Bcd
  6153     0DB5  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6154     0DBA                     i1l2387:
  6155                           
  6156                           ;main_master.c: 360:     I2C_Stop();
  6157     0DBA  120A  158A  245F  120A  158A  	fcall	i1_I2C_Stop
  6158     0DBF                     i1l271:
  6159     0DBF  0008               	return
  6160     0DC0                     __end_ofi1_Set_year:
  6161                           
  6162                           	psect	text36
  6163     0D7A                     __ptext36:	
  6164 ;; *************** function i1_Set_month *****************
  6165 ;; Defined at:
  6166 ;;		line 347 in file "main_master.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  month           1    wreg     unsigned char 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  month           1    2[COMMON] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, pclath, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6180 ;;      Params:         0       0       0       0       0
  6181 ;;      Locals:         1       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0
  6183 ;;      Totals:         1       0       0       0       0
  6184 ;;Total ram usage:        1 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 1
  6187 ;; This function calls:
  6188 ;;		i1_Dec_to_Bcd
  6189 ;;		i1_I2C_Start
  6190 ;;		i1_I2C_Stop
  6191 ;;		i1_I2C_Write
  6192 ;; This function is called by:
  6193 ;;		_isr
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197     0D7A                     i1_Set_month:	
  6198                           ;psect for function i1_Set_month
  6199                           
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in i1_Set_month: [wreg+status,2+status,0+pclath+cstack]
  6203                           ;i1Set_month@month stored from wreg
  6204     0D7A  00F2               	movwf	i1Set_month@month
  6205     0D7B                     i1l2369:
  6206                           
  6207                           ;main_master.c: 348:     I2C_Start();
  6208     0D7B  120A  158A  2455  120A  158A  	fcall	i1_I2C_Start
  6209     0D80                     i1l2371:
  6210                           
  6211                           ;main_master.c: 349:     I2C_Write(0xD0);
  6212     0D80  30D0               	movlw	208
  6213     0D81  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6214     0D86                     i1l2373:
  6215                           
  6216                           ;main_master.c: 350:     I2C_Write(0x05);
  6217     0D86  3005               	movlw	5
  6218     0D87  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6219     0D8C                     i1l2375:
  6220                           
  6221                           ;main_master.c: 351:     I2C_Write(Dec_to_Bcd(month));
  6222     0D8C  0872               	movf	i1Set_month@month,w
  6223     0D8D  120A  158A  24C6  120A  158A  	fcall	i1_Dec_to_Bcd
  6224     0D92  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6225     0D97                     i1l2377:
  6226                           
  6227                           ;main_master.c: 352:     I2C_Stop();
  6228     0D97  120A  158A  245F  120A  158A  	fcall	i1_I2C_Stop
  6229     0D9C                     i1l268:
  6230     0D9C  0008               	return
  6231     0D9D                     __end_ofi1_Set_month:
  6232                           
  6233                           	psect	text37
  6234     0D57                     __ptext37:	
  6235 ;; *************** function i1_Set_day *****************
  6236 ;; Defined at:
  6237 ;;		line 339 in file "main_master.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  day             1    wreg     unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  day             1    2[COMMON] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, pclath, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6251 ;;      Params:         0       0       0       0       0
  6252 ;;      Locals:         1       0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0
  6254 ;;      Totals:         1       0       0       0       0
  6255 ;;Total ram usage:        1 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; Hardware stack levels required when called: 1
  6258 ;; This function calls:
  6259 ;;		i1_Dec_to_Bcd
  6260 ;;		i1_I2C_Start
  6261 ;;		i1_I2C_Stop
  6262 ;;		i1_I2C_Write
  6263 ;; This function is called by:
  6264 ;;		_isr
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268     0D57                     i1_Set_day:	
  6269                           ;psect for function i1_Set_day
  6270                           
  6271                           
  6272                           ;incstack = 0
  6273                           ; Regs used in i1_Set_day: [wreg+status,2+status,0+pclath+cstack]
  6274                           ;i1Set_day@day stored from wreg
  6275     0D57  00F2               	movwf	i1Set_day@day
  6276     0D58                     i1l2359:
  6277                           
  6278                           ;main_master.c: 340:     I2C_Start();
  6279     0D58  120A  158A  2455  120A  158A  	fcall	i1_I2C_Start
  6280     0D5D                     i1l2361:
  6281                           
  6282                           ;main_master.c: 341:     I2C_Write(0xD0);
  6283     0D5D  30D0               	movlw	208
  6284     0D5E  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6285     0D63                     i1l2363:
  6286                           
  6287                           ;main_master.c: 342:     I2C_Write(0x04);
  6288     0D63  3004               	movlw	4
  6289     0D64  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6290     0D69                     i1l2365:
  6291                           
  6292                           ;main_master.c: 343:     I2C_Write(Dec_to_Bcd(day));
  6293     0D69  0872               	movf	i1Set_day@day,w
  6294     0D6A  120A  158A  24C6  120A  158A  	fcall	i1_Dec_to_Bcd
  6295     0D6F  120A  158A  24AA  120A  158A  	fcall	i1_I2C_Write
  6296     0D74                     i1l2367:
  6297                           
  6298                           ;main_master.c: 344:     I2C_Stop();
  6299     0D74  120A  158A  245F  120A  158A  	fcall	i1_I2C_Stop
  6300     0D79                     i1l265:
  6301     0D79  0008               	return
  6302     0D7A                     __end_ofi1_Set_day:
  6303                           
  6304                           	psect	text38
  6305     0CAA                     __ptext38:	
  6306 ;; *************** function i1_I2C_Write *****************
  6307 ;; Defined at:
  6308 ;;		line 64 in file "i2c.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  data            1    wreg     unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  data            1    0[COMMON] unsigned char 
  6313 ;;  b_ok            2    0        short 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  2    0[None  ] short 
  6316 ;; Registers used:
  6317 ;;		wreg
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6323 ;;      Params:         0       0       0       0       0
  6324 ;;      Locals:         1       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0
  6326 ;;      Totals:         1       0       0       0       0
  6327 ;;Total ram usage:        1 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		i1_Set_day
  6333 ;;		i1_Set_month
  6334 ;;		i1_Set_year
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338     0CAA                     i1_I2C_Write:	
  6339                           ;psect for function i1_I2C_Write
  6340                           
  6341                           
  6342                           ;incstack = 0
  6343                           ; Regs used in i1_I2C_Write: [wreg]
  6344                           ;i1I2C_Write@data stored from wreg
  6345     0CAA  00F0               	movwf	i1I2C_Write@data
  6346     0CAB                     i1l2205:
  6347                           
  6348                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  6349     0CAB  0870               	movf	i1I2C_Write@data,w
  6350     0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  6351     0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  6352     0CAE  0093               	movwf	19	;volatile
  6353     0CAF                     i1l55:	
  6354                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  6355                           
  6356     0CAF  1D8C               	btfss	12,3	;volatile
  6357     0CB0  2CB2               	goto	u183_21
  6358     0CB1  2CB3               	goto	u183_20
  6359     0CB2                     u183_21:
  6360     0CB2  2CAF               	goto	i1l55
  6361     0CB3                     u183_20:
  6362     0CB3                     i1l57:
  6363                           
  6364                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  6365     0CB3  118C               	bcf	12,3	;volatile
  6366     0CB4                     i1l2207:
  6367     0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  6368     0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  6369     0CB6  0811               	movf	17,w	;volatile
  6370     0CB7                     i1l58:
  6371     0CB7  0008               	return
  6372     0CB8                     __end_ofi1_I2C_Write:
  6373                           
  6374                           	psect	text39
  6375     0C5F                     __ptext39:	
  6376 ;; *************** function i1_I2C_Stop *****************
  6377 ;; Defined at:
  6378 ;;		line 34 in file "i2c.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		None
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6392 ;;      Params:         0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0
  6395 ;;      Totals:         0       0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		i1_Set_day
  6402 ;;		i1_Set_month
  6403 ;;		i1_Set_year
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407     0C5F                     i1_I2C_Stop:	
  6408                           ;psect for function i1_I2C_Stop
  6409                           
  6410     0C5F                     i1l2203:	
  6411                           ;incstack = 0
  6412                           ; Regs used in i1_I2C_Stop: []
  6413                           
  6414                           
  6415                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  6416     0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  6417     0C60  1303               	bcf	3,6	;RP1=0, select bank1
  6418     0C61  1511               	bsf	17,2	;volatile
  6419     0C62                     i1l31:	
  6420                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  6421                           
  6422     0C62  1283               	bcf	3,5	;RP0=0, select bank0
  6423     0C63  1D8C               	btfss	12,3	;volatile
  6424     0C64  2C66               	goto	u182_21
  6425     0C65  2C67               	goto	u182_20
  6426     0C66                     u182_21:
  6427     0C66  2C62               	goto	i1l31
  6428     0C67                     u182_20:
  6429     0C67                     i1l33:
  6430                           
  6431                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  6432     0C67  118C               	bcf	12,3	;volatile
  6433     0C68                     i1l34:
  6434     0C68  0008               	return
  6435     0C69                     __end_ofi1_I2C_Stop:
  6436                           
  6437                           	psect	text40
  6438     0C55                     __ptext40:	
  6439 ;; *************** function i1_I2C_Start *****************
  6440 ;; Defined at:
  6441 ;;		line 27 in file "i2c.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		None
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		i1_Set_day
  6465 ;;		i1_Set_month
  6466 ;;		i1_Set_year
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470     0C55                     i1_I2C_Start:	
  6471                           ;psect for function i1_I2C_Start
  6472                           
  6473     0C55                     i1l2201:	
  6474                           ;incstack = 0
  6475                           ; Regs used in i1_I2C_Start: []
  6476                           
  6477                           
  6478                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  6479     0C55  1683               	bsf	3,5	;RP0=1, select bank1
  6480     0C56  1303               	bcf	3,6	;RP1=0, select bank1
  6481     0C57  1411               	bsf	17,0	;volatile
  6482     0C58                     i1l25:	
  6483                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  6484                           
  6485     0C58  1283               	bcf	3,5	;RP0=0, select bank0
  6486     0C59  1D8C               	btfss	12,3	;volatile
  6487     0C5A  2C5C               	goto	u181_21
  6488     0C5B  2C5D               	goto	u181_20
  6489     0C5C                     u181_21:
  6490     0C5C  2C58               	goto	i1l25
  6491     0C5D                     u181_20:
  6492     0C5D                     i1l27:
  6493                           
  6494                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  6495     0C5D  118C               	bcf	12,3	;volatile
  6496     0C5E                     i1l28:
  6497     0C5E  0008               	return
  6498     0C5F                     __end_ofi1_I2C_Start:
  6499                           
  6500                           	psect	text41
  6501     0CC6                     __ptext41:	
  6502 ;; *************** function i1_Dec_to_Bcd *****************
  6503 ;; Defined at:
  6504 ;;		line 363 in file "main_master.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  dec_number      1    wreg     unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  dec_number      1    0[COMMON] unsigned char 
  6509 ;;  bcd_number      1    1[COMMON] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      unsigned char 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6519 ;;      Params:         0       0       0       0       0
  6520 ;;      Locals:         2       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0
  6522 ;;      Totals:         2       0       0       0       0
  6523 ;;Total ram usage:        2 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		i1_Set_day
  6529 ;;		i1_Set_month
  6530 ;;		i1_Set_year
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534     0CC6                     i1_Dec_to_Bcd:	
  6535                           ;psect for function i1_Dec_to_Bcd
  6536                           
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in i1_Dec_to_Bcd: [wreg+status,2+status,0]
  6540                           ;i1Dec_to_Bcd@dec_number stored from wreg
  6541     0CC6  00F0               	movwf	i1Dec_to_Bcd@dec_number
  6542     0CC7                     i1l2211:
  6543                           
  6544                           ;main_master.c: 364:     uint8_t bcd_number;;main_master.c: 365:     bcd_number = 0;
  6545     0CC7  01F1               	clrf	i1Dec_to_Bcd@bcd_number
  6546     0CC8                     i1l2213:
  6547                           
  6548                           ;main_master.c: 367:         if (dec_number >= 10){
  6549     0CC8  300A               	movlw	10
  6550     0CC9  0270               	subwf	i1Dec_to_Bcd@dec_number,w
  6551     0CCA  1C03               	skipc
  6552     0CCB  2CCD               	goto	u184_21
  6553     0CCC  2CCE               	goto	u184_20
  6554     0CCD                     u184_21:
  6555     0CCD  2CD5               	goto	i1l2217
  6556     0CCE                     u184_20:
  6557     0CCE                     i1l2215:
  6558                           
  6559                           ;main_master.c: 368:             dec_number = dec_number - 10;
  6560     0CCE  0870               	movf	i1Dec_to_Bcd@dec_number,w
  6561     0CCF  3EF6               	addlw	246
  6562     0CD0  00F0               	movwf	i1Dec_to_Bcd@dec_number
  6563                           
  6564                           ;main_master.c: 369:             bcd_number = bcd_number + 0b00010000;
  6565     0CD1  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  6566     0CD2  3E10               	addlw	16
  6567     0CD3  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  6568                           
  6569                           ;main_master.c: 370:         }
  6570     0CD4  2CC8               	goto	i1l2213
  6571     0CD5                     i1l2217:
  6572                           
  6573                           ;main_master.c: 372:             bcd_number = bcd_number + dec_number;
  6574     0CD5  0870               	movf	i1Dec_to_Bcd@dec_number,w
  6575     0CD6  0771               	addwf	i1Dec_to_Bcd@bcd_number,w
  6576     0CD7  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  6577     0CD8                     i1l2219:	
  6578                           ;main_master.c: 373:             break;
  6579                           
  6580                           
  6581                           ;main_master.c: 376:     return bcd_number;
  6582     0CD8  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  6583     0CD9                     i1l279:
  6584     0CD9  0008               	return
  6585     0CDA                     __end_ofi1_Dec_to_Bcd:
  6586     007E                     btemp	set	126	;btemp
  6587     007E                     wtemp0	set	126
  6588                           
  6589                           	psect	idloc
  6590                           
  6591                           ;Config register IDLOC0 @ 0x2000
  6592                           ;	unspecified, using default values
  6593     2000                     	org	8192
  6594     2000  3FFF               	dw	16383
  6595                           
  6596                           ;Config register IDLOC1 @ 0x2001
  6597                           ;	unspecified, using default values
  6598     2001                     	org	8193
  6599     2001  3FFF               	dw	16383
  6600                           
  6601                           ;Config register IDLOC2 @ 0x2002
  6602                           ;	unspecified, using default values
  6603     2002                     	org	8194
  6604     2002  3FFF               	dw	16383
  6605                           
  6606                           ;Config register IDLOC3 @ 0x2003
  6607                           ;	unspecified, using default values
  6608     2003                     	org	8195
  6609     2003  3FFF               	dw	16383
  6610                           
  6611                           	psect	config
  6612                           
  6613                           ;Config register CONFIG1 @ 0x2007
  6614                           ;	Oscillator Selection bits
  6615                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6616                           ;	Watchdog Timer Enable bit
  6617                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6618                           ;	Power-up Timer Enable bit
  6619                           ;	PWRTE = OFF, PWRT disabled
  6620                           ;	RE3/MCLR pin function select bit
  6621                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6622                           ;	Code Protection bit
  6623                           ;	CP = OFF, Program memory code protection is disabled
  6624                           ;	Data Code Protection bit
  6625                           ;	CPD = OFF, Data memory code protection is disabled
  6626                           ;	Brown Out Reset Selection bits
  6627                           ;	BOREN = OFF, BOR disabled
  6628                           ;	Internal External Switchover bit
  6629                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6630                           ;	Fail-Safe Clock Monitor Enabled bit
  6631                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6632                           ;	Low Voltage Programming Enable bit
  6633                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6634                           ;	In-Circuit Debugger Mode bit
  6635                           ;	DEBUG = 0x1, unprogramme  6636     2007                     	org	8199
  6637     2007  20D4               	dw	8404
  6638                           
  6639                           ;Config register CONFIG2 @ 0x2008
  6640                           ;	Brown-out Reset Selection bit
  6641                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6642                           ;	Flash Program Memory Self Write Enable bits
  6643                           ;	WRT = OFF, Write protection off
  6644     2008                     	org	8200
  6645     2008  3FFF               	dw	16383

Data Sizes:
    Strings     53
    Constant    10
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     41      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_11(CODE[4]), STR_9(CODE[18]), STR_7(CODE[18]), STR_5(CODE[18]), 
		 -> STR_3(CODE[18]), STR_2(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[2]), 
		 -> buffer(BANK0[20]), STR_1(CODE[4]), 

    Read_Fecha@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK0[1]), 

    Read_Fecha@mo	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK0[1]), 

    Read_Fecha@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK0[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> hora(BANK0[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minuto(BANK0[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundo(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_day
    _isr->i1_Set_month
    _isr->i1_Set_year
    i1_Set_year->i1_Dec_to_Bcd
    i1_Set_month->i1_Dec_to_Bcd
    i1_Set_day->i1_Dec_to_Bcd

Critical Paths under _main in BANK0

    _main->_Slave1
    _setup->_I2C_Init_Master
    _Slave1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Set_year->_Dec_to_Bcd
    _Set_sec->_Dec_to_Bcd
    _Set_month->_Dec_to_Bcd
    _Set_hour->_Dec_to_Bcd
    _Set_day_week->_Dec_to_Bcd
    _Set_day->_Dec_to_Bcd
    _Read_Time->_Bcd_to_Dec
    _Read_Fecha->_Bcd_to_Dec
    _Read->_I2C_Write
    _Bcd_to_Dec->___bmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   15694
                                             35 BANK0      6     6      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Read_Fecha
                          _Read_Time
                            _Set_day
                       _Set_day_week
                           _Set_hour
                          _Set_month
                            _Set_sec
                           _Set_year
                             _Slave1
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      93
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Slave1                                               2     2      0    6141
                                             33 BANK0      2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    3191
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1535
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day_week                                         1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     198
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2     653
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Fecha                                           3     1      2     653
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 3     3      0     109
                                              1 BANK0      3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      41
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     561
                                              3 COMMON     4     4      0
                          i1_Set_day
                        i1_Set_month
                         i1_Set_year
 ---------------------------------------------------------------------------------
 (6) i1_Set_year                                           1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_month                                          1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_day                                            1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Write                                          3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Dec_to_Bcd                                         2     2      0     136
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Fecha
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_day_week
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Slave1
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setup
     _I2C_Init_Master
   _sprintf

 _isr (ROOT)
   i1_Set_day
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write
   i1_Set_month
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write
   i1_Set_year
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 13:01:35 2023

                       pc 0002            ___bmul@product 0022                        l22 0F20  
                      l31 0C80                        l40 0C72                        l25 0C76  
                      l33 0C85                        l34 0C86                        l51 0C90  
                      l27 0C7B                        l52 0C91                        l28 0C7C  
                      l61 0C95                        l37 0C6C                        l63 0C9A  
                      l39 0C71                        l55 0CBD                        l64 0C9C  
                      l49 0C8B                        l57 0CC1                        l58 0CC5  
              _Bcd_to_Dec 07E1                        fsr 0004       ___wmul@multiplicand 0022  
             ?i1_I2C_Stop 0070                       l300 0D55                       l302 0D56  
                     l320 0FC3                       l305 0D36                       l241 0DE4  
                     l250 0F55                       l314 06D2                       l171 020D  
                     l308 0CA9                       l244 07E0                       l317 0637  
                     l253 0EA7                       l262 0E32                       l326 075E  
                     l430 0416                       l247 0F8A                       l271 0ECE  
                     l265 0E0B                       l282 07FC                       l442 04A3  
                     l259 0E59                       l451 0507                       l268 0E80  
                     l444 047F                       l285 07A2                       l294 0D40  
                     l295 0D41                       l279 0D03                       l296 0D47  
                     l472 0EDD                       l297 0D48                       l298 0D4E  
                     l474 0EF5                       l299 0D4F                       l468 05D2  
                     l744 0718                       l498 0D1A                       l754 0FFF  
                     l925 0CED                       _dia 0061                       _ano 005F  
                     _dow 0078                       _mes 0060                       _isr 0211  
                     fsr0 0004                       indf 0000                _Dec_to_Bcd 0CEE  
            ?i1_I2C_Start 0070              ?i1_I2C_Write 0070                      l3001 0DC9  
                    l3011 0DD0                      l3003 0DCC                      l3101 0EAB  
                    l3021 0DD7                      l3013 0DD1                      l3005 0DCD  
                    l3103 0EB0                      l3111 075F                      l3031 0DDC  
                    l3023 0DD8                      l3015 0DD4                      l3007 0DCE  
                    l3041 05E3                      l3105 0EB6                      l3121 078B  
                    l3113 0764                      l3033 0DDD                      l3025 0DD9  
                    l3017 0DD5                      l3009 0DCF                      l3201 01EC  
                    l3043 05F3                      l3051 0E84                      l3107 0EBC  
                    l3123 0796                      l3115 076A                      l3035 0DDE  
                    l3027 0DDA                      l3019 0DD6                      l3203 01F7  
                    l3131 001F                      l3045 05F9                      l3037 05D3  
                    l3061 0DE8                      l3053 0E89                      l3109 0EC9  
                    l3125 079B                      l3117 0772                      l3029 0DDB  
                    l3141 0055                      l3133 0038                      l3047 0630  
                    l3039 05D9                      l2183 07E4                      l3127 0F59  
                    l3063 0DED                      l3071 0E36                      l3055 0E8F  
                    l3119 077A                      l3151 0074                      l3143 005B  
                    l3135 0043                      l3049 0C9D                      l2185 07FB  
                    l3129 0F24                      l3065 0DF3                      l3081 0E0F  
                    l3073 0E3B                      l3057 0E95                      l3161 00B9  
                    l3153 0079                      l3145 0061                      l3137 0049  
                    l3067 0DF9                      l3083 0E14                      l3075 0E41  
                    l3091 0E5D                      l3059 0EA2                      l3171 0114  
                    l3163 00C5                      l3155 0085                      l3147 0067  
                    l3139 004F                      l3069 0E06                      l3085 0E1A  
                    l3077 0E47                      l3093 0E62                      l3261 0495  
                    l3173 0119                      l3181 0163                      l3165 00F9  
                    l3157 008F                      l3149 006D                      l2711 0D3E  
                    l3087 0E20                      l3079 0E54                      l3095 0E68  
                    l3191 01A2                      l3183 0169                      l3175 0123  
                    l3167 0103                      l3159 00AE                      l2713 0D45  
                    l2721 0C7D                      l3089 0E2D                      l3097 0E6E  
                    l2801 0F0A                      l3185 016E                      l3193 01B8  
                    l3177 0142                      l3169 010F                      l2715 0D4C  
                    l2723 0C69                      l3099 0E7B                      l2811 068F  
                    l3259 0429                      l2803 0F12                      l3195 01BE  
                    l3187 0178                      l3179 014D                      l2717 0D53  
                    l2709 0D3A                      l2741 0D1F                      l1941 0D12  
                    l1933 0D07                      l2725 0C87                      l2733 0C92  
                    l2821 06B4                      l2813 069C                      l2901 0512  
                    l2805 0F17                      l3197 01C3                      l3189 0197  
                    l2743 0D25                      l1943 0D19                      l1935 0D08  
                    l2735 0C9B                      l2719 0C73                      l2727 0CBB  
                    l2823 06C1                      l2815 069F                      l2751 0F94  
                    l2831 071E                      l1951 06DD                      l2911 0531  
                    l2903 051E                      l2807 0F1C                      l3199 01CD  
                    l2745 0D28                      l1937 0D0C                      l2729 0CC2  
                    l2825 06C4                      l2817 06A5                      l2809 068A  
                    l2761 0FB0                      l2753 0F95                      l2833 073A  
                    l1961 0700                      l1953 06E0                      l2913 0535  
                    l2921 0551                      l2905 0522                      l2841 0408  
                    l2747 0D33                      l2739 0D1E                      l1939 0D10  
                    l2827 06CA                      l2819 06AE                      l2763 0FB6  
                    l2755 0FA3                      l2835 0742                      l1963 0706  
                    l1955 06E7                      l1947 06D3                      l2771 0CDE  
                    l2931 0572                      l2923 0557                      l2915 053B  
                    l2907 0526                      l2851 041B                      l2843 040D  
                    l2765 0FB9                      l2757 0FA6                      l2749 0F8E  
                    l2829 0719                      l1965 0707                      l1957 06EB  
                    l1949 06D7                      l1981 0FDA                      l1973 0FC4  
                    l2781 0ECF                      l2773 0CE4                      l2941 05B1  
                    l2933 0577                      l2925 055C                      l2917 0540  
                    l2909 052C                      l2861 046A                      l2853 042E  
                    l2845 0412                      l2837 03FF                      l2767 0FC0  
                    l2759 0FAD                      l1967 070E                      l1959 06EF  
                    l1983 0FDE                      l1975 0FCC                      l1991 0FFB  
                    l2791 0EF1                      l2783 0ED3                      l2775 0CEA  
                    l2943 05B5                      l2927 0560                      l2919 0544  
                    l2935 057B                      l2871 04AF                      l2863 046E  
                    l2855 043E                      l2847 0417                      l2839 0402  
                    l2961 07A6                      l1969 0714                      l1985 0FE8  
                    l1977 0FCF                      l2785 0ED7                      l2777 0CEC  
                    l2769 0CDD                      l2937 057E                      l2929 056C  
                    l2881 04C9                      l2873 04B3                      l2857 0442  
                    l2945 05BE                      l2971 07C4                      l2963 07AB  
                    l1987 0FEE                      l1979 0FD6                      l2787 0EE4  
                    l2939 05AC                      l2875 04B7                      l2883 04CD  
                    l2947 05CE                      l2859 0457                      l2867 0481  
                    l2795 0EF9                      l2973 07CC                      l2965 07B1  
                    l1989 0FF5                      l2789 0EEB                      l2893 04EB  
                    l2877 04BB                      l2869 04A7                      l2797 0EFD  
                    l2975 07D1                      l2967 07B9                      l2959 07A6  
                    l2991 0D02                      l2983 0CF1                      l2895 04F5  
                    l2879 04C1                      l2799 0F07                      l2977 07D6  
                    l2969 07BE                      l2985 0CF2                      l2897 04FB  
                    l2889 04CF                      l2979 07DD                      l2987 0CF8  
                    l2899 0501                      l2995 0DC0                      l2989 0CFF  
                    l2997 0DC4                      l2999 0DC8                      ?_isr 0070  
                    STR_1 0678                      STR_2 0664                      STR_3 0652  
                    STR_4 0685                      STR_5 0652                      STR_6 067F  
                    STR_7 0652                      STR_8 0682                      STR_9 0652  
                    u1400 06EF                      u1401 06EE                      u1420 0700  
                    u1500 0FFB                      u1421 06FF                      u1501 0FFA  
                    u1415 06F0                      u1360 0D0C                      u2400 0C7B  
                    u1440 0714                      u1361 0D0B                      u2401 0C7A  
                    u1441 0713                      u1425 06FC                      u1370 0D19  
                    u2410 0C85                      u1450 0FCC                      u1371 0D18  
                    u2411 0C84                      u1435 0708                      u1451 0FCB  
                    u2420 0C71                      u1380 06DD                      u2421 0C70  
                    u1381 06DC                      u2430 0C90                      u1470 0FDE  
                    u2431 0C8F                      u1471 0FDD                      u2360 0D3E  
                    u2440 0CC1                      u2600 074C                      u1480 0FE8  
                    u2520 0EF1                      u2361 0D3D                      u2441 0CC0  
                    u1481 0FE7                      u1465 0FD0                      u2521 0EF0  
                    u2505 0EDE                      u2370 0D45                      u2450 0C9A  
                    u2610 075E                      u2530 0F12                      u2371 0D44  
                    u2451 0C99                      u2611 075D                      u1395 06E1  
                    u2515 0EE5                      u2531 0F11                      u2380 0D4C  
                    u2700 0501                      u2620 0408                      u2540 0F1C  
                    u2381 0D4B                      u1485 0FE4                      u2701 0500  
                    u2621 0407                      u2541 0F1B                      u2390 0D53  
                    u2550 068F                      u2470 0CE4                      u2710 0512  
                    u2630 043E                      u2391 0D52                      u2551 068E  
                    u1495 0FEF                      u2471 0CE3                      u2711 0511  
                    u2631 043D                      u2480 0CEA                      u2800 05CE  
                    u2720 0526                      u2640 047E                      u2465 0F98  
                    u2481 0CE9                      u2801 05CD                      u2721 0525  
                    u2641 047D                      u2810 0CF8                      u2570 06B4  
                    u2490 0ED7                      u2730 052C                      u2650 04A7  
                    u2811 0CF7                      u2571 06B3                      u2491 0ED6  
                    u2731 052B                      u2715 050E                      u2651 04A6  
                    u2740 053B                      u2660 04B7                      u2820 0074  
                    u2565 0695                      u2741 053A                      u2661 04B6  
                    u2821 0073                      u2590 0728                      u2750 0550  
                    u2670 04EA                      u2830 0114                      u2751 054F  
                    u2671 04E9                      u2831 0113                      u2760 0557  
                    u2680 04F5                      u2840 0169                      u2585 06BA  
                    u2761 0556                      u2681 04F4                      u2841 0168  
                    u2770 056C                      u2690 04FB                      u2850 01BE  
                    u2907 05DF                      u1795 07EC                      u2771 056B  
                    u2691 04FA                      u2675 04E6                      u2851 01BD  
                    u2780 0572                      u2917 05EF                      u2781 0571  
                    u2790 05BE                      i1l31 0C62                      u2927 05FD  
                    u2791 05BD                      i1l25 0C58                      i1l33 0C67  
                    u2937 0634                      i1l34 0C68                      i1l27 0C5D  
                    u2947 0D2E                      u2867 079F                      i1l28 0C5E  
                    u2877 0FAA                      i1l55 0CAF                      u2887 0FBD  
                    i1l57 0CB3                      u2897 07DA                      i1l58 0CB7  
                    _Read 07A3         ?_Lcd_Write_String 0025                      _main 001F  
                    _hora 0062          __end_of_I2C_Nack 0C92          __end_of_I2C_Read 0C9D  
                    btemp 007E          __end_of_I2C_Stop 0C87                      start 000C  
      ??_Lcd_Write_String 0027          ?_I2C_Init_Master 0070           __end_of_Lcd_Cmd 0D37  
              Read_Time@h 0029                Read_Time@m 0028                Read_Time@s 002A  
       ___bmul@multiplier 0023               Read@address 0022                     ??_isr 0073  
         __end_of_Set_day 0E0C           __end_of_Set_sec 0EA8                     ?_Read 0070  
                   ?_main 0070                     STR_10 067C                     STR_11 0674  
                   _ANSEL 0188           __end_of___lwdiv 0719                     i1l212 0382  
                   i1l226 03F5                     i1l219 0359                     i1l238 03F5  
                   i1l271 0DBF                     i1l265 0D79           __end_of___lwmod 1000  
                   i1l268 0D9C                     i1l188 0255                     i1l279 0CD9  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088           __end_of_dpowers 0652  
         __end_of_isdigit 0CEE                     _setup 0DC0               Read_Fecha@d 002A  
             Read_Fecha@y 0029         __end_of_I2C_Start 0C7D         __end_of_I2C_Write 0CC6  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 05D3               ?i1_Set_year 0070          __end_of_Lcd_Init 0638  
        __end_of_Lcd_Port 0D57           __initialization 000F              __end_of_Read 07E1  
              _Read_Fecha 0F21              __end_of_main 0211               ?_Bcd_to_Dec 0070  
                  ??_Read 0021                    ??_main 0043    i1Dec_to_Bcd@bcd_number 0071  
        __end_of_Set_hour 0E5A          __end_of_Set_year 0ECF                Set_day@day 0022  
             ?_Dec_to_Bcd 0070                Set_sec@sec 0022                    ?_setup 0070  
                  _ANSELH 0189    i1Dec_to_Bcd@dec_number 0070                    i1l2201 0C55  
                  i1l2211 0CC7                    i1l2203 0C5F                    i1l2213 0CC8  
                  i1l2205 0CAB                    i1l2215 0CCE                    i1l2207 0CB4  
                  u200_20 0275                    i1l2217 0CD5                    u200_21 0274  
                  i1l2219 0CD8                    i1l2501 0264                    i1l2511 0280  
                  i1l2503 026A                    u201_20 027A                    i1l2361 0D5D  
                  i1l2601 037B                    i1l2513 0286                    i1l2521 029E  
                  u201_21 0279                    i1l2505 0270                    i1l2363 0D63  
                  i1l2371 0D80                    i1l2611 0399                    i1l2523 02A4  
                  i1l2531 02B8                    i1l2515 028C                    i1l2507 0275  
                  i1l2365 0D69                    i1l2373 0D86                    i1l2381 0DA3  
                  i1l2621 03B2                    i1l2613 039F                    i1l2541 02D6  
                  i1l2533 02BE                    i1l2525 02A6                    i1l2517 0292  
                  i1l2509 027A                    i1l2605 0382                    i1l2367 0D74  
                  i1l2359 0D58                    i1l2375 0D8C                    i1l2383 0DA9  
                  i1l2631 03C7                    i1l2623 03B4                    i1l2615 03A4  
                  i1l2607 0388                    i1l2551 02F0                    i1l2543 02D8  
                  i1l2535 02C4                    i1l2527 02AD                    i1l2519 0298  
                  i1l2471 0227                    i1l2463 0211                    u210_20 02C4  
                  u202_20 0280                    i1l2377 0D97                    i1l2369 0D7B  
                  i1l2385 0DAF                    i1l2633 03C9                    i1l2641 03D9  
                  i1l2625 03BA                    i1l2617 03A9                    i1l2609 0393  
                  i1l2553 02F6                    i1l2545 02DF                    i1l2537 02CA  
                  u210_21 02C3                    i1l2529 02B1                    i1l2561 0309  
                  u202_21 027F                    i1l2481 023B                    i1l2473 022D  
                  i1l2465 0215                    i1l2387 0DBA                    i1l2379 0D9E  
                  i1l2651 03EE                    i1l2643 03DF                    i1l2635 03D0  
                  i1l2619 03AB                    i1l2627 03BC                    i1l2571 0320  
                  i1l2555 02F8                    i1l2547 02E3                    i1l2539 02D0  
                  i1l2563 030B                    i1l2483 0240                    i1l2475 0232  
                  i1l2467 021C                    i1l2645 03E4                    i1l2637 03D2  
                  i1l2629 03C2                    i1l2581 0341                    i1l2573 032A  
                  i1l2565 0311                    i1l2557 02FF                    i1l2549 02EA  
                  i1l2493 024C                    i1l2477 0237                    i1l2469 021E  
                  i1l2647 03E5                    i1l2583 0348                    i1l2575 0330  
                  i1l2567 0317                    i1l2591 0362                    i1l2559 0303  
                  i1l2495 0252                    i1l2487 0243                    i1l2479 0239  
                  u211_20 02CA                    u203_20 0286                    i1l2649 03EC  
                  i1l2593 0368                    i1l2585 034E                    i1l2577 0336  
                  i1l2569 0319                    u211_21 02C9                    u203_21 0285  
                  i1l2489 0249                    i1l2497 0255                    i1l2595 036E  
                  i1l2587 0353                    i1l2579 033C                    i1l2499 0259  
                  i1l2597 0370                    i1l2599 0377                    u220_20 0336  
                  u212_20 02D0                    u204_20 028C                    u220_21 0335  
                  u212_21 02CF                    u204_21 028B                    u221_20 033C  
                  u213_20 02D6                    u205_20 0292                    u221_21 033B  
                  u213_21 02D5                    u205_21 0291                    u230_20 03A4  
                  u222_20 0341                    u214_20 02F0                    u206_20 0298  
                  u230_21 03A3                    u222_21 0340                    u214_21 02EF  
                  u206_21 0297                    u231_20 03A9                    u223_20 034E  
                  u215_20 02F6                    u207_20 029E                    u231_21 03A8  
                  u223_21 034D                    u215_21 02F5                    u207_21 029D  
                  u232_20 03C2                    u224_20 0353                    u216_20 0311  
                  u208_20 02A4                    u232_21 03C1                    u224_21 0352  
                  u216_21 0310                    u208_21 02A3                    u233_20 03C7  
                  u225_20 0368                    u217_20 0317                    u209_20 02BE  
                  u233_21 03C6                    u225_21 0367                    u217_21 0316  
                  u209_21 02BD                    u234_20 03DF                    u226_20 036E  
                  u218_20 032A                    u234_21 03DE                    u226_21 036D  
                  u218_21 0329                    u235_20 03E4                    u227_20 0388  
                  u219_20 0330                    u235_21 03E3                    u227_21 0387  
                  u219_21 032F                    u228_20 0399                    u228_21 0398  
                  u181_20 0C5D                    u229_20 039F                    u181_21 0C5C  
                  u229_21 039E                    u182_20 0C67                    u190_20 021C  
                  u182_21 0C66                    u190_21 021B                    u183_20 0CB3  
                  u191_20 022D                    u183_21 0CB2                    u191_21 022C  
                  u184_20 0CCE                    u192_20 0232                    u184_21 0CCD  
                  u192_21 0231                    u193_20 0237                    u193_21 0236  
                  u194_20 0240                    u194_21 023F                    u195_20 0249  
                  u195_21 0248                    u196_20 0252                    u196_21 0251  
                  u197_20 0259                    u189_20 0215                    u197_21 0258  
                  u189_21 0214                    u198_20 026A                    u198_21 0269  
                  u199_20 0270                    u199_21 026F                    u295_27 0222  
                  u296_27 025F                    u297_27 038E                 ??_Lcd_Cmd 0021  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
               ??_Set_day 0022                    _Slave1 075F                 ??_Set_sec 0022  
                  ___bmul 0D04                    ___wmul 0ECF                 ??___lwdiv 0024  
               ??___lwmod 002C                    _buffer 004B                    _minuto 0063  
       __end_ofi1_Set_day 0D7A              Read_Fecha@mo 0028          i1Set_month@month 0072  
    Dec_to_Bcd@bcd_number 0021                 ?_I2C_Nack 0070                 ??_isdigit 0020  
               ?_I2C_Read 0070                 ?_I2C_Stop 0070                    saved_w 007E  
               ??_sprintf 0035           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027      Dec_to_Bcd@dec_number 0020  
            ?i1_Set_month 0070   __end_of__initialization 001B         __end_of_Lcd_Clear 0CAA  
     ___bmul@multiplicand 0020               ?_Read_Fecha 0028            __pcstackCOMMON 0070  
           __end_of_setup 0DE5              ??i1_I2C_Stop 0070         __end_of_Read_Time 0F8B  
          _Lcd_Set_Cursor 0687                ??_I2C_Nack 0020            _OPTION_REGbits 0081  
              ??_I2C_Read 0020                ??_I2C_Stop 0020             ?_Set_day_week 0070  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003D  
                 ??_setup 0021                __pbssBANK0 0049         __end_of_Set_month 0E81  
      __end_ofi1_I2C_Stop 0C69                   ?_Slave1 0070                 ?_Set_hour 0070  
              __pmaintext 001F                 ?_Set_year 0070             ?i1_Dec_to_Bcd 0070  
                 ?___bmul 0020                   ?___wmul 0020                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 06D3             ??_I2C_Restart 0020            ??_Set_day_week 0022  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0638            _Lcd_Write_Char 0F8B  
                 _Lcd_Cmd 0D1B                 _I2C_Start 0C73              ??i1_Set_year 0072  
               _I2C_Write 0CB8            ??i1_Dec_to_Bcd 0070                   _Set_day 0DE5  
              ??_Set_hour 0022                   _Set_sec 0E81                ??_Set_year 0022  
                 ___lwdiv 06D3                   ___lwmod 0FC4              ??_Bcd_to_Dec 0024  
                 _bandera 0079           ?_Lcd_Set_Cursor 0024                   __ptext1 0DC0  
                 __ptext2 0EF6                   __ptext3 075F                   __ptext4 03FC  
                 __ptext5 0CDA                   __ptext6 0ECF                   __ptext7 0FC4  
                 __ptext8 06D3                   __ptext9 0719                   _dpowers 0648  
                 _isdigit 0CDA                   _segundo 0064        __end_ofi1_Set_year 0DC0  
            ??_Dec_to_Bcd 0020                   _sprintf 03FC                   clrloop0 0C4E  
     __end_of_I2C_Restart 0C73                   _voltaje 0049    __end_of_Lcd_Write_Char 0FC4  
    end_of_initialization 001B        __end_of_Bcd_to_Dec 07FD                ?_I2C_Start 0070  
              ?_I2C_Write 0070             Bcd_to_Dec@bcd 0027             Bcd_to_Dec@dec 0026  
               Lcd_Port@a 0020        __end_of_Dec_to_Bcd 0D04                 _PORTBbits 0006  
               _PORTDbits 0008                 i1_Set_day 0D57                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025         Lcd_Write_String@i 002A  
    __end_of_Set_day_week 0E33              ??_Read_Fecha 002A                 _Lcd_Clear 0C9D  
          __end_of_Slave1 07A3            __end_of___bmul 0D1B            __end_of___wmul 0EF6  
        _Lcd_Write_String 0719               _I2C_Restart 0C69                ?i1_Set_day 0070  
     start_initialization 000F         ??_I2C_Init_Master 0020      __end_ofi1_Dec_to_Bcd 0CDA  
             __end_of_isr 03FC                 _Read_Time 0F56             ??i1_I2C_Start 0070  
   I2C_Init_Master@sp_i2c 0020             ??i1_I2C_Write 0070        __end_of_Read_Fecha 0F56  
             ??_I2C_Start 0020               ??_I2C_Write 0020                  ??_Slave1 0041  
               _Set_month 0E5A                ?_Lcd_Clear 0070                  ??___bmul 0021  
                ??___wmul 0024           Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
              ?_Read_Time 0028              _isdigit$1027 0020                  ?_Lcd_Cmd 0070  
             sprintf@flag 003C               sprintf@prec 0038       __end_ofi1_I2C_Start 0C5F  
     __end_ofi1_I2C_Write 0CB8          ___lwdiv@dividend 0022                  ?_Set_day 0070  
                ?_Set_sec 0070                ?_Set_month 0070          ??_Lcd_Set_Cursor 0025  
                ?___lwdiv 0020                  ?___lwmod 0028                 __pstrings 0638  
                _I2C_Nack 0C87                  ?_isdigit 0070                  _I2C_Read 0C92  
             ??i1_Set_day 0072                  _I2C_Stop 0C7D          ___lwdiv@quotient 0025  
                ?_sprintf 002E              Set_hour@hour 0022         interrupt_function 0004  
          ___wmul@product 0024                  _IOCBbits 0096                 clear_ram0 0C4D  
                Lcd_Cmd@a 0023                  _PIR1bits 000C               ??_Lcd_Clear 0024  
            Set_year@year 0022               __stringbase 0647         ___wmul@multiplier 0020  
                Read@dato 0023                  _WPUBbits 0095          ??_Lcd_Write_Char 0021  
            _Set_day_week 0E0C                  _Lcd_Init 05D3               ??_Read_Time 002A  
                _Lcd_Port 0D37               i1_I2C_Start 0C55               i1_I2C_Write 0CAA  
           ??i1_Set_month 0072  __end_of_Lcd_Write_String 075F               ??_Set_month 0022  
                _Set_hour 0E33                  _Set_year 0EA8              i1_Dec_to_Bcd 0CC6  
         _I2C_Init_Master 0EF6             I2C_Write@data 0020            i1Set_year@year 0072  
      __end_of__stringtab 0648              ?_I2C_Restart 0070                sprintf@val 003A  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0027                  __ptext10 0F8B  
                __ptext11 0687                  __ptext20 0F21                  __ptext12 0EA8  
                __ptext21 07A3                  __ptext13 0E81                  __ptext30 05D3  
                __ptext22 0CB8                  __ptext14 0E5A                  __ptext31 0C9D  
                __ptext23 0C7D                  __ptext15 0E33                  __ptext40 0C55  
                __ptext32 0D1B                  __ptext24 0C73                  __ptext16 0E0C  
                __ptext41 0CC6                  __ptext33 0D37                  __ptext25 0C69  
                __ptext17 0DE5                  __ptext34 0211                  __ptext26 0C92  
                __ptext18 0CEE                  __ptext35 0D9D                  __ptext27 0C87  
                __ptext19 0F56                  __ptext36 0D7A                  __ptext28 07E1  
                __ptext37 0D57                  __ptext29 0D04                  __ptext38 0CAA  
                __ptext39 0C5F                  _selector 004A       __end_ofi1_Set_month 0D9D  
                _temporal 0077                i1_I2C_Stop 0C5F                _INTCONbits 000B  
    Set_day_week@day_week 0022                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0039                 sprintf@sp 0040  
        ___lwmod@dividend 002A   __end_of_I2C_Init_Master 0F21            Set_month@month 0022  
               stringcode 0642                _OSCCONbits 008F              i1Set_day@day 0072  
      Lcd_Set_Cursor@temp 0029           i1I2C_Write@data 0070                  sprintf@c 003F  
                sprintf@f 002E           ___lwmod@divisor 0028           ___lwmod@counter 002D  
                stringdir 0642                  stringtab 0638               _SSPCON2bits 0091  
             i1_Set_month 0D7A                i1_Set_year 0D9D  
