

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 13:06:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     0007                     	;# 
   101     0008                     	;# 
   102     0009                     	;# 
   103     000A                     	;# 
   104     000B                     	;# 
   105     000C                     	;# 
   106     000D                     	;# 
   107     000E                     	;# 
   108     000E                     	;# 
   109     000F                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0014                     	;# 
   115     0015                     	;# 
   116     0015                     	;# 
   117     0016                     	;# 
   118     0017                     	;# 
   119     0018                     	;# 
   120     0019                     	;# 
   121     001A                     	;# 
   122     001B                     	;# 
   123     001B                     	;# 
   124     001C                     	;# 
   125     001D                     	;# 
   126     001E                     	;# 
   127     001F                     	;# 
   128     0081                     	;# 
   129     0085                     	;# 
   130     0086                     	;# 
   131     0087                     	;# 
   132     0088                     	;# 
   133     0089                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     008E                     	;# 
   137     008F                     	;# 
   138     0090                     	;# 
   139     0091                     	;# 
   140     0092                     	;# 
   141     0093                     	;# 
   142     0093                     	;# 
   143     0093                     	;# 
   144     0094                     	;# 
   145     0095                     	;# 
   146     0096                     	;# 
   147     0097                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009A                     	;# 
   151     009B                     	;# 
   152     009C                     	;# 
   153     009D                     	;# 
   154     009E                     	;# 
   155     009F                     	;# 
   156     0105                     	;# 
   157     0107                     	;# 
   158     0108                     	;# 
   159     0109                     	;# 
   160     010C                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     0185                     	;# 
   166     0187                     	;# 
   167     0188                     	;# 
   168     0189                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     008F                     	;# 
   216     0090                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0097                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009A                     	;# 
   229     009B                     	;# 
   230     009C                     	;# 
   231     009D                     	;# 
   232     009E                     	;# 
   233     009F                     	;# 
   234     0105                     	;# 
   235     0107                     	;# 
   236     0108                     	;# 
   237     0109                     	;# 
   238     010C                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     0185                     	;# 
   244     0187                     	;# 
   245     0188                     	;# 
   246     0189                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     000E                     	;# 
   264     000E                     	;# 
   265     000F                     	;# 
   266     0010                     	;# 
   267     0011                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0015                     	;# 
   272     0015                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001B                     	;# 
   280     001C                     	;# 
   281     001D                     	;# 
   282     001E                     	;# 
   283     001F                     	;# 
   284     0081                     	;# 
   285     0085                     	;# 
   286     0086                     	;# 
   287     0087                     	;# 
   288     0088                     	;# 
   289     0089                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     008F                     	;# 
   294     0090                     	;# 
   295     0091                     	;# 
   296     0092                     	;# 
   297     0093                     	;# 
   298     0093                     	;# 
   299     0093                     	;# 
   300     0094                     	;# 
   301     0095                     	;# 
   302     0096                     	;# 
   303     0097                     	;# 
   304     0098                     	;# 
   305     0099                     	;# 
   306     009A                     	;# 
   307     009B                     	;# 
   308     009C                     	;# 
   309     009D                     	;# 
   310     009E                     	;# 
   311     009F                     	;# 
   312     0105                     	;# 
   313     0107                     	;# 
   314     0108                     	;# 
   315     0109                     	;# 
   316     010C                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     0185                     	;# 
   322     0187                     	;# 
   323     0188                     	;# 
   324     0189                     	;# 
   325     018C                     	;# 
   326     018D                     	;# 
   327     0000                     	;# 
   328     0001                     	;# 
   329     0002                     	;# 
   330     0003                     	;# 
   331     0004                     	;# 
   332     0005                     	;# 
   333     0006                     	;# 
   334     0007                     	;# 
   335     0008                     	;# 
   336     0009                     	;# 
   337     000A                     	;# 
   338     000B                     	;# 
   339     000C                     	;# 
   340     000D                     	;# 
   341     000E                     	;# 
   342     000E                     	;# 
   343     000F                     	;# 
   344     0010                     	;# 
   345     0011                     	;# 
   346     0012                     	;# 
   347     0013                     	;# 
   348     0014                     	;# 
   349     0015                     	;# 
   350     0015                     	;# 
   351     0016                     	;# 
   352     0017                     	;# 
   353     0018                     	;# 
   354     0019                     	;# 
   355     001A                     	;# 
   356     001B                     	;# 
   357     001B                     	;# 
   358     001C                     	;# 
   359     001D                     	;# 
   360     001E                     	;# 
   361     001F                     	;# 
   362     0081                     	;# 
   363     0085                     	;# 
   364     0086                     	;# 
   365     0087                     	;# 
   366     0088                     	;# 
   367     0089                     	;# 
   368     008C                     	;# 
   369     008D                     	;# 
   370     008E                     	;# 
   371     008F                     	;# 
   372     0090                     	;# 
   373     0091                     	;# 
   374     0092                     	;# 
   375     0093                     	;# 
   376     0093                     	;# 
   377     0093                     	;# 
   378     0094                     	;# 
   379     0095                     	;# 
   380     0096                     	;# 
   381     0097                     	;# 
   382     0098                     	;# 
   383     0099                     	;# 
   384     009A                     	;# 
   385     009B                     	;# 
   386     009C                     	;# 
   387     009D                     	;# 
   388     009E                     	;# 
   389     009F                     	;# 
   390     0105                     	;# 
   391     0107                     	;# 
   392     0108                     	;# 
   393     0109                     	;# 
   394     010C                     	;# 
   395     010C                     	;# 
   396     010D                     	;# 
   397     010E                     	;# 
   398     010F                     	;# 
   399     0185                     	;# 
   400     0187                     	;# 
   401     0188                     	;# 
   402     0189                     	;# 
   403     018C                     	;# 
   404     018D                     	;# 
   405                           
   406                           	psect	strings
   407     0623                     __pstrings:
   408     0623                     stringtab:
   409     0623                     __stringtab:
   410                           
   411                           ;	String table - string pointers are 1 byte each
   412     0623  1BFF               	btfsc	btemp+1,7
   413     0624  2E2D               	ljmp	stringcode
   414     0625  1383               	bcf	3,7
   415     0626  187F               	btfsc	btemp+1,0
   416     0627  1783               	bsf	3,7
   417     0628  0800               	movf	0,w
   418     0629  0A84               	incf	4,f
   419     062A  1903               	skipnz
   420     062B  0AFF               	incf	btemp+1,f
   421     062C  0008               	return
   422     062D                     stringcode:
   423     062D                     stringdir:
   424     062D  3006               	movlw	high stringdir
   425     062E  008A               	movwf	10
   426     062F  0804               	movf	4,w
   427     0630  0A84               	incf	4,f
   428     0631  0782               	addwf	2,f
   429     0632                     __stringbase:
   430     0632  3400               	retlw	0
   431     0633                     __end_of__stringtab:
   432     0633                     _dpowers:
   433     0633  3401               	retlw	1
   434     0634  3400               	retlw	0
   435     0635  340A               	retlw	10
   436     0636  3400               	retlw	0
   437     0637  3464               	retlw	100
   438     0638  3400               	retlw	0
   439     0639  34E8               	retlw	232
   440     063A  3403               	retlw	3
   441     063B  3410               	retlw	16
   442     063C  3427               	retlw	39
   443     063D                     __end_of_dpowers:
   444     0008                     _PORTDbits	set	8
   445     0008                     _PORTD	set	8
   446     0007                     _PORTC	set	7
   447     0006                     _PORTB	set	6
   448     0006                     _PORTBbits	set	6
   449     000B                     _INTCONbits	set	11
   450     0013                     _SSPBUF	set	19
   451     000C                     _PIR1bits	set	12
   452     0014                     _SSPCON	set	20
   453     008F                     _OSCCONbits	set	143
   454     0095                     _WPUBbits	set	149
   455     0096                     _IOCBbits	set	150
   456     0081                     _OPTION_REGbits	set	129
   457     0088                     _TRISD	set	136
   458     0086                     _TRISB	set	134
   459     0091                     _SSPCON2bits	set	145
   460     0093                     _SSPADD	set	147
   461     0091                     _SSPCON2	set	145
   462     0094                     _SSPSTAT	set	148
   463     0087                     _TRISCbits	set	135
   464     0189                     _ANSELH	set	393
   465     0188                     _ANSEL	set	392
   466     063D                     STR_3:
   467     063D  3425               	retlw	37	;'%'
   468     063E  3430               	retlw	48	;'0'
   469     063F  3432               	retlw	50	;'2'
   470     0640  3475               	retlw	117	;'u'
   471     0641  342F               	retlw	47	;'/'
   472     0642  3425               	retlw	37	;'%'
   473     0643  3430               	retlw	48	;'0'
   474     0644  3432               	retlw	50	;'2'
   475     0645  3475               	retlw	117	;'u'
   476     0646  342F               	retlw	47	;'/'
   477     0647  3432               	retlw	50	;'2'
   478     0648  3430               	retlw	48	;'0'
   479     0649  3425               	retlw	37	;'%'
   480     064A  3430               	retlw	48	;'0'
   481     064B  3432               	retlw	50	;'2'
   482     064C  3475               	retlw	117	;'u'
   483     064D  3420               	retlw	32	;' '
   484     064E  3400               	retlw	0
   485     064F                     STR_2:
   486     064F  3425               	retlw	37	;'%'
   487     0650  3430               	retlw	48	;'0'
   488     0651  3432               	retlw	50	;'2'
   489     0652  3475               	retlw	117	;'u'
   490     0653  343A               	retlw	58	;':'
   491     0654  3425               	retlw	37	;'%'
   492     0655  3430               	retlw	48	;'0'
   493     0656  3432               	retlw	50	;'2'
   494     0657  3475               	retlw	117	;'u'
   495     0658  343A               	retlw	58	;':'
   496     0659  3425               	retlw	37	;'%'
   497     065A  3430               	retlw	48	;'0'
   498     065B  3432               	retlw	50	;'2'
   499     065C  3475               	retlw	117	;'u'
   500     065D  3420               	retlw	32	;' '
   501     065E  3400               	retlw	0
   502     065F                     STR_11:
   503     065F  3425               	retlw	37	;'%'
   504     0660  3464               	retlw	100	;'d'
   505     0661  3420               	retlw	32	;' '
   506     0662  3400               	retlw	0
   507     0663                     STR_1:
   508     0663  3453               	retlw	83	;'S'
   509     0664  3431               	retlw	49	;'1'
   510     0665  343A               	retlw	58	;':'
   511     0666  3400               	retlw	0
   512     0667                     STR_10:
   513     0667  3441               	retlw	65	;'A'
   514     0668  3420               	retlw	32	;' '
   515     0669  3400               	retlw	0
   516     066A                     STR_6:
   517     066A  3444               	retlw	68	;'D'
   518     066B  3420               	retlw	32	;' '
   519     066C  3400               	retlw	0
   520     066D                     STR_8:
   521     066D  344D               	retlw	77	;'M'
   522     066E  3420               	retlw	32	;' '
   523     066F  3400               	retlw	0
   524     0670                     STR_4:
   525     0670  3454               	retlw	84	;'T'
   526     0671  3400               	retlw	0
   527     063D                     
   528                           	psect	cinit
   529     000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532     000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   536     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   537     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK0
   540     0012  1383               	bcf	3,7	;select IRP bank0
   541     0013  3049               	movlw	low __pbssBANK0
   542     0014  0084               	movwf	4
   543     0015  3065               	movlw	low (__pbssBANK0+28)
   544     0016  120A  118A  27F7  120A  118A  	fcall	clear_ram0
   545     001B                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548     001B                     __end_of__initialization:
   549     001B  0183               	clrf	3
   550     001C  120A  118A  2A0A   	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssCOMMON
   553     0077                     __pbssCOMMON:
   554     0077                     _temporal:
   555     0077                     	ds	1
   556     0078                     _dow:
   557     0078                     	ds	1
   558     0079                     _bandera:
   559     0079                     	ds	1
   560                           
   561                           	psect	bssBANK0
   562     0049                     __pbssBANK0:
   563     0049                     _voltaje:
   564     0049                     	ds	1
   565     004A                     _selector:
   566     004A                     	ds	1
   567     004B                     _buffer:
   568     004B                     	ds	20
   569     005F                     _ano:
   570     005F                     	ds	1
   571     0060                     _mes:
   572     0060                     	ds	1
   573     0061                     _dia:
   574     0061                     	ds	1
   575     0062                     _hora:
   576     0062                     	ds	1
   577     0063                     _minuto:
   578     0063                     	ds	1
   579     0064                     _segundo:
   580     0064                     	ds	1
   581                           
   582                           	psect	clrtext
   583     07F7                     clear_ram0:	
   584                           ;	Called with FSR containing the base address, and
   585                           ;	W with the last address+1
   586                           
   587     07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   588     07F8                     clrloop0:
   589     07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   590     07F9  0A84               	incf	4,f	;increment pointer
   591     07FA  0604               	xorwf	4,w	;XOR with final address
   592     07FB  1903               	btfsc	3,2	;have we reached the end yet?
   593     07FC  3400               	retlw	0	;all done for this memory range, return
   594     07FD  0604               	xorwf	4,w	;XOR again to restore value
   595     07FE  2FF8               	goto	clrloop0	;do the next byte
   596                           
   597                           	psect	cstackCOMMON
   598     0070                     __pcstackCOMMON:
   599     0070                     ?_isdigit:
   600     0070                     ?_setup:	
   601                           ; 1 bit 
   602                           
   603     0070                     ?_Lcd_Init:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_Lcd_Clear:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_Set_sec:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_Set_day:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_Set_hour:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_Set_day_week:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_Set_month:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_Set_year:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_Slave1:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_Bcd_to_Dec:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Dec_to_Bcd:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_I2C_Init_Master:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_I2C_Start:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_I2C_Stop:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_I2C_Restart:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_I2C_Nack:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_I2C_Read:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_isr:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_Read:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_Lcd_Port:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_Lcd_Cmd:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_Lcd_Write_Char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?i1_I2C_Start:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??i1_I2C_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?i1_I2C_Stop:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ??i1_I2C_Stop:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ??i1_I2C_Write:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?i1_Set_day:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?i1_Set_month:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?i1_Set_year:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?i1_Dec_to_Bcd:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ??i1_Dec_to_Bcd:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_I2C_Write:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?i1_I2C_Write:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     0070                     i1I2C_Write@data:	
   709                           ; 2 bytes @ 0x0
   710                           
   711     0070                     i1Dec_to_Bcd@dec_number:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716     0070                     	ds	1
   717     0071                     i1Dec_to_Bcd@bcd_number:
   718                           
   719                           ; 1 bytes @ 0x1
   720     0071                     	ds	1
   721     0072                     ??i1_Set_day:
   722     0072                     ??i1_Set_month:	
   723                           ; 1 bytes @ 0x2
   724                           
   725     0072                     ??i1_Set_year:	
   726                           ; 1 bytes @ 0x2
   727                           
   728     0072                     i1Set_day@day:	
   729                           ; 1 bytes @ 0x2
   730                           
   731     0072                     i1Set_month@month:	
   732                           ; 1 bytes @ 0x2
   733                           
   734     0072                     i1Set_year@year:	
   735                           ; 1 bytes @ 0x2
   736                           
   737                           
   738                           ; 1 bytes @ 0x2
   739     0072                     	ds	1
   740     0073                     ??_isr:
   741                           
   742                           ; 1 bytes @ 0x3
   743     0073                     	ds	4
   744                           
   745                           	psect	cstackBANK0
   746     0020                     __pcstackBANK0:
   747     0020                     ??_Dec_to_Bcd:
   748     0020                     ??_isdigit:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0020                     ??_I2C_Init_Master:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0020                     ??_I2C_Start:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0020                     ??_I2C_Stop:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0020                     ??_I2C_Restart:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0020                     ??_I2C_Nack:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0020                     ??_I2C_Write:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0020                     ??_I2C_Read:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0020                     ??_Lcd_Port:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0020                     ?___bmul:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0020                     ?___wmul:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0020                     ?___lwdiv:	
   782                           ; 2 bytes @ 0x0
   783                           
   784     0020                     I2C_Init_Master@sp_i2c:	
   785                           ; 2 bytes @ 0x0
   786                           
   787     0020                     I2C_Write@data:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0020                     Dec_to_Bcd@dec_number:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0020                     Lcd_Port@a:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0020                     ___bmul@multiplicand:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0020                     _isdigit$1027:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0020                     ___wmul@multiplier:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0020                     ___lwdiv@divisor:	
   806                           ; 2 bytes @ 0x0
   807                           
   808                           
   809                           ; 2 bytes @ 0x0
   810     0020                     	ds	1
   811     0021                     ??_setup:
   812     0021                     ??_Read:	
   813                           ; 1 bytes @ 0x1
   814                           
   815     0021                     ??_Lcd_Cmd:	
   816                           ; 1 bytes @ 0x1
   817                           
   818     0021                     ??_Lcd_Write_Char:	
   819                           ; 1 bytes @ 0x1
   820                           
   821     0021                     ??___bmul:	
   822                           ; 1 bytes @ 0x1
   823                           
   824     0021                     Dec_to_Bcd@bcd_number:	
   825                           ; 1 bytes @ 0x1
   826                           
   827     0021                     isdigit@c:	
   828                           ; 1 bytes @ 0x1
   829                           
   830                           
   831                           ; 1 bytes @ 0x1
   832     0021                     	ds	1
   833     0022                     ??_Set_sec:
   834     0022                     ??_Set_day:	
   835                           ; 1 bytes @ 0x2
   836                           
   837     0022                     ??_Set_hour:	
   838                           ; 1 bytes @ 0x2
   839                           
   840     0022                     ??_Set_day_week:	
   841                           ; 1 bytes @ 0x2
   842                           
   843     0022                     ??_Set_month:	
   844                           ; 1 bytes @ 0x2
   845                           
   846     0022                     ??_Set_year:	
   847                           ; 1 bytes @ 0x2
   848                           
   849     0022                     Read@address:	
   850                           ; 1 bytes @ 0x2
   851                           
   852     0022                     Set_sec@sec:	
   853                           ; 1 bytes @ 0x2
   854                           
   855     0022                     Set_hour@hour:	
   856                           ; 1 bytes @ 0x2
   857                           
   858     0022                     Set_day_week@day_week:	
   859                           ; 1 bytes @ 0x2
   860                           
   861     0022                     Set_day@day:	
   862                           ; 1 bytes @ 0x2
   863                           
   864     0022                     Set_month@month:	
   865                           ; 1 bytes @ 0x2
   866                           
   867     0022                     Set_year@year:	
   868                           ; 1 bytes @ 0x2
   869                           
   870     0022                     Lcd_Write_Char@temp:	
   871                           ; 1 bytes @ 0x2
   872                           
   873     0022                     ___bmul@product:	
   874                           ; 1 bytes @ 0x2
   875                           
   876     0022                     ___wmul@multiplicand:	
   877                           ; 1 bytes @ 0x2
   878                           
   879     0022                     ___lwdiv@dividend:	
   880                           ; 2 bytes @ 0x2
   881                           
   882                           
   883                           ; 2 bytes @ 0x2
   884     0022                     	ds	1
   885     0023                     Read@dato:
   886     0023                     Lcd_Cmd@a:	
   887                           ; 1 bytes @ 0x3
   888                           
   889     0023                     Lcd_Write_Char@y:	
   890                           ; 1 bytes @ 0x3
   891                           
   892     0023                     ___bmul@multiplier:	
   893                           ; 1 bytes @ 0x3
   894                           
   895                           
   896                           ; 1 bytes @ 0x3
   897     0023                     	ds	1
   898     0024                     ??_Lcd_Init:
   899     0024                     ??_Lcd_Clear:	
   900                           ; 1 bytes @ 0x4
   901                           
   902     0024                     ?_Lcd_Set_Cursor:	
   903                           ; 1 bytes @ 0x4
   904                           
   905     0024                     ??_Bcd_to_Dec:	
   906                           ; 1 bytes @ 0x4
   907                           
   908     0024                     ??___wmul:	
   909                           ; 1 bytes @ 0x4
   910                           
   911     0024                     ??___lwdiv:	
   912                           ; 1 bytes @ 0x4
   913                           
   914     0024                     Lcd_Set_Cursor@b:	
   915                           ; 1 bytes @ 0x4
   916                           
   917     0024                     Lcd_Write_Char@a:	
   918                           ; 1 bytes @ 0x4
   919                           
   920     0024                     ___wmul@product:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 2 bytes @ 0x4
   925     0024                     	ds	1
   926     0025                     ??_Lcd_Set_Cursor:
   927     0025                     ?_Lcd_Write_String:	
   928                           ; 1 bytes @ 0x5
   929                           
   930     0025                     Lcd_Write_String@a:	
   931                           ; 1 bytes @ 0x5
   932                           
   933     0025                     ___lwdiv@quotient:	
   934                           ; 2 bytes @ 0x5
   935                           
   936                           
   937                           ; 2 bytes @ 0x5
   938     0025                     	ds	1
   939     0026                     Bcd_to_Dec@dec:
   940     0026                     Lcd_Set_Cursor@a:	
   941                           ; 1 bytes @ 0x6
   942                           
   943                           
   944                           ; 1 bytes @ 0x6
   945     0026                     	ds	1
   946     0027                     ??_Lcd_Write_String:
   947     0027                     Bcd_to_Dec@bcd:	
   948                           ; 1 bytes @ 0x7
   949                           
   950     0027                     Lcd_Set_Cursor@z:	
   951                           ; 1 bytes @ 0x7
   952                           
   953     0027                     ___lwdiv@counter:	
   954                           ; 1 bytes @ 0x7
   955                           
   956                           
   957                           ; 1 bytes @ 0x7
   958     0027                     	ds	1
   959     0028                     ?_Read_Time:
   960     0028                     ?_Read_Fecha:	
   961                           ; 1 bytes @ 0x8
   962                           
   963     0028                     ?___lwmod:	
   964                           ; 1 bytes @ 0x8
   965                           
   966     0028                     Read_Time@m:	
   967                           ; 2 bytes @ 0x8
   968                           
   969     0028                     Read_Fecha@mo:	
   970                           ; 1 bytes @ 0x8
   971                           
   972     0028                     Lcd_Set_Cursor@y:	
   973                           ; 1 bytes @ 0x8
   974                           
   975     0028                     ___lwmod@divisor:	
   976                           ; 1 bytes @ 0x8
   977                           
   978                           
   979                           ; 2 bytes @ 0x8
   980     0028                     	ds	1
   981     0029                     Read_Time@h:
   982     0029                     Read_Fecha@y:	
   983                           ; 1 bytes @ 0x9
   984                           
   985     0029                     Lcd_Set_Cursor@temp:	
   986                           ; 1 bytes @ 0x9
   987                           
   988                           
   989                           ; 1 bytes @ 0x9
   990     0029                     	ds	1
   991     002A                     ??_Read_Time:
   992     002A                     ??_Read_Fecha:	
   993                           ; 1 bytes @ 0xA
   994                           
   995     002A                     Read_Time@s:	
   996                           ; 1 bytes @ 0xA
   997                           
   998     002A                     Read_Fecha@d:	
   999                           ; 1 bytes @ 0xA
  1000                           
  1001     002A                     Lcd_Write_String@i:	
  1002                           ; 1 bytes @ 0xA
  1003                           
  1004     002A                     ___lwmod@dividend:	
  1005                           ; 2 bytes @ 0xA
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0xA
  1009     002A                     	ds	2
  1010     002C                     ??___lwmod:
  1011                           
  1012                           ; 1 bytes @ 0xC
  1013     002C                     	ds	1
  1014     002D                     ___lwmod@counter:
  1015                           
  1016                           ; 1 bytes @ 0xD
  1017     002D                     	ds	1
  1018     002E                     ?_sprintf:
  1019     002E                     sprintf@f:	
  1020                           ; 2 bytes @ 0xE
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xE
  1024     002E                     	ds	7
  1025     0035                     ??_sprintf:
  1026                           
  1027                           ; 1 bytes @ 0x15
  1028     0035                     	ds	3
  1029     0038                     sprintf@prec:
  1030                           
  1031                           ; 1 bytes @ 0x18
  1032     0038                     	ds	1
  1033     0039                     sprintf@ap:
  1034                           
  1035                           ; 1 bytes @ 0x19
  1036     0039                     	ds	1
  1037     003A                     sprintf@val:
  1038                           
  1039                           ; 2 bytes @ 0x1A
  1040     003A                     	ds	2
  1041     003C                     sprintf@flag:
  1042                           
  1043                           ; 1 bytes @ 0x1C
  1044     003C                     	ds	1
  1045     003D                     sprintf@width:
  1046                           
  1047                           ; 2 bytes @ 0x1D
  1048     003D                     	ds	2
  1049     003F                     sprintf@c:
  1050                           
  1051                           ; 1 bytes @ 0x1F
  1052     003F                     	ds	1
  1053     0040                     sprintf@sp:
  1054                           
  1055                           ; 1 bytes @ 0x20
  1056     0040                     	ds	1
  1057     0041                     ??_Slave1:
  1058                           
  1059                           ; 1 bytes @ 0x21
  1060     0041                     	ds	2
  1061     0043                     ??_main:
  1062                           
  1063                           ; 1 bytes @ 0x23
  1064     0043                     	ds	6
  1065                           
  1066                           	psect	maintext
  1067     020A                     __pmaintext:	
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 60 in file "main_master.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : B00/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       6       0       0       0
  1090 ;;      Totals:         0       6       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels required when called: 7
  1093 ;; This function calls:
  1094 ;;		_Lcd_Clear
  1095 ;;		_Lcd_Init
  1096 ;;		_Lcd_Set_Cursor
  1097 ;;		_Lcd_Write_String
  1098 ;;		_Read_Fecha
  1099 ;;		_Read_Time
  1100 ;;		_Set_day
  1101 ;;		_Set_day_week
  1102 ;;		_Set_hour
  1103 ;;		_Set_month
  1104 ;;		_Set_sec
  1105 ;;		_Set_year
  1106 ;;		_Slave1
  1107 ;;		_setup
  1108 ;;		_sprintf
  1109 ;; This function is called by:
  1110 ;;		Startup code after reset
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     020A                     _main:	
  1115                           ;psect for function _main
  1116                           
  1117     020A                     l3119:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1120                           
  1121                           
  1122                           ;main_master.c: 61:     setup();
  1123     020A  120A  158A  25EB  120A  118A  	fcall	_setup
  1124                           
  1125                           ;main_master.c: 62:     Lcd_Init();
  1126     020F  120A  118A  25BE  120A  118A  	fcall	_Lcd_Init
  1127                           
  1128                           ;main_master.c: 63:     Lcd_Clear();
  1129     0214  120A  158A  24AC  120A  118A  	fcall	_Lcd_Clear
  1130                           
  1131                           ;main_master.c: 64:     Lcd_Set_Cursor(1,1);
  1132     0219  1283               	bcf	3,5	;RP0=0, select bank0
  1133     021A  1303               	bcf	3,6	;RP1=0, select bank0
  1134     021B  01A4               	clrf	Lcd_Set_Cursor@b
  1135     021C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1136     021D  3001               	movlw	1
  1137     021E  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1138     0223                     l3121:
  1139                           
  1140                           ;main_master.c: 65:     Lcd_Write_String("S1:");
  1141     0223  3031               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1142     0224  1283               	bcf	3,5	;RP0=0, select bank0
  1143     0225  1303               	bcf	3,6	;RP1=0, select bank0
  1144     0226  00A5               	movwf	Lcd_Write_String@a
  1145     0227  3080               	movlw	128
  1146     0228  00A6               	movwf	Lcd_Write_String@a+1
  1147     0229  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1148     022E                     l3123:
  1149                           
  1150                           ;main_master.c: 66:     Set_sec(0);
  1151     022E  3000               	movlw	0
  1152     022F  120A  158A  26AC  120A  118A  	fcall	_Set_sec
  1153     0234                     l3125:
  1154                           
  1155                           ;main_master.c: 67:     Set_day(0);
  1156     0234  3000               	movlw	0
  1157     0235  120A  158A  2610  120A  118A  	fcall	_Set_day
  1158     023A                     l3127:
  1159                           
  1160                           ;main_master.c: 68:     Set_hour(12);
  1161     023A  300C               	movlw	12
  1162     023B  120A  158A  265E  120A  118A  	fcall	_Set_hour
  1163     0240                     l3129:
  1164                           
  1165                           ;main_master.c: 69:     Set_day_week(3);
  1166     0240  3003               	movlw	3
  1167     0241  120A  158A  2637  120A  118A  	fcall	_Set_day_week
  1168     0246                     l3131:
  1169                           
  1170                           ;main_master.c: 70:     Set_day(14);
  1171     0246  300E               	movlw	14
  1172     0247  120A  158A  2610  120A  118A  	fcall	_Set_day
  1173     024C                     l3133:
  1174                           
  1175                           ;main_master.c: 71:     Set_month(2);
  1176     024C  3002               	movlw	2
  1177     024D  120A  158A  2685  120A  118A  	fcall	_Set_month
  1178     0252                     l3135:
  1179                           
  1180                           ;main_master.c: 72:     Set_year(23);
  1181     0252  3017               	movlw	23
  1182     0253  120A  158A  26D3  120A  118A  	fcall	_Set_year
  1183     0258                     l3137:
  1184                           
  1185                           ;main_master.c: 74:         if (selector == 0){
  1186     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1187     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1188     025A  084A               	movf	_selector,w
  1189     025B  1D03               	btfss	3,2
  1190     025C  2A5E               	goto	u2821
  1191     025D  2A5F               	goto	u2820
  1192     025E                     u2821:
  1193     025E  2AFA               	goto	l3157
  1194     025F                     u2820:
  1195     025F                     l3139:
  1196                           
  1197                           ;main_master.c: 75:             Slave1();
  1198     025F  120A  118A  274A  120A  118A  	fcall	_Slave1
  1199     0264                     l3141:
  1200                           
  1201                           ;main_master.c: 76:             Read_Time(&segundo, &minuto, &hora);
  1202     0264  3063               	movlw	(low (_minuto| 0))& (0+255)
  1203     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0267  00A8               	movwf	Read_Time@m
  1206     0268  3062               	movlw	(low (_hora| 0))& (0+255)
  1207     0269  00A9               	movwf	Read_Time@h
  1208     026A  3064               	movlw	(low (_segundo| 0))& (0+255)
  1209     026B  120A  158A  2756  120A  118A  	fcall	_Read_Time
  1210     0270                     l3143:
  1211                           
  1212                           ;main_master.c: 77:             Lcd_Set_Cursor(1,7);
  1213     0270  3007               	movlw	7
  1214     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0273  00A4               	movwf	Lcd_Set_Cursor@b
  1217     0274  3001               	movlw	1
  1218     0275  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1219     027A                     l3145:
  1220                           
  1221                           ;main_master.c: 78:             sprintf(buffer, "%02u:%02u:%02u ", hora, minuto, segundo
      +                          );
  1222     027A  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1223     027B  1283               	bcf	3,5	;RP0=0, select bank0
  1224     027C  1303               	bcf	3,6	;RP1=0, select bank0
  1225     027D  00AE               	movwf	sprintf@f
  1226     027E  0862               	movf	_hora,w
  1227     027F  00C3               	movwf	??_main
  1228     0280  01C4               	clrf	??_main+1
  1229     0281  0843               	movf	??_main,w
  1230     0282  00AF               	movwf	?_sprintf+1
  1231     0283  0844               	movf	??_main+1,w
  1232     0284  00B0               	movwf	?_sprintf+2
  1233     0285  0863               	movf	_minuto,w
  1234     0286  00C5               	movwf	??_main+2
  1235     0287  01C6               	clrf	??_main+3
  1236     0288  0845               	movf	??_main+2,w
  1237     0289  00B1               	movwf	?_sprintf+3
  1238     028A  0846               	movf	??_main+3,w
  1239     028B  00B2               	movwf	?_sprintf+4
  1240     028C  0864               	movf	_segundo,w
  1241     028D  00C7               	movwf	??_main+4
  1242     028E  01C8               	clrf	??_main+5
  1243     028F  0847               	movf	??_main+4,w
  1244     0290  00B3               	movwf	?_sprintf+5
  1245     0291  0848               	movf	??_main+5,w
  1246     0292  00B4               	movwf	?_sprintf+6
  1247     0293  304B               	movlw	(low (_buffer| 0))& (0+255)
  1248     0294  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1249     0299                     l3147:
  1250                           
  1251                           ;main_master.c: 79:             Lcd_Write_String(buffer);
  1252     0299  304B               	movlw	(low (_buffer| 0))& (0+255)
  1253     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1254     029B  1303               	bcf	3,6	;RP1=0, select bank0
  1255     029C  00A5               	movwf	Lcd_Write_String@a
  1256     029D  3000               	movlw	0
  1257     029E  00A6               	movwf	Lcd_Write_String@a+1
  1258     029F  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1259     02A4                     l3149:
  1260                           
  1261                           ;main_master.c: 81:             Read_Fecha(&dia, &mes, &ano);
  1262     02A4  3060               	movlw	(low (_mes| 0))& (0+255)
  1263     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1264     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1265     02A7  00A8               	movwf	Read_Fecha@mo
  1266     02A8  305F               	movlw	(low (_ano| 0))& (0+255)
  1267     02A9  00A9               	movwf	Read_Fecha@y
  1268     02AA  3061               	movlw	(low (_dia| 0))& (0+255)
  1269     02AB  120A  158A  2721  120A  118A  	fcall	_Read_Fecha
  1270     02B0                     l3151:
  1271                           
  1272                           ;main_master.c: 82:             Lcd_Set_Cursor(2,7);
  1273     02B0  3007               	movlw	7
  1274     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1275     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1276     02B3  00A4               	movwf	Lcd_Set_Cursor@b
  1277     02B4  3002               	movlw	2
  1278     02B5  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1279                           
  1280                           ;main_master.c: 83:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1281     02BA  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1282     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1283     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1284     02BD  00AE               	movwf	sprintf@f
  1285     02BE  0861               	movf	_dia,w
  1286     02BF  00C3               	movwf	??_main
  1287     02C0  01C4               	clrf	??_main+1
  1288     02C1  0843               	movf	??_main,w
  1289     02C2  00AF               	movwf	?_sprintf+1
  1290     02C3  0844               	movf	??_main+1,w
  1291     02C4  00B0               	movwf	?_sprintf+2
  1292     02C5  0860               	movf	_mes,w
  1293     02C6  00C5               	movwf	??_main+2
  1294     02C7  01C6               	clrf	??_main+3
  1295     02C8  0845               	movf	??_main+2,w
  1296     02C9  00B1               	movwf	?_sprintf+3
  1297     02CA  0846               	movf	??_main+3,w
  1298     02CB  00B2               	movwf	?_sprintf+4
  1299     02CC  085F               	movf	_ano,w
  1300     02CD  00C7               	movwf	??_main+4
  1301     02CE  01C8               	clrf	??_main+5
  1302     02CF  0847               	movf	??_main+4,w
  1303     02D0  00B3               	movwf	?_sprintf+5
  1304     02D1  0848               	movf	??_main+5,w
  1305     02D2  00B4               	movwf	?_sprintf+6
  1306     02D3  304B               	movlw	(low (_buffer| 0))& (0+255)
  1307     02D4  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1308                           
  1309                           ;main_master.c: 84:             Lcd_Write_String(buffer);
  1310     02D9  304B               	movlw	(low (_buffer| 0))& (0+255)
  1311     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1312     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1313     02DC  00A5               	movwf	Lcd_Write_String@a
  1314     02DD  3000               	movlw	0
  1315     02DE  00A6               	movwf	Lcd_Write_String@a+1
  1316     02DF  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1317     02E4                     l3153:
  1318                           
  1319                           ;main_master.c: 86:             Lcd_Set_Cursor(2,5);
  1320     02E4  3005               	movlw	5
  1321     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1322     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1323     02E7  00A4               	movwf	Lcd_Set_Cursor@b
  1324     02E8  3002               	movlw	2
  1325     02E9  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1326     02EE                     l3155:
  1327                           
  1328                           ;main_master.c: 87:             Lcd_Write_String("T");
  1329     02EE  303E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1330     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1331     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1332     02F1  00A5               	movwf	Lcd_Write_String@a
  1333     02F2  3080               	movlw	128
  1334     02F3  00A6               	movwf	Lcd_Write_String@a+1
  1335     02F4  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1336                           
  1337                           ;main_master.c: 88:         }
  1338     02F9  2A58               	goto	l3137
  1339     02FA                     l3157:
  1340     02FA  034A               	decf	_selector,w
  1341     02FB  1D03               	btfss	3,2
  1342     02FC  2AFE               	goto	u2831
  1343     02FD  2AFF               	goto	u2830
  1344     02FE                     u2831:
  1345     02FE  2B47               	goto	l3167
  1346     02FF                     u2830:
  1347     02FF                     l3159:
  1348                           
  1349                           ;main_master.c: 90:             Lcd_Set_Cursor(2,7);
  1350     02FF  3007               	movlw	7
  1351     0300  00A4               	movwf	Lcd_Set_Cursor@b
  1352     0301  3002               	movlw	2
  1353     0302  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1354     0307                     l3161:
  1355                           
  1356                           ;main_master.c: 91:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1357     0307  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1358     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1359     0309  1303               	bcf	3,6	;RP1=0, select bank0
  1360     030A  00AE               	movwf	sprintf@f
  1361     030B  0861               	movf	_dia,w
  1362     030C  00C3               	movwf	??_main
  1363     030D  01C4               	clrf	??_main+1
  1364     030E  0843               	movf	??_main,w
  1365     030F  00AF               	movwf	?_sprintf+1
  1366     0310  0844               	movf	??_main+1,w
  1367     0311  00B0               	movwf	?_sprintf+2
  1368     0312  0860               	movf	_mes,w
  1369     0313  00C5               	movwf	??_main+2
  1370     0314  01C6               	clrf	??_main+3
  1371     0315  0845               	movf	??_main+2,w
  1372     0316  00B1               	movwf	?_sprintf+3
  1373     0317  0846               	movf	??_main+3,w
  1374     0318  00B2               	movwf	?_sprintf+4
  1375     0319  085F               	movf	_ano,w
  1376     031A  00C7               	movwf	??_main+4
  1377     031B  01C8               	clrf	??_main+5
  1378     031C  0847               	movf	??_main+4,w
  1379     031D  00B3               	movwf	?_sprintf+5
  1380     031E  0848               	movf	??_main+5,w
  1381     031F  00B4               	movwf	?_sprintf+6
  1382     0320  304B               	movlw	(low (_buffer| 0))& (0+255)
  1383     0321  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1384     0326                     l3163:
  1385                           
  1386                           ;main_master.c: 92:             Lcd_Write_String(buffer);
  1387     0326  304B               	movlw	(low (_buffer| 0))& (0+255)
  1388     0327  1283               	bcf	3,5	;RP0=0, select bank0
  1389     0328  1303               	bcf	3,6	;RP1=0, select bank0
  1390     0329  00A5               	movwf	Lcd_Write_String@a
  1391     032A  3000               	movlw	0
  1392     032B  00A6               	movwf	Lcd_Write_String@a+1
  1393     032C  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1394                           
  1395                           ;main_master.c: 93:             Lcd_Set_Cursor(2,5);
  1396     0331  3005               	movlw	5
  1397     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1398     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1399     0334  00A4               	movwf	Lcd_Set_Cursor@b
  1400     0335  3002               	movlw	2
  1401     0336  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1402     033B                     l3165:
  1403                           
  1404                           ;main_master.c: 94:             Lcd_Write_String("D ");
  1405     033B  3038               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1406     033C  1283               	bcf	3,5	;RP0=0, select bank0
  1407     033D  1303               	bcf	3,6	;RP1=0, select bank0
  1408     033E  00A5               	movwf	Lcd_Write_String@a
  1409     033F  3080               	movlw	128
  1410     0340  00A6               	movwf	Lcd_Write_String@a+1
  1411     0341  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1412                           
  1413                           ;main_master.c: 95:         }
  1414     0346  2A58               	goto	l3137
  1415     0347                     l3167:
  1416     0347  3002               	movlw	2
  1417     0348  064A               	xorwf	_selector,w
  1418     0349  1D03               	btfss	3,2
  1419     034A  2B4C               	goto	u2841
  1420     034B  2B4D               	goto	u2840
  1421     034C                     u2841:
  1422     034C  2B95               	goto	l3177
  1423     034D                     u2840:
  1424     034D                     l3169:
  1425                           
  1426                           ;main_master.c: 97:             Lcd_Set_Cursor(2,7);
  1427     034D  3007               	movlw	7
  1428     034E  00A4               	movwf	Lcd_Set_Cursor@b
  1429     034F  3002               	movlw	2
  1430     0350  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1431     0355                     l3171:
  1432                           
  1433                           ;main_master.c: 98:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1434     0355  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1435     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1436     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0358  00AE               	movwf	sprintf@f
  1438     0359  0861               	movf	_dia,w
  1439     035A  00C3               	movwf	??_main
  1440     035B  01C4               	clrf	??_main+1
  1441     035C  0843               	movf	??_main,w
  1442     035D  00AF               	movwf	?_sprintf+1
  1443     035E  0844               	movf	??_main+1,w
  1444     035F  00B0               	movwf	?_sprintf+2
  1445     0360  0860               	movf	_mes,w
  1446     0361  00C5               	movwf	??_main+2
  1447     0362  01C6               	clrf	??_main+3
  1448     0363  0845               	movf	??_main+2,w
  1449     0364  00B1               	movwf	?_sprintf+3
  1450     0365  0846               	movf	??_main+3,w
  1451     0366  00B2               	movwf	?_sprintf+4
  1452     0367  085F               	movf	_ano,w
  1453     0368  00C7               	movwf	??_main+4
  1454     0369  01C8               	clrf	??_main+5
  1455     036A  0847               	movf	??_main+4,w
  1456     036B  00B3               	movwf	?_sprintf+5
  1457     036C  0848               	movf	??_main+5,w
  1458     036D  00B4               	movwf	?_sprintf+6
  1459     036E  304B               	movlw	(low (_buffer| 0))& (0+255)
  1460     036F  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1461     0374                     l3173:
  1462                           
  1463                           ;main_master.c: 99:             Lcd_Write_String(buffer);
  1464     0374  304B               	movlw	(low (_buffer| 0))& (0+255)
  1465     0375  1283               	bcf	3,5	;RP0=0, select bank0
  1466     0376  1303               	bcf	3,6	;RP1=0, select bank0
  1467     0377  00A5               	movwf	Lcd_Write_String@a
  1468     0378  3000               	movlw	0
  1469     0379  00A6               	movwf	Lcd_Write_String@a+1
  1470     037A  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1471                           
  1472                           ;main_master.c: 100:             Lcd_Set_Cursor(2,5);
  1473     037F  3005               	movlw	5
  1474     0380  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0381  1303               	bcf	3,6	;RP1=0, select bank0
  1476     0382  00A4               	movwf	Lcd_Set_Cursor@b
  1477     0383  3002               	movlw	2
  1478     0384  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1479     0389                     l3175:
  1480                           
  1481                           ;main_master.c: 101:             Lcd_Write_String("M ");
  1482     0389  303B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1483     038A  1283               	bcf	3,5	;RP0=0, select bank0
  1484     038B  1303               	bcf	3,6	;RP1=0, select bank0
  1485     038C  00A5               	movwf	Lcd_Write_String@a
  1486     038D  3080               	movlw	128
  1487     038E  00A6               	movwf	Lcd_Write_String@a+1
  1488     038F  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1489                           
  1490                           ;main_master.c: 102:         }
  1491     0394  2A58               	goto	l3137
  1492     0395                     l3177:
  1493     0395  3003               	movlw	3
  1494     0396  064A               	xorwf	_selector,w
  1495     0397  1D03               	btfss	3,2
  1496     0398  2B9A               	goto	u2851
  1497     0399  2B9B               	goto	u2850
  1498     039A                     u2851:
  1499     039A  2BE3               	goto	l171
  1500     039B                     u2850:
  1501     039B                     l3179:
  1502                           
  1503                           ;main_master.c: 104:             Lcd_Set_Cursor(2,7);
  1504     039B  3007               	movlw	7
  1505     039C  00A4               	movwf	Lcd_Set_Cursor@b
  1506     039D  3002               	movlw	2
  1507     039E  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1508     03A3                     l3181:
  1509                           
  1510                           ;main_master.c: 105:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1511     03A3  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1512     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1513     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1514     03A6  00AE               	movwf	sprintf@f
  1515     03A7  0861               	movf	_dia,w
  1516     03A8  00C3               	movwf	??_main
  1517     03A9  01C4               	clrf	??_main+1
  1518     03AA  0843               	movf	??_main,w
  1519     03AB  00AF               	movwf	?_sprintf+1
  1520     03AC  0844               	movf	??_main+1,w
  1521     03AD  00B0               	movwf	?_sprintf+2
  1522     03AE  0860               	movf	_mes,w
  1523     03AF  00C5               	movwf	??_main+2
  1524     03B0  01C6               	clrf	??_main+3
  1525     03B1  0845               	movf	??_main+2,w
  1526     03B2  00B1               	movwf	?_sprintf+3
  1527     03B3  0846               	movf	??_main+3,w
  1528     03B4  00B2               	movwf	?_sprintf+4
  1529     03B5  085F               	movf	_ano,w
  1530     03B6  00C7               	movwf	??_main+4
  1531     03B7  01C8               	clrf	??_main+5
  1532     03B8  0847               	movf	??_main+4,w
  1533     03B9  00B3               	movwf	?_sprintf+5
  1534     03BA  0848               	movf	??_main+5,w
  1535     03BB  00B4               	movwf	?_sprintf+6
  1536     03BC  304B               	movlw	(low (_buffer| 0))& (0+255)
  1537     03BD  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1538     03C2                     l3183:
  1539                           
  1540                           ;main_master.c: 106:             Lcd_Write_String(buffer);
  1541     03C2  304B               	movlw	(low (_buffer| 0))& (0+255)
  1542     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1543     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1544     03C5  00A5               	movwf	Lcd_Write_String@a
  1545     03C6  3000               	movlw	0
  1546     03C7  00A6               	movwf	Lcd_Write_String@a+1
  1547     03C8  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1548                           
  1549                           ;main_master.c: 107:             Lcd_Set_Cursor(2,5);
  1550     03CD  3005               	movlw	5
  1551     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1552     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1553     03D0  00A4               	movwf	Lcd_Set_Cursor@b
  1554     03D1  3002               	movlw	2
  1555     03D2  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1556     03D7                     l3185:
  1557                           
  1558                           ;main_master.c: 108:             Lcd_Write_String("A ");
  1559     03D7  3035               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1560     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1561     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1562     03DA  00A5               	movwf	Lcd_Write_String@a
  1563     03DB  3080               	movlw	128
  1564     03DC  00A6               	movwf	Lcd_Write_String@a+1
  1565     03DD  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1566     03E2  2A58               	goto	l3137
  1567     03E3                     l171:
  1568     03E3  2A58               	goto	l3137
  1569     03E4  120A  118A  280C   	ljmp	start
  1570     03E7                     __end_of_main:
  1571                           
  1572                           	psect	text1
  1573     0DEB                     __ptext1:	
  1574 ;; *************** function _setup *****************
  1575 ;; Defined at:
  1576 ;;		line 247 in file "main_master.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0
  1593 ;;      Totals:         0       0       0       0       0
  1594 ;;Total ram usage:        0 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 4
  1597 ;; This function calls:
  1598 ;;		_I2C_Init_Master
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604     0DEB                     _setup:	
  1605                           ;psect for function _setup
  1606                           
  1607     0DEB                     l2983:	
  1608                           ;incstack = 0
  1609                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1610                           
  1611                           
  1612                           ;main_master.c: 248:     ANSEL = 0;
  1613     0DEB  1683               	bsf	3,5	;RP0=1, select bank3
  1614     0DEC  1703               	bsf	3,6	;RP1=1, select bank3
  1615     0DED  0188               	clrf	8	;volatile
  1616                           
  1617                           ;main_master.c: 249:     ANSELH = 0;
  1618     0DEE  0189               	clrf	9	;volatile
  1619     0DEF                     l2985:
  1620                           
  1621                           ;main_master.c: 251:     TRISB = 0b00001110;
  1622     0DEF  300E               	movlw	14
  1623     0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  1624     0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  1625     0DF2  0086               	movwf	6	;volatile
  1626     0DF3                     l2987:
  1627                           
  1628                           ;main_master.c: 252:     TRISD = 0;
  1629     0DF3  0188               	clrf	8	;volatile
  1630     0DF4                     l2989:
  1631                           
  1632                           ;main_master.c: 253:     PORTB = 0;
  1633     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1634     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1635     0DF6  0186               	clrf	6	;volatile
  1636     0DF7                     l2991:
  1637                           
  1638                           ;main_master.c: 254:     PORTC = 0;
  1639     0DF7  0187               	clrf	7	;volatile
  1640     0DF8                     l2993:
  1641                           
  1642                           ;main_master.c: 255:     PORTD = 0;
  1643     0DF8  0188               	clrf	8	;volatile
  1644     0DF9                     l2995:
  1645                           
  1646                           ;main_master.c: 257:     INTCONbits.GIE = 1;
  1647     0DF9  178B               	bsf	11,7	;volatile
  1648     0DFA                     l2997:
  1649                           
  1650                           ;main_master.c: 258:     INTCONbits.RBIF = 0;
  1651     0DFA  100B               	bcf	11,0	;volatile
  1652     0DFB                     l2999:
  1653                           
  1654                           ;main_master.c: 259:     INTCONbits.RBIE = 1;
  1655     0DFB  158B               	bsf	11,3	;volatile
  1656     0DFC                     l3001:
  1657                           
  1658                           ;main_master.c: 261:     OPTION_REGbits.nRBPU = 0;
  1659     0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  1660     0DFD  1303               	bcf	3,6	;RP1=0, select bank1
  1661     0DFE  1381               	bcf	1,7	;volatile
  1662     0DFF                     l3003:
  1663                           
  1664                           ;main_master.c: 262:     IOCBbits.IOCB3 = 1;
  1665     0DFF  1596               	bsf	22,3	;volatile
  1666     0E00                     l3005:
  1667                           
  1668                           ;main_master.c: 263:     IOCBbits.IOCB2 = 1;
  1669     0E00  1516               	bsf	22,2	;volatile
  1670     0E01                     l3007:
  1671                           
  1672                           ;main_master.c: 264:     IOCBbits.IOCB1 = 1;
  1673     0E01  1496               	bsf	22,1	;volatile
  1674     0E02                     l3009:
  1675                           
  1676                           ;main_master.c: 266:     WPUBbits.WPUB3 = 1;
  1677     0E02  1595               	bsf	21,3	;volatile
  1678     0E03                     l3011:
  1679                           
  1680                           ;main_master.c: 267:     WPUBbits.WPUB2 = 1;
  1681     0E03  1515               	bsf	21,2	;volatile
  1682     0E04                     l3013:
  1683                           
  1684                           ;main_master.c: 268:     WPUBbits.WPUB1 = 1;
  1685     0E04  1495               	bsf	21,1	;volatile
  1686     0E05                     l3015:
  1687                           
  1688                           ;main_master.c: 270:     OSCCONbits.IRCF2 = 1;
  1689     0E05  170F               	bsf	15,6	;volatile
  1690     0E06                     l3017:
  1691                           
  1692                           ;main_master.c: 271:     OSCCONbits.IRCF1 = 1;
  1693     0E06  168F               	bsf	15,5	;volatile
  1694     0E07                     l3019:
  1695                           
  1696                           ;main_master.c: 272:     OSCCONbits.IRCF0 = 1;
  1697     0E07  160F               	bsf	15,4	;volatile
  1698     0E08                     l3021:
  1699                           
  1700                           ;main_master.c: 274:     OSCCONbits.SCS = 1;
  1701     0E08  140F               	bsf	15,0	;volatile
  1702     0E09                     l3023:
  1703                           
  1704                           ;main_master.c: 275:     I2C_Init_Master(0x80);
  1705     0E09  3080               	movlw	128
  1706     0E0A  120A  118A  27CC  120A  158A  	fcall	_I2C_Init_Master
  1707     0E0F                     l241:
  1708     0E0F  0008               	return
  1709     0E10                     __end_of_setup:
  1710                           
  1711                           	psect	text2
  1712     07CC                     __ptext2:	
  1713 ;; *************** function _I2C_Init_Master *****************
  1714 ;; Defined at:
  1715 ;;		line 12 in file "i2c.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  sp_i2c          1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  sp_i2c          1    0[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       1       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       1       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 3
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_setup
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743     07CC                     _I2C_Init_Master:	
  1744                           ;psect for function _I2C_Init_Master
  1745                           
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1749                           ;I2C_Init_Master@sp_i2c stored from wreg
  1750     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1751     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1752     07CE  00A0               	movwf	I2C_Init_Master@sp_i2c
  1753     07CF                     l2783:
  1754                           
  1755                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1756     07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1757     07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1758     07D1  1587               	bsf	7,3	;volatile
  1759                           
  1760                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1761     07D2  1607               	bsf	7,4	;volatile
  1762     07D3                     l2785:
  1763                           
  1764                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1765     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1766     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1767     07D5  0820               	movf	I2C_Init_Master@sp_i2c,w
  1768     07D6  1683               	bsf	3,5	;RP0=1, select bank1
  1769     07D7  1303               	bcf	3,6	;RP1=0, select bank1
  1770     07D8  0094               	movwf	20	;volatile
  1771                           
  1772                           ;i2c.c: 17:  SSPCON = 0x28;
  1773     07D9  3028               	movlw	40
  1774     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1775     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1776     07DC  0094               	movwf	20	;volatile
  1777     07DD                     l2787:
  1778                           
  1779                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1780     07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1781     07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1782     07DF  0191               	clrf	17	;volatile
  1783     07E0                     l2789:
  1784                           
  1785                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1786     07E0  3080               	movlw	128
  1787     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1788     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1789     07E3  0620               	xorwf	I2C_Init_Master@sp_i2c,w
  1790     07E4  1D03               	btfss	3,2
  1791     07E5  2FE7               	goto	u2531
  1792     07E6  2FE8               	goto	u2530
  1793     07E7                     u2531:
  1794     07E7  2FED               	goto	l2793
  1795     07E8                     u2530:
  1796     07E8                     l2791:
  1797                           
  1798                           ;i2c.c: 20:         SSPADD = 19;
  1799     07E8  3013               	movlw	19
  1800     07E9  1683               	bsf	3,5	;RP0=1, select bank1
  1801     07EA  1303               	bcf	3,6	;RP1=0, select bank1
  1802     07EB  0093               	movwf	19	;volatile
  1803                           
  1804                           ;i2c.c: 21:     }
  1805     07EC  2FF6               	goto	l22
  1806     07ED                     l2793:
  1807     07ED  0820               	movf	I2C_Init_Master@sp_i2c,w
  1808     07EE  1D03               	btfss	3,2
  1809     07EF  2FF1               	goto	u2541
  1810     07F0  2FF2               	goto	u2540
  1811     07F1                     u2541:
  1812     07F1  2FF6               	goto	l22
  1813     07F2                     u2540:
  1814     07F2                     l2795:
  1815                           
  1816                           ;i2c.c: 23:         SSPADD = 29;
  1817     07F2  301D               	movlw	29
  1818     07F3  1683               	bsf	3,5	;RP0=1, select bank1
  1819     07F4  1303               	bcf	3,6	;RP1=0, select bank1
  1820     07F5  0093               	movwf	19	;volatile
  1821     07F6                     l22:
  1822     07F6  0008               	return
  1823     07F7                     __end_of_I2C_Init_Master:
  1824                           
  1825                           	psect	text3
  1826     074A                     __ptext3:	
  1827 ;; *************** function _Slave1 *****************
  1828 ;; Defined at:
  1829 ;;		line 382 in file "main_master.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0
  1845 ;;      Temps:          0       2       0       0       0
  1846 ;;      Totals:         0       2       0       0       0
  1847 ;;Total ram usage:        2 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 6
  1850 ;; This function calls:
  1851 ;;		_I2C_Read
  1852 ;;		_I2C_Start
  1853 ;;		_I2C_Stop
  1854 ;;		_I2C_Write
  1855 ;;		_Lcd_Set_Cursor
  1856 ;;		_Lcd_Write_String
  1857 ;;		_sprintf
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     074A                     _Slave1:	
  1864                           ;psect for function _Slave1
  1865                           
  1866     074A                     l3099:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _Slave1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1869                           
  1870                           
  1871                           ;main_master.c: 383:     I2C_Start();
  1872     074A  120A  158A  2482  120A  118A  	fcall	_I2C_Start
  1873     074F                     l3101:
  1874                           
  1875                           ;main_master.c: 384:     I2C_Write(0x51);
  1876     074F  3051               	movlw	81
  1877     0750  120A  158A  24C7  120A  118A  	fcall	_I2C_Write
  1878     0755                     l3103:
  1879                           
  1880                           ;main_master.c: 385:     voltaje = I2C_Read();
  1881     0755  120A  158A  24A1  120A  118A  	fcall	_I2C_Read
  1882     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1883     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1884     075C  00C9               	movwf	_voltaje
  1885     075D                     l3105:
  1886                           
  1887                           ;main_master.c: 386:     Lcd_Set_Cursor(2,1);
  1888     075D  01A4               	clrf	Lcd_Set_Cursor@b
  1889     075E  0AA4               	incf	Lcd_Set_Cursor@b,f
  1890     075F  3002               	movlw	2
  1891     0760  120A  118A  2672  120A  118A  	fcall	_Lcd_Set_Cursor
  1892     0765                     l3107:
  1893                           
  1894                           ;main_master.c: 387:     sprintf(buffer, "%d ", voltaje);
  1895     0765  302D               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1896     0766  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0767  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0768  00AE               	movwf	sprintf@f
  1899     0769  0849               	movf	_voltaje,w
  1900     076A  00C1               	movwf	??_Slave1
  1901     076B  01C2               	clrf	??_Slave1+1
  1902     076C  0841               	movf	??_Slave1,w
  1903     076D  00AF               	movwf	?_sprintf+1
  1904     076E  0842               	movf	??_Slave1+1,w
  1905     076F  00B0               	movwf	?_sprintf+2
  1906     0770  304B               	movlw	(low (_buffer| 0))& (0+255)
  1907     0771  120A  118A  23E7  120A  118A  	fcall	_sprintf
  1908     0776                     l3109:
  1909                           
  1910                           ;main_master.c: 388:     Lcd_Write_String(buffer);
  1911     0776  304B               	movlw	(low (_buffer| 0))& (0+255)
  1912     0777  1283               	bcf	3,5	;RP0=0, select bank0
  1913     0778  1303               	bcf	3,6	;RP1=0, select bank0
  1914     0779  00A5               	movwf	Lcd_Write_String@a
  1915     077A  3000               	movlw	0
  1916     077B  00A6               	movwf	Lcd_Write_String@a+1
  1917     077C  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_String
  1918     0781                     l3111:
  1919                           
  1920                           ;main_master.c: 389:     I2C_Stop();
  1921     0781  120A  158A  248C  120A  118A  	fcall	_I2C_Stop
  1922     0786                     l3113:
  1923                           
  1924                           ;main_master.c: 390:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1925     0786  3005               	movlw	5
  1926     0787  1283               	bcf	3,5	;RP0=0, select bank0
  1927     0788  1303               	bcf	3,6	;RP1=0, select bank0
  1928     0789  00C1               	movwf	??_Slave1
  1929     078A                     u2867:
  1930     078A  0BC1               	decfsz	??_Slave1,f
  1931     078B  2F8A               	goto	u2867
  1932     078C  2F8D               	nop2
  1933     078D                     l285:
  1934     078D  0008               	return
  1935     078E                     __end_of_Slave1:
  1936                           
  1937                           	psect	text4
  1938     03E7                     __ptext4:	
  1939 ;; *************** function _sprintf *****************
  1940 ;; Defined at:
  1941 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  sp              1    wreg     PTR unsigned char 
  1944 ;;		 -> buffer(20), 
  1945 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1946 ;;		 -> STR_11(4), STR_9(18), STR_7(18), STR_5(18), 
  1947 ;;		 -> STR_3(18), STR_2(16), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  1950 ;;		 -> buffer(20), 
  1951 ;;  tmpval          4    0        struct .
  1952 ;;  width           2   29[BANK0 ] int 
  1953 ;;  val             2   26[BANK0 ] unsigned int 
  1954 ;;  cp              2    0        PTR const unsigned char 
  1955 ;;  len             2    0        unsigned int 
  1956 ;;  c               1   31[BANK0 ] unsigned char 
  1957 ;;  flag            1   28[BANK0 ] unsigned char 
  1958 ;;  ap              1   25[BANK0 ] PTR void [1]
  1959 ;;		 -> ?_sprintf(2), 
  1960 ;;  prec            1   24[BANK0 ] char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2   14[BANK0 ] int 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       7       0       0       0
  1971 ;;      Locals:         0       9       0       0       0
  1972 ;;      Temps:          0       3       0       0       0
  1973 ;;      Totals:         0      19       0       0       0
  1974 ;;Total ram usage:       19 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 4
  1977 ;; This function calls:
  1978 ;;		___lwdiv
  1979 ;;		___lwmod
  1980 ;;		___wmul
  1981 ;;		_isdigit
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;;		_Slave1
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988     03E7                     _sprintf:	
  1989                           ;psect for function _sprintf
  1990                           
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1994                           ;sprintf@sp stored from wreg
  1995     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  1996     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  1997     03E9  00C0               	movwf	sprintf@sp
  1998     03EA                     l2825:
  1999                           
  2000                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2001     03EA  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2002     03EB  00B9               	movwf	sprintf@ap
  2003                           
  2004                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2005     03EC  2DA9               	goto	l2933
  2006     03ED                     l2827:
  2007                           
  2008                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2009     03ED  3025               	movlw	37
  2010     03EE  063F               	xorwf	sprintf@c,w
  2011     03EF  1903               	btfsc	3,2
  2012     03F0  2BF2               	goto	u2621
  2013     03F1  2BF3               	goto	u2620
  2014     03F2                     u2621:
  2015     03F2  2BFD               	goto	l2833
  2016     03F3                     u2620:
  2017     03F3                     l2829:
  2018                           
  2019                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2020     03F3  0840               	movf	sprintf@sp,w
  2021     03F4  0084               	movwf	4
  2022     03F5  083F               	movf	sprintf@c,w
  2023     03F6  1383               	bcf	3,7	;select IRP bank0
  2024     03F7  0080               	movwf	0
  2025     03F8                     l2831:
  2026     03F8  3001               	movlw	1
  2027     03F9  00B5               	movwf	??_sprintf
  2028     03FA  0835               	movf	??_sprintf,w
  2029     03FB  07C0               	addwf	sprintf@sp,f
  2030                           
  2031                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2032     03FC  2DA9               	goto	l2933
  2033     03FD                     l2833:
  2034                           
  2035                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2036     03FD  01BD               	clrf	sprintf@width
  2037     03FE  01BE               	clrf	sprintf@width+1
  2038                           
  2039                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2040     03FF  01BC               	clrf	sprintf@flag
  2041     0400  2C06               	goto	l2839
  2042     0401                     l430:	
  2043                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2044                           
  2045                           
  2046                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2047     0401  153C               	bsf	sprintf@flag,2
  2048     0402                     l2835:
  2049                           
  2050                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2051     0402  3001               	movlw	1
  2052     0403  00B5               	movwf	??_sprintf
  2053     0404  0835               	movf	??_sprintf,w
  2054     0405  07AE               	addwf	sprintf@f,f
  2055     0406                     l2839:	
  2056                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2057                           
  2058     0406  082E               	movf	sprintf@f,w
  2059     0407  0084               	movwf	4
  2060     0408  120A  118A  262D  120A  118A  	fcall	stringdir
  2061     040D  00B5               	movwf	??_sprintf
  2062     040E  01B6               	clrf	??_sprintf+1
  2063                           
  2064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2065                           ; Switch size 1, requested type "simple"
  2066                           ; Number of cases is 1, Range of values is 0 to 0
  2067                           ; switch strategies available:
  2068                           ; Name         Instructions Cycles
  2069                           ; simple_byte            4     3 (average)
  2070                           ; direct_byte           11     8 (fixed)
  2071                           ; jumptable            260     6 (fixed)
  2072                           ;	Chosen strategy is simple_byte
  2073     040F  0836               	movf	??_sprintf+1,w
  2074     0410  3A00               	xorlw	0	; case 0
  2075     0411  1903               	skipnz
  2076     0412  2C14               	goto	l3241
  2077     0413  2C19               	goto	l2841
  2078     0414                     l3241:
  2079                           
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 1, Range of values is 48 to 48
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            4     3 (average)
  2085                           ; direct_byte           14    11 (fixed)
  2086                           ; jumptable            263     9 (fixed)
  2087                           ;	Chosen strategy is simple_byte
  2088     0414  0835               	movf	??_sprintf,w
  2089     0415  3A30               	xorlw	48	; case 48
  2090     0416  1903               	skipnz
  2091     0417  2C01               	goto	l430
  2092     0418  2C19               	goto	l2841
  2093     0419                     l2841:
  2094                           
  2095                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2096     0419  082E               	movf	sprintf@f,w
  2097     041A  0084               	movwf	4
  2098     041B  120A  118A  262D  120A  118A  	fcall	stringdir
  2099     0420  120A  158A  24E9  120A  118A  	fcall	_isdigit
  2100     0425  1C03               	btfss	3,0
  2101     0426  2C28               	goto	u2631
  2102     0427  2C29               	goto	u2630
  2103     0428                     u2631:
  2104     0428  2C6C               	goto	l2855
  2105     0429                     u2630:
  2106     0429                     l2843:
  2107                           
  2108                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2109     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2110     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2111     042B  01BD               	clrf	sprintf@width
  2112     042C  01BE               	clrf	sprintf@width+1
  2113     042D                     l2845:
  2114                           
  2115                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2116     042D  300A               	movlw	10
  2117     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2118     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2119     0430  00A0               	movwf	___wmul@multiplier
  2120     0431  3000               	movlw	0
  2121     0432  00A1               	movwf	___wmul@multiplier+1
  2122     0433  083E               	movf	sprintf@width+1,w
  2123     0434  00A3               	movwf	___wmul@multiplicand+1
  2124     0435  083D               	movf	sprintf@width,w
  2125     0436  00A2               	movwf	___wmul@multiplicand
  2126     0437  120A  158A  26FA  120A  118A  	fcall	___wmul
  2127     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2128     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2129     043E  0821               	movf	?___wmul+1,w
  2130     043F  00BE               	movwf	sprintf@width+1
  2131     0440  0820               	movf	?___wmul,w
  2132     0441  00BD               	movwf	sprintf@width
  2133     0442                     l2847:
  2134                           
  2135                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2136     0442  082E               	movf	sprintf@f,w
  2137     0443  0084               	movwf	4
  2138     0444  120A  118A  262D  120A  118A  	fcall	stringdir
  2139     0449  3ED0               	addlw	208
  2140     044A  00B5               	movwf	??_sprintf
  2141     044B  30FF               	movlw	255
  2142     044C  1803               	skipnc
  2143     044D  3000               	movlw	0
  2144     044E  00B6               	movwf	??_sprintf+1
  2145     044F  0835               	movf	??_sprintf,w
  2146     0450  07BD               	addwf	sprintf@width,f
  2147     0451  1803               	skipnc
  2148     0452  0ABE               	incf	sprintf@width+1,f
  2149     0453  0836               	movf	??_sprintf+1,w
  2150     0454  07BE               	addwf	sprintf@width+1,f
  2151     0455                     l2849:
  2152     0455  3001               	movlw	1
  2153     0456  00B5               	movwf	??_sprintf
  2154     0457  0835               	movf	??_sprintf,w
  2155     0458  07AE               	addwf	sprintf@f,f
  2156     0459                     l2851:
  2157                           
  2158                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2159     0459  082E               	movf	sprintf@f,w
  2160     045A  0084               	movwf	4
  2161     045B  120A  118A  262D  120A  118A  	fcall	stringdir
  2162     0460  120A  158A  24E9  120A  118A  	fcall	_isdigit
  2163     0465  1803               	btfsc	3,0
  2164     0466  2C68               	goto	u2641
  2165     0467  2C69               	goto	u2640
  2166     0468                     u2641:
  2167     0468  2C2D               	goto	l2845
  2168     0469                     u2640:
  2169     0469  2C6C               	goto	l2855
  2170     046A                     l444:	
  2171                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2172                           
  2173                           
  2174                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2175     046A  173C               	bsf	sprintf@flag,6
  2176                           
  2177                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2178     046B  2C8E               	goto	l442
  2179     046C                     l2855:
  2180     046C  3001               	movlw	1
  2181     046D  1283               	bcf	3,5	;RP0=0, select bank0
  2182     046E  1303               	bcf	3,6	;RP1=0, select bank0
  2183     046F  07AE               	addwf	sprintf@f,f
  2184     0470  30FF               	movlw	-1
  2185     0471  072E               	addwf	sprintf@f,w
  2186     0472  0084               	movwf	4
  2187     0473  120A  118A  262D  120A  118A  	fcall	stringdir
  2188     0478  00BF               	movwf	sprintf@c
  2189     0479  00B5               	movwf	??_sprintf
  2190     047A  01B6               	clrf	??_sprintf+1
  2191                           
  2192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2193                           ; Switch size 1, requested type "simple"
  2194                           ; Number of cases is 1, Range of values is 0 to 0
  2195                           ; switch strategies available:
  2196                           ; Name         Instructions Cycles
  2197                           ; simple_byte            4     3 (average)
  2198                           ; direct_byte           11     8 (fixed)
  2199                           ; jumptable            260     6 (fixed)
  2200                           ;	Chosen strategy is simple_byte
  2201     047B  0836               	movf	??_sprintf+1,w
  2202     047C  3A00               	xorlw	0	; case 0
  2203     047D  1903               	skipnz
  2204     047E  2C80               	goto	l3243
  2205     047F  2DA9               	goto	l2933
  2206     0480                     l3243:
  2207                           
  2208                           ; Switch size 1, requested type "simple"
  2209                           ; Number of cases is 4, Range of values is 0 to 117
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte           13     7 (average)
  2213                           ; jumptable            260     6 (fixed)
  2214                           ;	Chosen strategy is simple_byte
  2215     0480  0835               	movf	??_sprintf,w
  2216     0481  3A00               	xorlw	0	; case 0
  2217     0482  1903               	skipnz
  2218     0483  2DB9               	goto	l2935
  2219     0484  3A64               	xorlw	100	; case 100
  2220     0485  1903               	skipnz
  2221     0486  2C8E               	goto	l442
  2222     0487  3A0D               	xorlw	13	; case 105
  2223     0488  1903               	skipnz
  2224     0489  2C8E               	goto	l442
  2225     048A  3A1C               	xorlw	28	; case 117
  2226     048B  1903               	skipnz
  2227     048C  2C6A               	goto	l444
  2228     048D  2DA9               	goto	l2933
  2229     048E                     l442:
  2230                           
  2231                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2232     048E  1B3C               	btfsc	sprintf@flag,6
  2233     048F  2C91               	goto	u2651
  2234     0490  2C92               	goto	u2650
  2235     0491                     u2651:
  2236     0491  2CAC               	goto	l2867
  2237     0492                     u2650:
  2238     0492                     l2857:
  2239                           
  2240                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2241     0492  0839               	movf	sprintf@ap,w
  2242     0493  0084               	movwf	4
  2243     0494  1383               	bcf	3,7	;select IRP bank0
  2244     0495  0800               	movf	0,w
  2245     0496  00BA               	movwf	sprintf@val
  2246     0497  0A84               	incf	4,f
  2247     0498  0800               	movf	0,w
  2248     0499  00BB               	movwf	sprintf@val+1
  2249     049A                     l2859:
  2250     049A  3002               	movlw	2
  2251     049B  00B5               	movwf	??_sprintf
  2252     049C  0835               	movf	??_sprintf,w
  2253     049D  07B9               	addwf	sprintf@ap,f
  2254     049E                     l2861:
  2255                           
  2256                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2257     049E  1FBB               	btfss	sprintf@val+1,7
  2258     049F  2CA1               	goto	u2661
  2259     04A0  2CA2               	goto	u2660
  2260     04A1                     u2661:
  2261     04A1  2CB8               	goto	l2871
  2262     04A2                     u2660:
  2263     04A2                     l2863:
  2264                           
  2265                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2266     04A2  3003               	movlw	3
  2267     04A3  00B5               	movwf	??_sprintf
  2268     04A4  0835               	movf	??_sprintf,w
  2269     04A5  04BC               	iorwf	sprintf@flag,f
  2270     04A6                     l2865:
  2271                           
  2272                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2273     04A6  09BA               	comf	sprintf@val,f
  2274     04A7  09BB               	comf	sprintf@val+1,f
  2275     04A8  0ABA               	incf	sprintf@val,f
  2276     04A9  1903               	skipnz
  2277     04AA  0ABB               	incf	sprintf@val+1,f
  2278     04AB  2CB8               	goto	l2871
  2279     04AC                     l2867:
  2280                           
  2281                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2282     04AC  0839               	movf	sprintf@ap,w
  2283     04AD  0084               	movwf	4
  2284     04AE  1383               	bcf	3,7	;select IRP bank0
  2285     04AF  0800               	movf	0,w
  2286     04B0  00BA               	movwf	sprintf@val
  2287     04B1  0A84               	incf	4,f
  2288     04B2  0800               	movf	0,w
  2289     04B3  00BB               	movwf	sprintf@val+1
  2290     04B4                     l2869:
  2291     04B4  3002               	movlw	2
  2292     04B5  00B5               	movwf	??_sprintf
  2293     04B6  0835               	movf	??_sprintf,w
  2294     04B7  07B9               	addwf	sprintf@ap,f
  2295     04B8                     l2871:
  2296                           
  2297                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2298     04B8  01BF               	clrf	sprintf@c
  2299     04B9  0ABF               	incf	sprintf@c,f
  2300     04BA                     l2877:
  2301                           
  2302                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2303     04BA  083F               	movf	sprintf@c,w
  2304     04BB  00B5               	movwf	??_sprintf
  2305     04BC  0735               	addwf	??_sprintf,w
  2306     04BD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2307     04BE  0084               	movwf	4
  2308     04BF  120A  118A  262D  120A  118A  	fcall	stringdir
  2309     04C4  00B6               	movwf	??_sprintf+1
  2310     04C5  120A  118A  262D  120A  118A  	fcall	stringdir
  2311     04CA  00B7               	movwf	??_sprintf+2
  2312     04CB  0837               	movf	??_sprintf+2,w
  2313     04CC  023B               	subwf	sprintf@val+1,w
  2314     04CD  1D03               	skipz
  2315     04CE  2CD1               	goto	u2675
  2316     04CF  0836               	movf	??_sprintf+1,w
  2317     04D0  023A               	subwf	sprintf@val,w
  2318     04D1                     u2675:
  2319     04D1  1803               	skipnc
  2320     04D2  2CD4               	goto	u2671
  2321     04D3  2CD5               	goto	u2670
  2322     04D4                     u2671:
  2323     04D4  2CD6               	goto	l2881
  2324     04D5                     u2670:
  2325     04D5  2CE0               	goto	l2883
  2326     04D6                     l2881:
  2327     04D6  3001               	movlw	1
  2328     04D7  00B5               	movwf	??_sprintf
  2329     04D8  0835               	movf	??_sprintf,w
  2330     04D9  07BF               	addwf	sprintf@c,f
  2331     04DA  3005               	movlw	5
  2332     04DB  063F               	xorwf	sprintf@c,w
  2333     04DC  1D03               	btfss	3,2
  2334     04DD  2CDF               	goto	u2681
  2335     04DE  2CE0               	goto	u2680
  2336     04DF                     u2681:
  2337     04DF  2CBA               	goto	l2877
  2338     04E0                     u2680:
  2339     04E0                     l2883:
  2340                           
  2341                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2342     04E0  083D               	movf	sprintf@width,w
  2343     04E1  043E               	iorwf	sprintf@width+1,w
  2344     04E2  1903               	btfsc	3,2
  2345     04E3  2CE5               	goto	u2691
  2346     04E4  2CE6               	goto	u2690
  2347     04E5                     u2691:
  2348     04E5  2CF2               	goto	l451
  2349     04E6                     u2690:
  2350     04E6                     l2885:
  2351     04E6  083C               	movf	sprintf@flag,w
  2352     04E7  3903               	andlw	3
  2353     04E8  1903               	btfsc	3,2
  2354     04E9  2CEB               	goto	u2701
  2355     04EA  2CEC               	goto	u2700
  2356     04EB                     u2701:
  2357     04EB  2CF2               	goto	l451
  2358     04EC                     u2700:
  2359     04EC                     l2887:
  2360                           
  2361                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2362     04EC  30FF               	movlw	255
  2363     04ED  07BD               	addwf	sprintf@width,f
  2364     04EE  1803               	skipnc
  2365     04EF  0ABE               	incf	sprintf@width+1,f
  2366     04F0  30FF               	movlw	255
  2367     04F1  07BE               	addwf	sprintf@width+1,f
  2368     04F2                     l451:
  2369                           
  2370                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2371     04F2  083E               	movf	sprintf@width+1,w
  2372     04F3  3A80               	xorlw	128
  2373     04F4  3C80               	sublw	128
  2374     04F5  1D03               	skipz
  2375     04F6  2CF9               	goto	u2715
  2376     04F7  083D               	movf	sprintf@width,w
  2377     04F8  023F               	subwf	sprintf@c,w
  2378     04F9                     u2715:
  2379     04F9  1803               	skipnc
  2380     04FA  2CFC               	goto	u2711
  2381     04FB  2CFD               	goto	u2710
  2382     04FC                     u2711:
  2383     04FC  2D09               	goto	l2891
  2384     04FD                     u2710:
  2385     04FD                     l2889:
  2386                           
  2387                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2388     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2389     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2390     04FF  083F               	movf	sprintf@c,w
  2391     0500  00B5               	movwf	??_sprintf
  2392     0501  01B6               	clrf	??_sprintf+1
  2393     0502  0835               	movf	??_sprintf,w
  2394     0503  02BD               	subwf	sprintf@width,f
  2395     0504  0836               	movf	??_sprintf+1,w
  2396     0505  1C03               	skipc
  2397     0506  03BE               	decf	sprintf@width+1,f
  2398     0507  02BE               	subwf	sprintf@width+1,f
  2399     0508  2D0D               	goto	l2893
  2400     0509                     l2891:
  2401                           
  2402                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2403     0509  1283               	bcf	3,5	;RP0=0, select bank0
  2404     050A  1303               	bcf	3,6	;RP1=0, select bank0
  2405     050B  01BD               	clrf	sprintf@width
  2406     050C  01BE               	clrf	sprintf@width+1
  2407     050D                     l2893:
  2408                           
  2409                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2410     050D  1D3C               	btfss	sprintf@flag,2
  2411     050E  2D10               	goto	u2721
  2412     050F  2D11               	goto	u2720
  2413     0510                     u2721:
  2414     0510  2D3C               	goto	l2909
  2415     0511                     u2720:
  2416     0511                     l2895:
  2417                           
  2418                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2419     0511  083C               	movf	sprintf@flag,w
  2420     0512  3903               	andlw	3
  2421     0513  1903               	btfsc	3,2
  2422     0514  2D16               	goto	u2731
  2423     0515  2D17               	goto	u2730
  2424     0516                     u2731:
  2425     0516  2D20               	goto	l2901
  2426     0517                     u2730:
  2427     0517                     l2897:
  2428                           
  2429                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2430     0517  0840               	movf	sprintf@sp,w
  2431     0518  0084               	movwf	4
  2432     0519  302D               	movlw	45
  2433     051A  1383               	bcf	3,7	;select IRP bank0
  2434     051B  0080               	movwf	0
  2435     051C                     l2899:
  2436     051C  3001               	movlw	1
  2437     051D  00B5               	movwf	??_sprintf
  2438     051E  0835               	movf	??_sprintf,w
  2439     051F  07C0               	addwf	sprintf@sp,f
  2440     0520                     l2901:
  2441                           
  2442                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2443     0520  083D               	movf	sprintf@width,w
  2444     0521  043E               	iorwf	sprintf@width+1,w
  2445     0522  1903               	btfsc	3,2
  2446     0523  2D25               	goto	u2741
  2447     0524  2D26               	goto	u2740
  2448     0525                     u2741:
  2449     0525  2D66               	goto	l2923
  2450     0526                     u2740:
  2451     0526                     l2903:
  2452                           
  2453                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2454     0526  0840               	movf	sprintf@sp,w
  2455     0527  0084               	movwf	4
  2456     0528  3030               	movlw	48
  2457     0529  1383               	bcf	3,7	;select IRP bank0
  2458     052A  0080               	movwf	0
  2459     052B                     l2905:
  2460     052B  3001               	movlw	1
  2461     052C  00B5               	movwf	??_sprintf
  2462     052D  0835               	movf	??_sprintf,w
  2463     052E  07C0               	addwf	sprintf@sp,f
  2464     052F                     l2907:
  2465     052F  30FF               	movlw	255
  2466     0530  07BD               	addwf	sprintf@width,f
  2467     0531  1803               	skipnc
  2468     0532  0ABE               	incf	sprintf@width+1,f
  2469     0533  30FF               	movlw	255
  2470     0534  07BE               	addwf	sprintf@width+1,f
  2471     0535  083D               	movf	sprintf@width,w
  2472     0536  043E               	iorwf	sprintf@width+1,w
  2473     0537  1D03               	btfss	3,2
  2474     0538  2D3A               	goto	u2751
  2475     0539  2D3B               	goto	u2750
  2476     053A                     u2751:
  2477     053A  2D26               	goto	l2903
  2478     053B                     u2750:
  2479     053B  2D66               	goto	l2923
  2480     053C                     l2909:
  2481                           
  2482                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2483     053C  083D               	movf	sprintf@width,w
  2484     053D  043E               	iorwf	sprintf@width+1,w
  2485     053E  1903               	btfsc	3,2
  2486     053F  2D41               	goto	u2761
  2487     0540  2D42               	goto	u2760
  2488     0541                     u2761:
  2489     0541  2D57               	goto	l2917
  2490     0542                     u2760:
  2491     0542                     l2911:
  2492                           
  2493                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2494     0542  0840               	movf	sprintf@sp,w
  2495     0543  0084               	movwf	4
  2496     0544  3020               	movlw	32
  2497     0545  1383               	bcf	3,7	;select IRP bank0
  2498     0546  0080               	movwf	0
  2499     0547                     l2913:
  2500     0547  3001               	movlw	1
  2501     0548  00B5               	movwf	??_sprintf
  2502     0549  0835               	movf	??_sprintf,w
  2503     054A  07C0               	addwf	sprintf@sp,f
  2504     054B                     l2915:
  2505     054B  30FF               	movlw	255
  2506     054C  07BD               	addwf	sprintf@width,f
  2507     054D  1803               	skipnc
  2508     054E  0ABE               	incf	sprintf@width+1,f
  2509     054F  30FF               	movlw	255
  2510     0550  07BE               	addwf	sprintf@width+1,f
  2511     0551  083D               	movf	sprintf@width,w
  2512     0552  043E               	iorwf	sprintf@width+1,w
  2513     0553  1D03               	btfss	3,2
  2514     0554  2D56               	goto	u2771
  2515     0555  2D57               	goto	u2770
  2516     0556                     u2771:
  2517     0556  2D42               	goto	l2911
  2518     0557                     u2770:
  2519     0557                     l2917:
  2520                           
  2521                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2522     0557  083C               	movf	sprintf@flag,w
  2523     0558  3903               	andlw	3
  2524     0559  1903               	btfsc	3,2
  2525     055A  2D5C               	goto	u2781
  2526     055B  2D5D               	goto	u2780
  2527     055C                     u2781:
  2528     055C  2D66               	goto	l2923
  2529     055D                     u2780:
  2530     055D                     l2919:
  2531                           
  2532                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2533     055D  0840               	movf	sprintf@sp,w
  2534     055E  0084               	movwf	4
  2535     055F  302D               	movlw	45
  2536     0560  1383               	bcf	3,7	;select IRP bank0
  2537     0561  0080               	movwf	0
  2538     0562                     l2921:
  2539     0562  3001               	movlw	1
  2540     0563  00B5               	movwf	??_sprintf
  2541     0564  0835               	movf	??_sprintf,w
  2542     0565  07C0               	addwf	sprintf@sp,f
  2543     0566                     l2923:
  2544                           
  2545                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2546     0566  083F               	movf	sprintf@c,w
  2547     0567  00B8               	movwf	sprintf@prec
  2548                           
  2549                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2550     0568  2DA0               	goto	l2931
  2551     0569                     l2925:
  2552                           
  2553                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2554     0569  300A               	movlw	10
  2555     056A  00A8               	movwf	___lwmod@divisor
  2556     056B  3000               	movlw	0
  2557     056C  00A9               	movwf	___lwmod@divisor+1
  2558     056D  0838               	movf	sprintf@prec,w
  2559     056E  00B5               	movwf	??_sprintf
  2560     056F  0735               	addwf	??_sprintf,w
  2561     0570  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2562     0571  0084               	movwf	4
  2563     0572  120A  118A  262D  120A  118A  	fcall	stringdir
  2564     0577  00A0               	movwf	___lwdiv@divisor
  2565     0578  120A  118A  262D  120A  118A  	fcall	stringdir
  2566     057D  00A1               	movwf	___lwdiv@divisor+1
  2567     057E  083B               	movf	sprintf@val+1,w
  2568     057F  00A3               	movwf	___lwdiv@dividend+1
  2569     0580  083A               	movf	sprintf@val,w
  2570     0581  00A2               	movwf	___lwdiv@dividend
  2571     0582  120A  118A  26BE  120A  118A  	fcall	___lwdiv
  2572     0587  1283               	bcf	3,5	;RP0=0, select bank0
  2573     0588  1303               	bcf	3,6	;RP1=0, select bank0
  2574     0589  0821               	movf	?___lwdiv+1,w
  2575     058A  00AB               	movwf	___lwmod@dividend+1
  2576     058B  0820               	movf	?___lwdiv,w
  2577     058C  00AA               	movwf	___lwmod@dividend
  2578     058D  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2579     0592  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0593  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0594  0828               	movf	?___lwmod,w
  2582     0595  3E30               	addlw	48
  2583     0596  00BF               	movwf	sprintf@c
  2584     0597                     l2927:
  2585                           
  2586                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2587     0597  0840               	movf	sprintf@sp,w
  2588     0598  0084               	movwf	4
  2589     0599  083F               	movf	sprintf@c,w
  2590     059A  1383               	bcf	3,7	;select IRP bank0
  2591     059B  0080               	movwf	0
  2592     059C                     l2929:
  2593     059C  3001               	movlw	1
  2594     059D  00B5               	movwf	??_sprintf
  2595     059E  0835               	movf	??_sprintf,w
  2596     059F  07C0               	addwf	sprintf@sp,f
  2597     05A0                     l2931:
  2598                           
  2599                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2600     05A0  30FF               	movlw	255
  2601     05A1  00B5               	movwf	??_sprintf
  2602     05A2  0835               	movf	??_sprintf,w
  2603     05A3  07B8               	addwf	sprintf@prec,f
  2604     05A4  0A38               	incf	sprintf@prec,w
  2605     05A5  1D03               	btfss	3,2
  2606     05A6  2DA8               	goto	u2791
  2607     05A7  2DA9               	goto	u2790
  2608     05A8                     u2791:
  2609     05A8  2D69               	goto	l2925
  2610     05A9                     u2790:
  2611     05A9                     l2933:
  2612                           
  2613                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2614     05A9  3001               	movlw	1
  2615     05AA  07AE               	addwf	sprintf@f,f
  2616     05AB  30FF               	movlw	-1
  2617     05AC  072E               	addwf	sprintf@f,w
  2618     05AD  0084               	movwf	4
  2619     05AE  120A  118A  262D  120A  118A  	fcall	stringdir
  2620     05B3  00BF               	movwf	sprintf@c
  2621     05B4  083F               	movf	sprintf@c,w
  2622     05B5  1D03               	btfss	3,2
  2623     05B6  2DB8               	goto	u2801
  2624     05B7  2DB9               	goto	u2800
  2625     05B8                     u2801:
  2626     05B8  2BED               	goto	l2827
  2627     05B9                     u2800:
  2628     05B9                     l2935:
  2629                           
  2630                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2631     05B9  0840               	movf	sprintf@sp,w
  2632     05BA  0084               	movwf	4
  2633     05BB  1383               	bcf	3,7	;select IRP bank0
  2634     05BC  0180               	clrf	0
  2635     05BD                     l468:
  2636     05BD  0008               	return
  2637     05BE                     __end_of_sprintf:
  2638                           
  2639                           	psect	text5
  2640     0CE9                     __ptext5:	
  2641 ;; *************** function _isdigit *****************
  2642 ;; Defined at:
  2643 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  c               1    wreg     unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  c               1    1[BANK0 ] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       2       0       0       0
  2659 ;;      Temps:          0       0       0       0       0
  2660 ;;      Totals:         0       2       0       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 3
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_sprintf
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671     0CE9                     _isdigit:	
  2672                           ;psect for function _isdigit
  2673                           
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2677                           ;isdigit@c stored from wreg
  2678     0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  2679     0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  2680     0CEB  00A1               	movwf	isdigit@c
  2681     0CEC                     l2757:
  2682     0CEC  01A0               	clrf	_isdigit$1027
  2683     0CED                     l2759:
  2684     0CED  303A               	movlw	58
  2685     0CEE  0221               	subwf	isdigit@c,w
  2686     0CEF  1803               	skipnc
  2687     0CF0  2CF2               	goto	u2471
  2688     0CF1  2CF3               	goto	u2470
  2689     0CF2                     u2471:
  2690     0CF2  2CFB               	goto	l2765
  2691     0CF3                     u2470:
  2692     0CF3                     l2761:
  2693     0CF3  3030               	movlw	48
  2694     0CF4  0221               	subwf	isdigit@c,w
  2695     0CF5  1C03               	skipc
  2696     0CF6  2CF8               	goto	u2481
  2697     0CF7  2CF9               	goto	u2480
  2698     0CF8                     u2481:
  2699     0CF8  2CFB               	goto	l2765
  2700     0CF9                     u2480:
  2701     0CF9                     l2763:
  2702     0CF9  01A0               	clrf	_isdigit$1027
  2703     0CFA  0AA0               	incf	_isdigit$1027,f
  2704     0CFB                     l2765:
  2705     0CFB  0C20               	rrf	_isdigit$1027,w
  2706     0CFC                     l925:
  2707     0CFC  0008               	return
  2708     0CFD                     __end_of_isdigit:
  2709                           
  2710                           	psect	text6
  2711     0EFA                     __ptext6:	
  2712 ;; *************** function ___wmul *****************
  2713 ;; Defined at:
  2714 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2717 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  product         2    4[BANK0 ] unsigned int 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    0[BANK0 ] unsigned int 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       4       0       0       0
  2730 ;;      Locals:         0       2       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       6       0       0       0
  2733 ;;Total ram usage:        6 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 3
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_sprintf
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743     0EFA                     ___wmul:	
  2744                           ;psect for function ___wmul
  2745                           
  2746     0EFA                     l2769:	
  2747                           ;incstack = 0
  2748                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2749                           
  2750     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  2751     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  2752     0EFC  01A4               	clrf	___wmul@product
  2753     0EFD  01A5               	clrf	___wmul@product+1
  2754     0EFE                     l2771:
  2755     0EFE  1C20               	btfss	___wmul@multiplier,0
  2756     0EFF  2F01               	goto	u2491
  2757     0F00  2F02               	goto	u2490
  2758     0F01                     u2491:
  2759     0F01  2F08               	goto	l472
  2760     0F02                     u2490:
  2761     0F02                     l2773:
  2762     0F02  0822               	movf	___wmul@multiplicand,w
  2763     0F03  07A4               	addwf	___wmul@product,f
  2764     0F04  1803               	skipnc
  2765     0F05  0AA5               	incf	___wmul@product+1,f
  2766     0F06  0823               	movf	___wmul@multiplicand+1,w
  2767     0F07  07A5               	addwf	___wmul@product+1,f
  2768     0F08                     l472:
  2769     0F08  3001               	movlw	1
  2770     0F09                     u2505:
  2771     0F09  1003               	clrc
  2772     0F0A  0DA2               	rlf	___wmul@multiplicand,f
  2773     0F0B  0DA3               	rlf	___wmul@multiplicand+1,f
  2774     0F0C  3EFF               	addlw	-1
  2775     0F0D  1D03               	skipz
  2776     0F0E  2F09               	goto	u2505
  2777     0F0F                     l2775:
  2778     0F0F  3001               	movlw	1
  2779     0F10                     u2515:
  2780     0F10  1003               	clrc
  2781     0F11  0CA1               	rrf	___wmul@multiplier+1,f
  2782     0F12  0CA0               	rrf	___wmul@multiplier,f
  2783     0F13  3EFF               	addlw	-1
  2784     0F14  1D03               	skipz
  2785     0F15  2F10               	goto	u2515
  2786     0F16                     l2777:
  2787     0F16  0820               	movf	___wmul@multiplier,w
  2788     0F17  0421               	iorwf	___wmul@multiplier+1,w
  2789     0F18  1D03               	btfss	3,2
  2790     0F19  2F1B               	goto	u2521
  2791     0F1A  2F1C               	goto	u2520
  2792     0F1B                     u2521:
  2793     0F1B  2EFE               	goto	l2771
  2794     0F1C                     u2520:
  2795     0F1C                     l2779:
  2796     0F1C  0825               	movf	___wmul@product+1,w
  2797     0F1D  00A1               	movwf	?___wmul+1
  2798     0F1E  0824               	movf	___wmul@product,w
  2799     0F1F  00A0               	movwf	?___wmul
  2800     0F20                     l474:
  2801     0F20  0008               	return
  2802     0F21                     __end_of___wmul:
  2803                           
  2804                           	psect	text7
  2805     0FC4                     __ptext7:	
  2806 ;; *************** function ___lwmod *****************
  2807 ;; Defined at:
  2808 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  divisor         2    8[BANK0 ] unsigned int 
  2811 ;;  dividend        2   10[BANK0 ] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  counter         1   13[BANK0 ] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2    8[BANK0 ] unsigned int 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       4       0       0       0
  2824 ;;      Locals:         0       1       0       0       0
  2825 ;;      Temps:          0       1       0       0       0
  2826 ;;      Totals:         0       6       0       0       0
  2827 ;;Total ram usage:        6 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 3
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_sprintf
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837     0FC4                     ___lwmod:	
  2838                           ;psect for function ___lwmod
  2839                           
  2840     0FC4                     l1967:	
  2841                           ;incstack = 0
  2842                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2843                           
  2844     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2845     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2846     0FC6  0828               	movf	___lwmod@divisor,w
  2847     0FC7  0429               	iorwf	___lwmod@divisor+1,w
  2848     0FC8  1903               	btfsc	3,2
  2849     0FC9  2FCB               	goto	u1451
  2850     0FCA  2FCC               	goto	u1450
  2851     0FCB                     u1451:
  2852     0FCB  2FFB               	goto	l1985
  2853     0FCC                     u1450:
  2854     0FCC                     l1969:
  2855     0FCC  01AD               	clrf	___lwmod@counter
  2856     0FCD  0AAD               	incf	___lwmod@counter,f
  2857     0FCE  2FDA               	goto	l1975
  2858     0FCF                     l1971:
  2859     0FCF  3001               	movlw	1
  2860     0FD0                     u1465:
  2861     0FD0  1003               	clrc
  2862     0FD1  0DA8               	rlf	___lwmod@divisor,f
  2863     0FD2  0DA9               	rlf	___lwmod@divisor+1,f
  2864     0FD3  3EFF               	addlw	-1
  2865     0FD4  1D03               	skipz
  2866     0FD5  2FD0               	goto	u1465
  2867     0FD6                     l1973:
  2868     0FD6  3001               	movlw	1
  2869     0FD7  00AC               	movwf	??___lwmod
  2870     0FD8  082C               	movf	??___lwmod,w
  2871     0FD9  07AD               	addwf	___lwmod@counter,f
  2872     0FDA                     l1975:
  2873     0FDA  1FA9               	btfss	___lwmod@divisor+1,7
  2874     0FDB  2FDD               	goto	u1471
  2875     0FDC  2FDE               	goto	u1470
  2876     0FDD                     u1471:
  2877     0FDD  2FCF               	goto	l1971
  2878     0FDE                     u1470:
  2879     0FDE                     l1977:
  2880     0FDE  0829               	movf	___lwmod@divisor+1,w
  2881     0FDF  022B               	subwf	___lwmod@dividend+1,w
  2882     0FE0  1D03               	skipz
  2883     0FE1  2FE4               	goto	u1485
  2884     0FE2  0828               	movf	___lwmod@divisor,w
  2885     0FE3  022A               	subwf	___lwmod@dividend,w
  2886     0FE4                     u1485:
  2887     0FE4  1C03               	skipc
  2888     0FE5  2FE7               	goto	u1481
  2889     0FE6  2FE8               	goto	u1480
  2890     0FE7                     u1481:
  2891     0FE7  2FEE               	goto	l1981
  2892     0FE8                     u1480:
  2893     0FE8                     l1979:
  2894     0FE8  0828               	movf	___lwmod@divisor,w
  2895     0FE9  02AA               	subwf	___lwmod@dividend,f
  2896     0FEA  0829               	movf	___lwmod@divisor+1,w
  2897     0FEB  1C03               	skipc
  2898     0FEC  03AB               	decf	___lwmod@dividend+1,f
  2899     0FED  02AB               	subwf	___lwmod@dividend+1,f
  2900     0FEE                     l1981:
  2901     0FEE  3001               	movlw	1
  2902     0FEF                     u1495:
  2903     0FEF  1003               	clrc
  2904     0FF0  0CA9               	rrf	___lwmod@divisor+1,f
  2905     0FF1  0CA8               	rrf	___lwmod@divisor,f
  2906     0FF2  3EFF               	addlw	-1
  2907     0FF3  1D03               	skipz
  2908     0FF4  2FEF               	goto	u1495
  2909     0FF5                     l1983:
  2910     0FF5  3001               	movlw	1
  2911     0FF6  02AD               	subwf	___lwmod@counter,f
  2912     0FF7  1D03               	btfss	3,2
  2913     0FF8  2FFA               	goto	u1501
  2914     0FF9  2FFB               	goto	u1500
  2915     0FFA                     u1501:
  2916     0FFA  2FDE               	goto	l1977
  2917     0FFB                     u1500:
  2918     0FFB                     l1985:
  2919     0FFB  082B               	movf	___lwmod@dividend+1,w
  2920     0FFC  00A9               	movwf	?___lwmod+1
  2921     0FFD  082A               	movf	___lwmod@dividend,w
  2922     0FFE  00A8               	movwf	?___lwmod
  2923     0FFF                     l754:
  2924     0FFF  0008               	return
  2925     1000                     __end_of___lwmod:
  2926                           
  2927                           	psect	text8
  2928     06BE                     __ptext8:	
  2929 ;; *************** function ___lwdiv *****************
  2930 ;; Defined at:
  2931 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  divisor         2    0[BANK0 ] unsigned int 
  2934 ;;  dividend        2    2[BANK0 ] unsigned int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  quotient        2    5[BANK0 ] unsigned int 
  2937 ;;  counter         1    7[BANK0 ] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    0[BANK0 ] unsigned int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       4       0       0       0
  2948 ;;      Locals:         0       3       0       0       0
  2949 ;;      Temps:          0       1       0       0       0
  2950 ;;      Totals:         0       8       0       0       0
  2951 ;;Total ram usage:        8 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 3
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_sprintf
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     06BE                     ___lwdiv:	
  2962                           ;psect for function ___lwdiv
  2963                           
  2964     06BE                     l1941:	
  2965                           ;incstack = 0
  2966                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2967                           
  2968     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2969     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2970     06C0  01A5               	clrf	___lwdiv@quotient
  2971     06C1  01A6               	clrf	___lwdiv@quotient+1
  2972     06C2                     l1943:
  2973     06C2  0820               	movf	___lwdiv@divisor,w
  2974     06C3  0421               	iorwf	___lwdiv@divisor+1,w
  2975     06C4  1903               	btfsc	3,2
  2976     06C5  2EC7               	goto	u1381
  2977     06C6  2EC8               	goto	u1380
  2978     06C7                     u1381:
  2979     06C7  2EFF               	goto	l1963
  2980     06C8                     u1380:
  2981     06C8                     l1945:
  2982     06C8  01A7               	clrf	___lwdiv@counter
  2983     06C9  0AA7               	incf	___lwdiv@counter,f
  2984     06CA  2ED6               	goto	l1951
  2985     06CB                     l1947:
  2986     06CB  3001               	movlw	1
  2987     06CC                     u1395:
  2988     06CC  1003               	clrc
  2989     06CD  0DA0               	rlf	___lwdiv@divisor,f
  2990     06CE  0DA1               	rlf	___lwdiv@divisor+1,f
  2991     06CF  3EFF               	addlw	-1
  2992     06D0  1D03               	skipz
  2993     06D1  2ECC               	goto	u1395
  2994     06D2                     l1949:
  2995     06D2  3001               	movlw	1
  2996     06D3  00A4               	movwf	??___lwdiv
  2997     06D4  0824               	movf	??___lwdiv,w
  2998     06D5  07A7               	addwf	___lwdiv@counter,f
  2999     06D6                     l1951:
  3000     06D6  1FA1               	btfss	___lwdiv@divisor+1,7
  3001     06D7  2ED9               	goto	u1401
  3002     06D8  2EDA               	goto	u1400
  3003     06D9                     u1401:
  3004     06D9  2ECB               	goto	l1947
  3005     06DA                     u1400:
  3006     06DA                     l1953:
  3007     06DA  3001               	movlw	1
  3008     06DB                     u1415:
  3009     06DB  1003               	clrc
  3010     06DC  0DA5               	rlf	___lwdiv@quotient,f
  3011     06DD  0DA6               	rlf	___lwdiv@quotient+1,f
  3012     06DE  3EFF               	addlw	-1
  3013     06DF  1D03               	skipz
  3014     06E0  2EDB               	goto	u1415
  3015     06E1  0821               	movf	___lwdiv@divisor+1,w
  3016     06E2  0223               	subwf	___lwdiv@dividend+1,w
  3017     06E3  1D03               	skipz
  3018     06E4  2EE7               	goto	u1425
  3019     06E5  0820               	movf	___lwdiv@divisor,w
  3020     06E6  0222               	subwf	___lwdiv@dividend,w
  3021     06E7                     u1425:
  3022     06E7  1C03               	skipc
  3023     06E8  2EEA               	goto	u1421
  3024     06E9  2EEB               	goto	u1420
  3025     06EA                     u1421:
  3026     06EA  2EF2               	goto	l1959
  3027     06EB                     u1420:
  3028     06EB                     l1955:
  3029     06EB  0820               	movf	___lwdiv@divisor,w
  3030     06EC  02A2               	subwf	___lwdiv@dividend,f
  3031     06ED  0821               	movf	___lwdiv@divisor+1,w
  3032     06EE  1C03               	skipc
  3033     06EF  03A3               	decf	___lwdiv@dividend+1,f
  3034     06F0  02A3               	subwf	___lwdiv@dividend+1,f
  3035     06F1                     l1957:
  3036     06F1  1425               	bsf	___lwdiv@quotient,0
  3037     06F2                     l1959:
  3038     06F2  3001               	movlw	1
  3039     06F3                     u1435:
  3040     06F3  1003               	clrc
  3041     06F4  0CA1               	rrf	___lwdiv@divisor+1,f
  3042     06F5  0CA0               	rrf	___lwdiv@divisor,f
  3043     06F6  3EFF               	addlw	-1
  3044     06F7  1D03               	skipz
  3045     06F8  2EF3               	goto	u1435
  3046     06F9                     l1961:
  3047     06F9  3001               	movlw	1
  3048     06FA  02A7               	subwf	___lwdiv@counter,f
  3049     06FB  1D03               	btfss	3,2
  3050     06FC  2EFE               	goto	u1441
  3051     06FD  2EFF               	goto	u1440
  3052     06FE                     u1441:
  3053     06FE  2EDA               	goto	l1953
  3054     06FF                     u1440:
  3055     06FF                     l1963:
  3056     06FF  0826               	movf	___lwdiv@quotient+1,w
  3057     0700  00A1               	movwf	?___lwdiv+1
  3058     0701  0825               	movf	___lwdiv@quotient,w
  3059     0702  00A0               	movwf	?___lwdiv
  3060     0703                     l744:
  3061     0703  0008               	return
  3062     0704                     __end_of___lwdiv:
  3063                           
  3064                           	psect	text9
  3065     0704                     __ptext9:	
  3066 ;; *************** function _Lcd_Write_String *****************
  3067 ;; Defined at:
  3068 ;;		line 98 in file "LCD.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  a               2    5[BANK0 ] PTR unsigned char 
  3071 ;;		 -> STR_10(3), STR_8(3), STR_6(3), STR_4(2), 
  3072 ;;		 -> buffer(20), STR_1(4), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  i               2   10[BANK0 ] int 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       2       0       0       0
  3085 ;;      Locals:         0       2       0       0       0
  3086 ;;      Temps:          0       3       0       0       0
  3087 ;;      Totals:         0       7       0       0       0
  3088 ;;Total ram usage:        7 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 5
  3091 ;; This function calls:
  3092 ;;		_Lcd_Write_Char
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;;		_Slave1
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     0704                     _Lcd_Write_String:	
  3100                           ;psect for function _Lcd_Write_String
  3101                           
  3102     0704                     l2817:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3105                           
  3106                           
  3107                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3108     0704  1283               	bcf	3,5	;RP0=0, select bank0
  3109     0705  1303               	bcf	3,6	;RP1=0, select bank0
  3110     0706  01AA               	clrf	Lcd_Write_String@i
  3111     0707  01AB               	clrf	Lcd_Write_String@i+1
  3112     0708  2F2D               	goto	l2823
  3113     0709                     l2819:
  3114                           
  3115                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3116     0709  082A               	movf	Lcd_Write_String@i,w
  3117     070A  0725               	addwf	Lcd_Write_String@a,w
  3118     070B  00A8               	movwf	??_Lcd_Write_String+1
  3119     070C  0826               	movf	Lcd_Write_String@a+1,w
  3120     070D  00A7               	movwf	??_Lcd_Write_String
  3121     070E  1803               	skipnc
  3122     070F  0AA7               	incf	??_Lcd_Write_String,f
  3123     0710  1FAA               	btfss	Lcd_Write_String@i,7
  3124     0711  2F13               	goto	u2590
  3125     0712  03A7               	decf	??_Lcd_Write_String,f
  3126     0713                     u2590:
  3127     0713  1283               	bcf	3,5	;RP0=0, select bank0
  3128     0714  1303               	bcf	3,6	;RP1=0, select bank0
  3129     0715  0827               	movf	??_Lcd_Write_String,w
  3130     0716  00A9               	movwf	??_Lcd_Write_String+2
  3131     0717  0829               	movf	??_Lcd_Write_String+2,w
  3132     0718  00FF               	movwf	btemp+1
  3133     0719  0828               	movf	??_Lcd_Write_String+1,w
  3134     071A  0084               	movwf	4
  3135     071B  120A  118A  2623  120A  118A  	fcall	stringtab
  3136     0720  120A  158A  278B  120A  118A  	fcall	_Lcd_Write_Char
  3137     0725                     l2821:
  3138     0725  3001               	movlw	1
  3139     0726  1283               	bcf	3,5	;RP0=0, select bank0
  3140     0727  1303               	bcf	3,6	;RP1=0, select bank0
  3141     0728  07AA               	addwf	Lcd_Write_String@i,f
  3142     0729  1803               	skipnc
  3143     072A  0AAB               	incf	Lcd_Write_String@i+1,f
  3144     072B  3000               	movlw	0
  3145     072C  07AB               	addwf	Lcd_Write_String@i+1,f
  3146     072D                     l2823:
  3147     072D  082A               	movf	Lcd_Write_String@i,w
  3148     072E  0725               	addwf	Lcd_Write_String@a,w
  3149     072F  00A8               	movwf	??_Lcd_Write_String+1
  3150     0730  0826               	movf	Lcd_Write_String@a+1,w
  3151     0731  00A7               	movwf	??_Lcd_Write_String
  3152     0732  1803               	skipnc
  3153     0733  0AA7               	incf	??_Lcd_Write_String,f
  3154     0734  1FAA               	btfss	Lcd_Write_String@i,7
  3155     0735  2F37               	goto	u2600
  3156     0736  03A7               	decf	??_Lcd_Write_String,f
  3157     0737                     u2600:
  3158     0737  1283               	bcf	3,5	;RP0=0, select bank0
  3159     0738  1303               	bcf	3,6	;RP1=0, select bank0
  3160     0739  0827               	movf	??_Lcd_Write_String,w
  3161     073A  00A9               	movwf	??_Lcd_Write_String+2
  3162     073B  0829               	movf	??_Lcd_Write_String+2,w
  3163     073C  00FF               	movwf	btemp+1
  3164     073D  0828               	movf	??_Lcd_Write_String+1,w
  3165     073E  0084               	movwf	4
  3166     073F  120A  118A  2623  120A  118A  	fcall	stringtab
  3167     0744  3A00               	xorlw	0
  3168     0745  1D03               	skipz
  3169     0746  2F48               	goto	u2611
  3170     0747  2F49               	goto	u2610
  3171     0748                     u2611:
  3172     0748  2F09               	goto	l2819
  3173     0749                     u2610:
  3174     0749                     l326:
  3175     0749  0008               	return
  3176     074A                     __end_of_Lcd_Write_String:
  3177                           
  3178                           	psect	text10
  3179     0F8B                     __ptext10:	
  3180 ;; *************** function _Lcd_Write_Char *****************
  3181 ;; Defined at:
  3182 ;;		line 83 in file "LCD.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  a               1    wreg     unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  a               1    4[BANK0 ] unsigned char 
  3187 ;;  y               1    3[BANK0 ] unsigned char 
  3188 ;;  temp            1    2[BANK0 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       0       0       0       0
  3199 ;;      Locals:         0       3       0       0       0
  3200 ;;      Temps:          0       1       0       0       0
  3201 ;;      Totals:         0       4       0       0       0
  3202 ;;Total ram usage:        4 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 4
  3205 ;; This function calls:
  3206 ;;		_Lcd_Port
  3207 ;; This function is called by:
  3208 ;;		_Lcd_Write_String
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212     0F8B                     _Lcd_Write_Char:	
  3213                           ;psect for function _Lcd_Write_Char
  3214                           
  3215                           
  3216                           ;incstack = 0
  3217                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3218                           ;Lcd_Write_Char@a stored from wreg
  3219     0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  3220     0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  3221     0F8D  00A4               	movwf	Lcd_Write_Char@a
  3222     0F8E                     l2737:
  3223                           
  3224                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3225     0F8E  0824               	movf	Lcd_Write_Char@a,w
  3226     0F8F  390F               	andlw	15
  3227     0F90  00A2               	movwf	Lcd_Write_Char@temp
  3228                           
  3229                           ;LCD.c: 86:     y = a & 0xF0;
  3230     0F91  0824               	movf	Lcd_Write_Char@a,w
  3231     0F92  39F0               	andlw	240
  3232     0F93  00A3               	movwf	Lcd_Write_Char@y
  3233     0F94                     l2739:
  3234                           
  3235                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  3236     0F94  1708               	bsf	8,6	;volatile
  3237     0F95                     l2741:
  3238                           
  3239                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3240     0F95  0823               	movf	Lcd_Write_Char@y,w
  3241     0F96  00A1               	movwf	??_Lcd_Write_Char
  3242     0F97  3004               	movlw	4
  3243     0F98                     u2465:
  3244     0F98  1003               	clrc
  3245     0F99  0CA1               	rrf	??_Lcd_Write_Char,f
  3246     0F9A  3EFF               	addlw	-1
  3247     0F9B  1D03               	skipz
  3248     0F9C  2F98               	goto	u2465
  3249     0F9D  0821               	movf	??_Lcd_Write_Char,w
  3250     0F9E  120A  158A  2562  120A  158A  	fcall	_Lcd_Port
  3251     0FA3                     l2743:
  3252                           
  3253                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  3254     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3255     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3256     0FA5  1788               	bsf	8,7	;volatile
  3257     0FA6                     l2745:
  3258                           
  3259                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3260     0FA6  3019               	movlw	25
  3261     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3262     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3263     0FA9  00A1               	movwf	??_Lcd_Write_Char
  3264     0FAA                     u2877:
  3265     0FAA  0BA1               	decfsz	??_Lcd_Write_Char,f
  3266     0FAB  2FAA               	goto	u2877
  3267     0FAC  2FAD               	nop2
  3268     0FAD                     l2747:
  3269                           
  3270                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  3271     0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3272     0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3273     0FAF  1388               	bcf	8,7	;volatile
  3274     0FB0                     l2749:
  3275                           
  3276                           ;LCD.c: 92:     Lcd_Port(temp);
  3277     0FB0  0822               	movf	Lcd_Write_Char@temp,w
  3278     0FB1  120A  158A  2562  120A  158A  	fcall	_Lcd_Port
  3279     0FB6                     l2751:
  3280                           
  3281                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  3282     0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3283     0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  3284     0FB8  1788               	bsf	8,7	;volatile
  3285     0FB9                     l2753:
  3286                           
  3287                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3288     0FB9  3019               	movlw	25
  3289     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3290     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  3291     0FBC  00A1               	movwf	??_Lcd_Write_Char
  3292     0FBD                     u2887:
  3293     0FBD  0BA1               	decfsz	??_Lcd_Write_Char,f
  3294     0FBE  2FBD               	goto	u2887
  3295     0FBF  2FC0               	nop2
  3296     0FC0                     l2755:
  3297                           
  3298                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  3299     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3300     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3301     0FC2  1388               	bcf	8,7	;volatile
  3302     0FC3                     l320:
  3303     0FC3  0008               	return
  3304     0FC4                     __end_of_Lcd_Write_Char:
  3305                           
  3306                           	psect	text11
  3307     0672                     __ptext11:	
  3308 ;; *************** function _Lcd_Set_Cursor *****************
  3309 ;; Defined at:
  3310 ;;		line 48 in file "LCD.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  a               1    wreg     unsigned char 
  3313 ;;  b               1    4[BANK0 ] unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  a               1    6[BANK0 ] unsigned char 
  3316 ;;  temp            1    9[BANK0 ] unsigned char 
  3317 ;;  y               1    8[BANK0 ] unsigned char 
  3318 ;;  z               1    7[BANK0 ] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       1       0       0       0
  3329 ;;      Locals:         0       4       0       0       0
  3330 ;;      Temps:          0       1       0       0       0
  3331 ;;      Totals:         0       6       0       0       0
  3332 ;;Total ram usage:        6 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 5
  3335 ;; This function calls:
  3336 ;;		_Lcd_Cmd
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;;		_Slave1
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     0672                     _Lcd_Set_Cursor:	
  3344                           ;psect for function _Lcd_Set_Cursor
  3345                           
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3349                           ;Lcd_Set_Cursor@a stored from wreg
  3350     0672  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0673  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0674  00A6               	movwf	Lcd_Set_Cursor@a
  3353     0675                     l2797:
  3354                           
  3355                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3356     0675  0326               	decf	Lcd_Set_Cursor@a,w
  3357     0676  1D03               	btfss	3,2
  3358     0677  2E79               	goto	u2551
  3359     0678  2E7A               	goto	u2550
  3360     0679                     u2551:
  3361     0679  2E99               	goto	l2807
  3362     067A                     u2550:
  3363     067A                     l2799:
  3364                           
  3365                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3366     067A  0824               	movf	Lcd_Set_Cursor@b,w
  3367     067B  3E7F               	addlw	127
  3368     067C  00A9               	movwf	Lcd_Set_Cursor@temp
  3369                           
  3370                           ;LCD.c: 52:         z = temp >> 4;
  3371     067D  0829               	movf	Lcd_Set_Cursor@temp,w
  3372     067E  00A5               	movwf	??_Lcd_Set_Cursor
  3373     067F  3004               	movlw	4
  3374     0680                     u2565:
  3375     0680  1003               	clrc
  3376     0681  0CA5               	rrf	??_Lcd_Set_Cursor,f
  3377     0682  3EFF               	addlw	-1
  3378     0683  1D03               	skipz
  3379     0684  2E80               	goto	u2565
  3380     0685  0825               	movf	??_Lcd_Set_Cursor,w
  3381     0686  00A7               	movwf	Lcd_Set_Cursor@z
  3382     0687                     l2801:
  3383                           
  3384                           ;LCD.c: 53:         y = temp & 0x0F;
  3385     0687  0829               	movf	Lcd_Set_Cursor@temp,w
  3386     0688  390F               	andlw	15
  3387     0689  00A8               	movwf	Lcd_Set_Cursor@y
  3388     068A                     l2803:
  3389                           
  3390                           ;LCD.c: 54:         Lcd_Cmd(z);
  3391     068A  0827               	movf	Lcd_Set_Cursor@z,w
  3392     068B  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  3393     0690                     l2805:
  3394                           
  3395                           ;LCD.c: 55:         Lcd_Cmd(y);
  3396     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3397     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3398     0692  0828               	movf	Lcd_Set_Cursor@y,w
  3399     0693  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  3400                           
  3401                           ;LCD.c: 56:     } else if (a == 2) {
  3402     0698  2EBD               	goto	l314
  3403     0699                     l2807:
  3404     0699  3002               	movlw	2
  3405     069A  0626               	xorwf	Lcd_Set_Cursor@a,w
  3406     069B  1D03               	btfss	3,2
  3407     069C  2E9E               	goto	u2571
  3408     069D  2E9F               	goto	u2570
  3409     069E                     u2571:
  3410     069E  2EBD               	goto	l314
  3411     069F                     u2570:
  3412     069F                     l2809:
  3413                           
  3414                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3415     069F  0824               	movf	Lcd_Set_Cursor@b,w
  3416     06A0  3EBF               	addlw	191
  3417     06A1  00A9               	movwf	Lcd_Set_Cursor@temp
  3418                           
  3419                           ;LCD.c: 58:         z = temp >> 4;
  3420     06A2  0829               	movf	Lcd_Set_Cursor@temp,w
  3421     06A3  00A5               	movwf	??_Lcd_Set_Cursor
  3422     06A4  3004               	movlw	4
  3423     06A5                     u2585:
  3424     06A5  1003               	clrc
  3425     06A6  0CA5               	rrf	??_Lcd_Set_Cursor,f
  3426     06A7  3EFF               	addlw	-1
  3427     06A8  1D03               	skipz
  3428     06A9  2EA5               	goto	u2585
  3429     06AA  0825               	movf	??_Lcd_Set_Cursor,w
  3430     06AB  00A7               	movwf	Lcd_Set_Cursor@z
  3431     06AC                     l2811:
  3432                           
  3433                           ;LCD.c: 59:         y = temp & 0x0F;
  3434     06AC  0829               	movf	Lcd_Set_Cursor@temp,w
  3435     06AD  390F               	andlw	15
  3436     06AE  00A8               	movwf	Lcd_Set_Cursor@y
  3437     06AF                     l2813:
  3438                           
  3439                           ;LCD.c: 60:         Lcd_Cmd(z);
  3440     06AF  0827               	movf	Lcd_Set_Cursor@z,w
  3441     06B0  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  3442     06B5                     l2815:
  3443                           
  3444                           ;LCD.c: 61:         Lcd_Cmd(y);
  3445     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3446     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3447     06B7  0828               	movf	Lcd_Set_Cursor@y,w
  3448     06B8  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  3449     06BD                     l314:
  3450     06BD  0008               	return
  3451     06BE                     __end_of_Lcd_Set_Cursor:
  3452                           
  3453                           	psect	text12
  3454     0ED3                     __ptext12:	
  3455 ;; *************** function _Set_year *****************
  3456 ;; Defined at:
  3457 ;;		line 352 in file "main_master.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  year            1    wreg     unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  year            1    2[BANK0 ] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       1       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       1       0       0       0
  3475 ;;Total ram usage:        1 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 4
  3478 ;; This function calls:
  3479 ;;		_Dec_to_Bcd
  3480 ;;		_I2C_Start
  3481 ;;		_I2C_Stop
  3482 ;;		_I2C_Write
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488     0ED3                     _Set_year:	
  3489                           ;psect for function _Set_year
  3490                           
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  3494                           ;Set_year@year stored from wreg
  3495     0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3496     0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3497     0ED5  00A2               	movwf	Set_year@year
  3498     0ED6                     l3089:
  3499                           
  3500                           ;main_master.c: 353:     I2C_Start();
  3501     0ED6  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3502     0EDB                     l3091:
  3503                           
  3504                           ;main_master.c: 354:     I2C_Write(0xD0);
  3505     0EDB  30D0               	movlw	208
  3506     0EDC  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3507     0EE1                     l3093:
  3508                           
  3509                           ;main_master.c: 355:     I2C_Write(0x06);
  3510     0EE1  3006               	movlw	6
  3511     0EE2  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3512     0EE7                     l3095:
  3513                           
  3514                           ;main_master.c: 356:     I2C_Write(Dec_to_Bcd(year));
  3515     0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  3516     0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  3517     0EE9  0822               	movf	Set_year@year,w
  3518     0EEA  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3519     0EEF  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3520     0EF4                     l3097:
  3521                           
  3522                           ;main_master.c: 357:     I2C_Stop();
  3523     0EF4  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3524     0EF9                     l271:
  3525     0EF9  0008               	return
  3526     0EFA                     __end_of_Set_year:
  3527                           
  3528                           	psect	text13
  3529     0EAC                     __ptext13:	
  3530 ;; *************** function _Set_sec *****************
  3531 ;; Defined at:
  3532 ;;		line 304 in file "main_master.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  sec             1    wreg     unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  sec             1    2[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       0       0       0       0
  3547 ;;      Locals:         0       1       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         0       1       0       0       0
  3550 ;;Total ram usage:        1 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 4
  3553 ;; This function calls:
  3554 ;;		_Dec_to_Bcd
  3555 ;;		_I2C_Start
  3556 ;;		_I2C_Stop
  3557 ;;		_I2C_Write
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     0EAC                     _Set_sec:	
  3564                           ;psect for function _Set_sec
  3565                           
  3566                           
  3567                           ;incstack = 0
  3568                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  3569                           ;Set_sec@sec stored from wreg
  3570     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3571     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3572     0EAE  00A2               	movwf	Set_sec@sec
  3573     0EAF                     l3039:
  3574                           
  3575                           ;main_master.c: 305:     I2C_Start();
  3576     0EAF  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3577     0EB4                     l3041:
  3578                           
  3579                           ;main_master.c: 306:     I2C_Write(0xD0);
  3580     0EB4  30D0               	movlw	208
  3581     0EB5  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3582     0EBA                     l3043:
  3583                           
  3584                           ;main_master.c: 307:     I2C_Write(0x00);
  3585     0EBA  3000               	movlw	0
  3586     0EBB  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3587     0EC0                     l3045:
  3588                           
  3589                           ;main_master.c: 308:     I2C_Write(Dec_to_Bcd(sec));
  3590     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3591     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  3592     0EC2  0822               	movf	Set_sec@sec,w
  3593     0EC3  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3594     0EC8  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3595     0ECD                     l3047:
  3596                           
  3597                           ;main_master.c: 309:     I2C_Stop();
  3598     0ECD  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3599     0ED2                     l253:
  3600     0ED2  0008               	return
  3601     0ED3                     __end_of_Set_sec:
  3602                           
  3603                           	psect	text14
  3604     0E85                     __ptext14:	
  3605 ;; *************** function _Set_month *****************
  3606 ;; Defined at:
  3607 ;;		line 344 in file "main_master.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  month           1    wreg     unsigned char 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  month           1    2[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       0       0       0       0
  3622 ;;      Locals:         0       1       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       1       0       0       0
  3625 ;;Total ram usage:        1 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 4
  3628 ;; This function calls:
  3629 ;;		_Dec_to_Bcd
  3630 ;;		_I2C_Start
  3631 ;;		_I2C_Stop
  3632 ;;		_I2C_Write
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638     0E85                     _Set_month:	
  3639                           ;psect for function _Set_month
  3640                           
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  3644                           ;Set_month@month stored from wreg
  3645     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3646     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3647     0E87  00A2               	movwf	Set_month@month
  3648     0E88                     l3079:
  3649                           
  3650                           ;main_master.c: 345:     I2C_Start();
  3651     0E88  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3652     0E8D                     l3081:
  3653                           
  3654                           ;main_master.c: 346:     I2C_Write(0xD0);
  3655     0E8D  30D0               	movlw	208
  3656     0E8E  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3657     0E93                     l3083:
  3658                           
  3659                           ;main_master.c: 347:     I2C_Write(0x05);
  3660     0E93  3005               	movlw	5
  3661     0E94  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3662     0E99                     l3085:
  3663                           
  3664                           ;main_master.c: 348:     I2C_Write(Dec_to_Bcd(month));
  3665     0E99  1283               	bcf	3,5	;RP0=0, select bank0
  3666     0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  3667     0E9B  0822               	movf	Set_month@month,w
  3668     0E9C  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3669     0EA1  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3670     0EA6                     l3087:
  3671                           
  3672                           ;main_master.c: 349:     I2C_Stop();
  3673     0EA6  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3674     0EAB                     l268:
  3675     0EAB  0008               	return
  3676     0EAC                     __end_of_Set_month:
  3677                           
  3678                           	psect	text15
  3679     0E5E                     __ptext15:	
  3680 ;; *************** function _Set_hour *****************
  3681 ;; Defined at:
  3682 ;;		line 320 in file "main_master.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  hour            1    wreg     unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  hour            1    2[BANK0 ] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0, pclath, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3696 ;;      Params:         0       0       0       0       0
  3697 ;;      Locals:         0       1       0       0       0
  3698 ;;      Temps:          0       0       0       0       0
  3699 ;;      Totals:         0       1       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 4
  3703 ;; This function calls:
  3704 ;;		_Dec_to_Bcd
  3705 ;;		_I2C_Start
  3706 ;;		_I2C_Stop
  3707 ;;		_I2C_Write
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     0E5E                     _Set_hour:	
  3714                           ;psect for function _Set_hour
  3715                           
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  3719                           ;Set_hour@hour stored from wreg
  3720     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3721     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3722     0E60  00A2               	movwf	Set_hour@hour
  3723     0E61                     l3059:
  3724                           
  3725                           ;main_master.c: 321:     I2C_Start();
  3726     0E61  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3727     0E66                     l3061:
  3728                           
  3729                           ;main_master.c: 322:     I2C_Write(0xD0);
  3730     0E66  30D0               	movlw	208
  3731     0E67  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3732     0E6C                     l3063:
  3733                           
  3734                           ;main_master.c: 323:     I2C_Write(0x02);
  3735     0E6C  3002               	movlw	2
  3736     0E6D  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3737     0E72                     l3065:
  3738                           
  3739                           ;main_master.c: 324:     I2C_Write(Dec_to_Bcd(hour));
  3740     0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0E74  0822               	movf	Set_hour@hour,w
  3743     0E75  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3744     0E7A  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3745     0E7F                     l3067:
  3746                           
  3747                           ;main_master.c: 325:     I2C_Stop();
  3748     0E7F  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3749     0E84                     l259:
  3750     0E84  0008               	return
  3751     0E85                     __end_of_Set_hour:
  3752                           
  3753                           	psect	text16
  3754     0E37                     __ptext16:	
  3755 ;; *************** function _Set_day_week *****************
  3756 ;; Defined at:
  3757 ;;		line 328 in file "main_master.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  day_week        1    wreg     unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  day_week        1    2[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       0       0       0       0
  3772 ;;      Locals:         0       1       0       0       0
  3773 ;;      Temps:          0       0       0       0       0
  3774 ;;      Totals:         0       1       0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 4
  3778 ;; This function calls:
  3779 ;;		_Dec_to_Bcd
  3780 ;;		_I2C_Start
  3781 ;;		_I2C_Stop
  3782 ;;		_I2C_Write
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788     0E37                     _Set_day_week:	
  3789                           ;psect for function _Set_day_week
  3790                           
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _Set_day_week: [wreg+status,2+status,0+pclath+cstack]
  3794                           ;Set_day_week@day_week stored from wreg
  3795     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  3796     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  3797     0E39  00A2               	movwf	Set_day_week@day_week
  3798     0E3A                     l3069:
  3799                           
  3800                           ;main_master.c: 329:     I2C_Start();
  3801     0E3A  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3802     0E3F                     l3071:
  3803                           
  3804                           ;main_master.c: 330:     I2C_Write(0xD0);
  3805     0E3F  30D0               	movlw	208
  3806     0E40  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3807     0E45                     l3073:
  3808                           
  3809                           ;main_master.c: 331:     I2C_Write(0x03);
  3810     0E45  3003               	movlw	3
  3811     0E46  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3812     0E4B                     l3075:
  3813                           
  3814                           ;main_master.c: 332:     I2C_Write(Dec_to_Bcd(day_week));
  3815     0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  3816     0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  3817     0E4D  0822               	movf	Set_day_week@day_week,w
  3818     0E4E  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3819     0E53  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3820     0E58                     l3077:
  3821                           
  3822                           ;main_master.c: 333:     I2C_Stop();
  3823     0E58  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3824     0E5D                     l262:
  3825     0E5D  0008               	return
  3826     0E5E                     __end_of_Set_day_week:
  3827                           
  3828                           	psect	text17
  3829     0E10                     __ptext17:	
  3830 ;; *************** function _Set_day *****************
  3831 ;; Defined at:
  3832 ;;		line 336 in file "main_master.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  day             1    wreg     unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  day             1    2[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       0       0       0       0
  3847 ;;      Locals:         0       1       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       1       0       0       0
  3850 ;;Total ram usage:        1 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 4
  3853 ;; This function calls:
  3854 ;;		_Dec_to_Bcd
  3855 ;;		_I2C_Start
  3856 ;;		_I2C_Stop
  3857 ;;		_I2C_Write
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863     0E10                     _Set_day:	
  3864                           ;psect for function _Set_day
  3865                           
  3866                           
  3867                           ;incstack = 0
  3868                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  3869                           ;Set_day@day stored from wreg
  3870     0E10  1283               	bcf	3,5	;RP0=0, select bank0
  3871     0E11  1303               	bcf	3,6	;RP1=0, select bank0
  3872     0E12  00A2               	movwf	Set_day@day
  3873     0E13                     l3049:
  3874                           
  3875                           ;main_master.c: 337:     I2C_Start();
  3876     0E13  120A  158A  2482  120A  158A  	fcall	_I2C_Start
  3877     0E18                     l3051:
  3878                           
  3879                           ;main_master.c: 338:     I2C_Write(0xD0);
  3880     0E18  30D0               	movlw	208
  3881     0E19  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3882     0E1E                     l3053:
  3883                           
  3884                           ;main_master.c: 339:     I2C_Write(0x04);
  3885     0E1E  3004               	movlw	4
  3886     0E1F  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3887     0E24                     l3055:
  3888                           
  3889                           ;main_master.c: 340:     I2C_Write(Dec_to_Bcd(day));
  3890     0E24  1283               	bcf	3,5	;RP0=0, select bank0
  3891     0E25  1303               	bcf	3,6	;RP1=0, select bank0
  3892     0E26  0822               	movf	Set_day@day,w
  3893     0E27  120A  158A  24FD  120A  158A  	fcall	_Dec_to_Bcd
  3894     0E2C  120A  158A  24C7  120A  158A  	fcall	_I2C_Write
  3895     0E31                     l3057:
  3896                           
  3897                           ;main_master.c: 341:     I2C_Stop();
  3898     0E31  120A  158A  248C  120A  158A  	fcall	_I2C_Stop
  3899     0E36                     l265:
  3900     0E36  0008               	return
  3901     0E37                     __end_of_Set_day:
  3902                           
  3903                           	psect	text18
  3904     0CFD                     __ptext18:	
  3905 ;; *************** function _Dec_to_Bcd *****************
  3906 ;; Defined at:
  3907 ;;		line 360 in file "main_master.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  dec_number      1    wreg     unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  dec_number      1    0[BANK0 ] unsigned char 
  3912 ;;  bcd_number      1    1[BANK0 ] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       0       0       0       0
  3923 ;;      Locals:         0       2       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       2       0       0       0
  3926 ;;Total ram usage:        2 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 3
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_Set_sec
  3933 ;;		_Set_hour
  3934 ;;		_Set_day_week
  3935 ;;		_Set_day
  3936 ;;		_Set_month
  3937 ;;		_Set_year
  3938 ;;		_Set_min
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942     0CFD                     _Dec_to_Bcd:	
  3943                           ;psect for function _Dec_to_Bcd
  3944                           
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  3948                           ;Dec_to_Bcd@dec_number stored from wreg
  3949     0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3950     0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3951     0CFF  00A0               	movwf	Dec_to_Bcd@dec_number
  3952     0D00                     l2971:
  3953                           
  3954                           ;main_master.c: 361:     uint8_t bcd_number;;main_master.c: 362:     bcd_number = 0;
  3955     0D00  01A1               	clrf	Dec_to_Bcd@bcd_number
  3956     0D01                     l2973:
  3957                           
  3958                           ;main_master.c: 364:         if (dec_number >= 10){
  3959     0D01  300A               	movlw	10
  3960     0D02  0220               	subwf	Dec_to_Bcd@dec_number,w
  3961     0D03  1C03               	skipc
  3962     0D04  2D06               	goto	u2811
  3963     0D05  2D07               	goto	u2810
  3964     0D06                     u2811:
  3965     0D06  2D0E               	goto	l2977
  3966     0D07                     u2810:
  3967     0D07                     l2975:
  3968                           
  3969                           ;main_master.c: 365:             dec_number = dec_number - 10;
  3970     0D07  0820               	movf	Dec_to_Bcd@dec_number,w
  3971     0D08  3EF6               	addlw	246
  3972     0D09  00A0               	movwf	Dec_to_Bcd@dec_number
  3973                           
  3974                           ;main_master.c: 366:             bcd_number = bcd_number + 0b00010000;
  3975     0D0A  0821               	movf	Dec_to_Bcd@bcd_number,w
  3976     0D0B  3E10               	addlw	16
  3977     0D0C  00A1               	movwf	Dec_to_Bcd@bcd_number
  3978                           
  3979                           ;main_master.c: 367:         }
  3980     0D0D  2D01               	goto	l2973
  3981     0D0E                     l2977:
  3982                           
  3983                           ;main_master.c: 369:             bcd_number = bcd_number + dec_number;
  3984     0D0E  0820               	movf	Dec_to_Bcd@dec_number,w
  3985     0D0F  0721               	addwf	Dec_to_Bcd@bcd_number,w
  3986     0D10  00A1               	movwf	Dec_to_Bcd@bcd_number
  3987     0D11                     l2979:	
  3988                           ;main_master.c: 370:             break;
  3989                           
  3990                           
  3991                           ;main_master.c: 373:     return bcd_number;
  3992     0D11  0821               	movf	Dec_to_Bcd@bcd_number,w
  3993     0D12                     l279:
  3994     0D12  0008               	return
  3995     0D13                     __end_of_Dec_to_Bcd:
  3996                           
  3997                           	psect	text19
  3998     0F56                     __ptext19:	
  3999 ;; *************** function _Read_Time *****************
  4000 ;; Defined at:
  4001 ;;		line 292 in file "main_master.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  s               1    wreg     PTR unsigned char 
  4004 ;;		 -> segundo(1), 
  4005 ;;  m               1    8[BANK0 ] PTR unsigned char 
  4006 ;;		 -> minuto(1), 
  4007 ;;  h               1    9[BANK0 ] PTR unsigned char 
  4008 ;;		 -> hora(1), 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  s               1   10[BANK0 ] PTR unsigned char 
  4011 ;;		 -> segundo(1), 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4021 ;;      Params:         0       2       0       0       0
  4022 ;;      Locals:         0       1       0       0       0
  4023 ;;      Temps:          0       0       0       0       0
  4024 ;;      Totals:         0       3       0       0       0
  4025 ;;Total ram usage:        3 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 5
  4028 ;; This function calls:
  4029 ;;		_Bcd_to_Dec
  4030 ;;		_Read
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036     0F56                     _Read_Time:	
  4037                           ;psect for function _Read_Time
  4038                           
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4042                           ;Read_Time@s stored from wreg
  4043     0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4044     0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4045     0F58  00AA               	movwf	Read_Time@s
  4046     0F59                     l3115:
  4047                           
  4048                           ;main_master.c: 293:     *s = Bcd_to_Dec(Read(0x00));
  4049     0F59  082A               	movf	Read_Time@s,w
  4050     0F5A  0084               	movwf	4
  4051     0F5B  3000               	movlw	0
  4052     0F5C  120A  118A  278E  120A  158A  	fcall	_Read
  4053     0F61  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4054     0F66  1383               	bcf	3,7	;select IRP bank0
  4055     0F67  0080               	movwf	0
  4056                           
  4057                           ;main_master.c: 294:     *m = Bcd_to_Dec(Read(0x01));
  4058     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4059     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4060     0F6A  0828               	movf	Read_Time@m,w
  4061     0F6B  0084               	movwf	4
  4062     0F6C  3001               	movlw	1
  4063     0F6D  120A  118A  278E  120A  158A  	fcall	_Read
  4064     0F72  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4065     0F77  1383               	bcf	3,7	;select IRP bank0
  4066     0F78  0080               	movwf	0
  4067                           
  4068                           ;main_master.c: 295:     *h = Bcd_to_Dec(Read(0x02));
  4069     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  4070     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4071     0F7B  0829               	movf	Read_Time@h,w
  4072     0F7C  0084               	movwf	4
  4073     0F7D  3002               	movlw	2
  4074     0F7E  120A  118A  278E  120A  158A  	fcall	_Read
  4075     0F83  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4076     0F88  1383               	bcf	3,7	;select IRP bank0
  4077     0F89  0080               	movwf	0
  4078     0F8A                     l247:
  4079     0F8A  0008               	return
  4080     0F8B                     __end_of_Read_Time:
  4081                           
  4082                           	psect	text20
  4083     0F21                     __ptext20:	
  4084 ;; *************** function _Read_Fecha *****************
  4085 ;; Defined at:
  4086 ;;		line 298 in file "main_master.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  d               1    wreg     PTR unsigned char 
  4089 ;;		 -> dia(1), 
  4090 ;;  mo              1    8[BANK0 ] PTR unsigned char 
  4091 ;;		 -> mes(1), 
  4092 ;;  y               1    9[BANK0 ] PTR unsigned char 
  4093 ;;		 -> ano(1), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  d               1   10[BANK0 ] PTR unsigned char 
  4096 ;;		 -> dia(1), 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       2       0       0       0
  4107 ;;      Locals:         0       1       0       0       0
  4108 ;;      Temps:          0       0       0       0       0
  4109 ;;      Totals:         0       3       0       0       0
  4110 ;;Total ram usage:        3 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 5
  4113 ;; This function calls:
  4114 ;;		_Bcd_to_Dec
  4115 ;;		_Read
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121     0F21                     _Read_Fecha:	
  4122                           ;psect for function _Read_Fecha
  4123                           
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _Read_Fecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4127                           ;Read_Fecha@d stored from wreg
  4128     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4129     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4130     0F23  00AA               	movwf	Read_Fecha@d
  4131     0F24                     l3117:
  4132                           
  4133                           ;main_master.c: 299:     *d = Bcd_to_Dec(Read(0x04));
  4134     0F24  082A               	movf	Read_Fecha@d,w
  4135     0F25  0084               	movwf	4
  4136     0F26  3004               	movlw	4
  4137     0F27  120A  118A  278E  120A  158A  	fcall	_Read
  4138     0F2C  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4139     0F31  1383               	bcf	3,7	;select IRP bank0
  4140     0F32  0080               	movwf	0
  4141                           
  4142                           ;main_master.c: 300:     *mo = Bcd_to_Dec(Read(0x05));
  4143     0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4144     0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4145     0F35  0828               	movf	Read_Fecha@mo,w
  4146     0F36  0084               	movwf	4
  4147     0F37  3005               	movlw	5
  4148     0F38  120A  118A  278E  120A  158A  	fcall	_Read
  4149     0F3D  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4150     0F42  1383               	bcf	3,7	;select IRP bank0
  4151     0F43  0080               	movwf	0
  4152                           
  4153                           ;main_master.c: 301:     *y = Bcd_to_Dec(Read(0x06));
  4154     0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4155     0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4156     0F46  0829               	movf	Read_Fecha@y,w
  4157     0F47  0084               	movwf	4
  4158     0F48  3006               	movlw	6
  4159     0F49  120A  118A  278E  120A  158A  	fcall	_Read
  4160     0F4E  120A  158A  2546  120A  158A  	fcall	_Bcd_to_Dec
  4161     0F53  1383               	bcf	3,7	;select IRP bank0
  4162     0F54  0080               	movwf	0
  4163     0F55                     l250:
  4164     0F55  0008               	return
  4165     0F56                     __end_of_Read_Fecha:
  4166                           
  4167                           	psect	text21
  4168     078E                     __ptext21:	
  4169 ;; *************** function _Read *****************
  4170 ;; Defined at:
  4171 ;;		line 278 in file "main_master.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  address         1    wreg     unsigned char 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  address         1    2[BANK0 ] unsigned char 
  4176 ;;  dato            1    3[BANK0 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      unsigned char 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       2       0       0       0
  4188 ;;      Temps:          0       1       0       0       0
  4189 ;;      Totals:         0       3       0       0       0
  4190 ;;Total ram usage:        3 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 4
  4193 ;; This function calls:
  4194 ;;		_I2C_Nack
  4195 ;;		_I2C_Read
  4196 ;;		_I2C_Restart
  4197 ;;		_I2C_Start
  4198 ;;		_I2C_Stop
  4199 ;;		_I2C_Write
  4200 ;; This function is called by:
  4201 ;;		_Read_Time
  4202 ;;		_Read_Fecha
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206     078E                     _Read:	
  4207                           ;psect for function _Read
  4208                           
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  4212                           ;Read@address stored from wreg
  4213     078E  1283               	bcf	3,5	;RP0=0, select bank0
  4214     078F  1303               	bcf	3,6	;RP1=0, select bank0
  4215     0790  00A2               	movwf	Read@address
  4216     0791                     l2947:
  4217     0791                     l2949:
  4218                           
  4219                           ;main_master.c: 280:     I2C_Start();
  4220     0791  120A  158A  2482  120A  118A  	fcall	_I2C_Start
  4221     0796                     l2951:
  4222                           
  4223                           ;main_master.c: 281:     I2C_Write(0xD0);
  4224     0796  30D0               	movlw	208
  4225     0797  120A  158A  24C7  120A  118A  	fcall	_I2C_Write
  4226     079C                     l2953:
  4227                           
  4228                           ;main_master.c: 282:     I2C_Write(address);
  4229     079C  1283               	bcf	3,5	;RP0=0, select bank0
  4230     079D  1303               	bcf	3,6	;RP1=0, select bank0
  4231     079E  0822               	movf	Read@address,w
  4232     079F  120A  158A  24C7  120A  118A  	fcall	_I2C_Write
  4233     07A4                     l2955:
  4234                           
  4235                           ;main_master.c: 283:     I2C_Restart();
  4236     07A4  120A  158A  2478  120A  118A  	fcall	_I2C_Restart
  4237     07A9                     l2957:
  4238                           
  4239                           ;main_master.c: 284:     I2C_Write(0xD1);
  4240     07A9  30D1               	movlw	209
  4241     07AA  120A  158A  24C7  120A  118A  	fcall	_I2C_Write
  4242     07AF                     l2959:
  4243                           
  4244                           ;main_master.c: 285:     dato = I2C_Read();
  4245     07AF  120A  158A  24A1  120A  118A  	fcall	_I2C_Read
  4246     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  4247     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  4248     07B6  00A3               	movwf	Read@dato
  4249     07B7                     l2961:
  4250                           
  4251                           ;main_master.c: 286:     I2C_Nack();
  4252     07B7  120A  158A  2496  120A  118A  	fcall	_I2C_Nack
  4253     07BC                     l2963:
  4254                           
  4255                           ;main_master.c: 287:     I2C_Stop();
  4256     07BC  120A  158A  248C  120A  118A  	fcall	_I2C_Stop
  4257     07C1                     l2965:
  4258                           
  4259                           ;main_master.c: 288:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  4260     07C1  3005               	movlw	5
  4261     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4262     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4263     07C4  00A1               	movwf	??_Read
  4264     07C5                     u2897:
  4265     07C5  0BA1               	decfsz	??_Read,f
  4266     07C6  2FC5               	goto	u2897
  4267     07C7  2FC8               	nop2
  4268     07C8                     l2967:
  4269                           
  4270                           ;main_master.c: 289:     return dato;
  4271     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4272     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4273     07CA  0823               	movf	Read@dato,w
  4274     07CB                     l244:
  4275     07CB  0008               	return
  4276     07CC                     __end_of_Read:
  4277                           
  4278                           	psect	text22
  4279     0CC7                     __ptext22:	
  4280 ;; *************** function _I2C_Write *****************
  4281 ;; Defined at:
  4282 ;;		line 64 in file "i2c.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  data            1    wreg     unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  data            1    0[BANK0 ] unsigned char 
  4287 ;;  b_ok            2    0        short 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  2   54[None  ] short 
  4290 ;; Registers used:
  4291 ;;		wreg
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4297 ;;      Params:         0       0       0       0       0
  4298 ;;      Locals:         0       1       0       0       0
  4299 ;;      Temps:          0       0       0       0       0
  4300 ;;      Totals:         0       1       0       0       0
  4301 ;;Total ram usage:        1 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 3
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_Read
  4308 ;;		_Set_sec
  4309 ;;		_Set_hour
  4310 ;;		_Set_day_week
  4311 ;;		_Set_day
  4312 ;;		_Set_month
  4313 ;;		_Set_year
  4314 ;;		_Slave1
  4315 ;;		_Set_min
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319     0CC7                     _I2C_Write:	
  4320                           ;psect for function _I2C_Write
  4321                           
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _I2C_Write: [wreg]
  4325                           ;I2C_Write@data stored from wreg
  4326     0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  4327     0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  4328     0CC9  00A0               	movwf	I2C_Write@data
  4329     0CCA                     l2715:
  4330                           
  4331                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  4332     0CCA  0820               	movf	I2C_Write@data,w
  4333     0CCB  0093               	movwf	19	;volatile
  4334     0CCC                     l55:	
  4335                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  4336                           
  4337     0CCC  1D8C               	btfss	12,3	;volatile
  4338     0CCD  2CCF               	goto	u2441
  4339     0CCE  2CD0               	goto	u2440
  4340     0CCF                     u2441:
  4341     0CCF  2CCC               	goto	l55
  4342     0CD0                     u2440:
  4343     0CD0                     l57:
  4344                           
  4345                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  4346     0CD0  118C               	bcf	12,3	;volatile
  4347     0CD1                     l2717:
  4348     0CD1  1683               	bsf	3,5	;RP0=1, select bank1
  4349     0CD2  1303               	bcf	3,6	;RP1=0, select bank1
  4350     0CD3  0811               	movf	17,w	;volatile
  4351     0CD4                     l58:
  4352     0CD4  0008               	return
  4353     0CD5                     __end_of_I2C_Write:
  4354                           
  4355                           	psect	text23
  4356     0C8C                     __ptext23:	
  4357 ;; *************** function _I2C_Stop *****************
  4358 ;; Defined at:
  4359 ;;		line 34 in file "i2c.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		None
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4373 ;;      Params:         0       0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0
  4376 ;;      Totals:         0       0       0       0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 3
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_Read
  4384 ;;		_Set_sec
  4385 ;;		_Set_hour
  4386 ;;		_Set_day_week
  4387 ;;		_Set_day
  4388 ;;		_Set_month
  4389 ;;		_Set_year
  4390 ;;		_Slave1
  4391 ;;		_Set_min
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     0C8C                     _I2C_Stop:	
  4396                           ;psect for function _I2C_Stop
  4397                           
  4398     0C8C                     l2709:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _I2C_Stop: []
  4401                           
  4402                           
  4403                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  4404     0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  4405     0C8D  1303               	bcf	3,6	;RP1=0, select bank1
  4406     0C8E  1511               	bsf	17,2	;volatile
  4407     0C8F                     l31:	
  4408                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  4409                           
  4410     0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  4411     0C90  1D8C               	btfss	12,3	;volatile
  4412     0C91  2C93               	goto	u2411
  4413     0C92  2C94               	goto	u2410
  4414     0C93                     u2411:
  4415     0C93  2C8F               	goto	l31
  4416     0C94                     u2410:
  4417     0C94                     l33:
  4418                           
  4419                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  4420     0C94  118C               	bcf	12,3	;volatile
  4421     0C95                     l34:
  4422     0C95  0008               	return
  4423     0C96                     __end_of_I2C_Stop:
  4424                           
  4425                           	psect	text24
  4426     0C82                     __ptext24:	
  4427 ;; *************** function _I2C_Start *****************
  4428 ;; Defined at:
  4429 ;;		line 27 in file "i2c.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		None
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4443 ;;      Params:         0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 3
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_Read
  4454 ;;		_Set_sec
  4455 ;;		_Set_hour
  4456 ;;		_Set_day_week
  4457 ;;		_Set_day
  4458 ;;		_Set_month
  4459 ;;		_Set_year
  4460 ;;		_Slave1
  4461 ;;		_Set_min
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465     0C82                     _I2C_Start:	
  4466                           ;psect for function _I2C_Start
  4467                           
  4468     0C82                     l2707:	
  4469                           ;incstack = 0
  4470                           ; Regs used in _I2C_Start: []
  4471                           
  4472                           
  4473                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  4474     0C82  1683               	bsf	3,5	;RP0=1, select bank1
  4475     0C83  1303               	bcf	3,6	;RP1=0, select bank1
  4476     0C84  1411               	bsf	17,0	;volatile
  4477     0C85                     l25:	
  4478                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  4479                           
  4480     0C85  1283               	bcf	3,5	;RP0=0, select bank0
  4481     0C86  1D8C               	btfss	12,3	;volatile
  4482     0C87  2C89               	goto	u2401
  4483     0C88  2C8A               	goto	u2400
  4484     0C89                     u2401:
  4485     0C89  2C85               	goto	l25
  4486     0C8A                     u2400:
  4487     0C8A                     l27:
  4488                           
  4489                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  4490     0C8A  118C               	bcf	12,3	;volatile
  4491     0C8B                     l28:
  4492     0C8B  0008               	return
  4493     0C8C                     __end_of_I2C_Start:
  4494                           
  4495                           	psect	text25
  4496     0C78                     __ptext25:	
  4497 ;; *************** function _I2C_Restart *****************
  4498 ;; Defined at:
  4499 ;;		line 41 in file "i2c.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		None
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4513 ;;      Params:         0       0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0
  4516 ;;      Totals:         0       0       0       0       0
  4517 ;;Total ram usage:        0 bytes
  4518 ;; Hardware stack levels used: 1
  4519 ;; Hardware stack levels required when called: 3
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_Read
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527     0C78                     _I2C_Restart:	
  4528                           ;psect for function _I2C_Restart
  4529                           
  4530     0C78                     l2711:	
  4531                           ;incstack = 0
  4532                           ; Regs used in _I2C_Restart: []
  4533                           
  4534                           
  4535                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  4536     0C78  1683               	bsf	3,5	;RP0=1, select bank1
  4537     0C79  1303               	bcf	3,6	;RP1=0, select bank1
  4538     0C7A  1491               	bsf	17,1	;volatile
  4539     0C7B                     l37:	
  4540                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
  4541                           
  4542     0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  4543     0C7C  1D8C               	btfss	12,3	;volatile
  4544     0C7D  2C7F               	goto	u2421
  4545     0C7E  2C80               	goto	u2420
  4546     0C7F                     u2421:
  4547     0C7F  2C7B               	goto	l37
  4548     0C80                     u2420:
  4549     0C80                     l39:
  4550                           
  4551                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  4552     0C80  118C               	bcf	12,3	;volatile
  4553     0C81                     l40:
  4554     0C81  0008               	return
  4555     0C82                     __end_of_I2C_Restart:
  4556                           
  4557                           	psect	text26
  4558     0CA1                     __ptext26:	
  4559 ;; *************** function _I2C_Read *****************
  4560 ;; Defined at:
  4561 ;;		line 73 in file "i2c.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      unsigned char 
  4568 ;; Registers used:
  4569 ;;		wreg
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0
  4578 ;;      Totals:         0       0       0       0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 3
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_Read
  4586 ;;		_Slave1
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590     0CA1                     _I2C_Read:	
  4591                           ;psect for function _I2C_Read
  4592                           
  4593     0CA1                     l2721:	
  4594                           ;incstack = 0
  4595                           ; Regs used in _I2C_Read: [wreg]
  4596                           
  4597                           
  4598                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  4599     0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  4600     0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  4601     0CA3  1591               	bsf	17,3	;volatile
  4602     0CA4                     l61:	
  4603                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  4604                           
  4605     0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4606     0CA5  1D8C               	btfss	12,3	;volatile
  4607     0CA6  2CA8               	goto	u2451
  4608     0CA7  2CA9               	goto	u2450
  4609     0CA8                     u2451:
  4610     0CA8  2CA4               	goto	l61
  4611     0CA9                     u2450:
  4612     0CA9                     l63:
  4613                           
  4614                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  4615     0CA9  118C               	bcf	12,3	;volatile
  4616     0CAA                     l2723:
  4617                           
  4618                           ;i2c.c: 78:     return SSPBUF;
  4619     0CAA  0813               	movf	19,w	;volatile
  4620     0CAB                     l64:
  4621     0CAB  0008               	return
  4622     0CAC                     __end_of_I2C_Read:
  4623                           
  4624                           	psect	text27
  4625     0C96                     __ptext27:	
  4626 ;; *************** function _I2C_Nack *****************
  4627 ;; Defined at:
  4628 ;;		line 56 in file "i2c.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		None
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 3
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_Read
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656     0C96                     _I2C_Nack:	
  4657                           ;psect for function _I2C_Nack
  4658                           
  4659     0C96                     l2713:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _I2C_Nack: []
  4662                           
  4663                           
  4664                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  4665     0C96  1683               	bsf	3,5	;RP0=1, select bank1
  4666     0C97  1303               	bcf	3,6	;RP1=0, select bank1
  4667     0C98  1691               	bsf	17,5	;volatile
  4668                           
  4669                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  4670     0C99  1611               	bsf	17,4	;volatile
  4671     0C9A                     l49:	
  4672                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
  4673                           
  4674     0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4675     0C9B  1D8C               	btfss	12,3	;volatile
  4676     0C9C  2C9E               	goto	u2431
  4677     0C9D  2C9F               	goto	u2430
  4678     0C9E                     u2431:
  4679     0C9E  2C9A               	goto	l49
  4680     0C9F                     u2430:
  4681     0C9F                     l51:
  4682                           
  4683                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  4684     0C9F  118C               	bcf	12,3	;volatile
  4685     0CA0                     l52:
  4686     0CA0  0008               	return
  4687     0CA1                     __end_of_I2C_Nack:
  4688                           
  4689                           	psect	text28
  4690     0D46                     __ptext28:	
  4691 ;; *************** function _Bcd_to_Dec *****************
  4692 ;; Defined at:
  4693 ;;		line 376 in file "main_master.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  bcd             1    wreg     unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  bcd             1    7[BANK0 ] unsigned char 
  4698 ;;  dec             1    6[BANK0 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      unsigned char 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       0       0       0       0
  4709 ;;      Locals:         0       2       0       0       0
  4710 ;;      Temps:          0       2       0       0       0
  4711 ;;      Totals:         0       4       0       0       0
  4712 ;;Total ram usage:        4 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 4
  4715 ;; This function calls:
  4716 ;;		___bmul
  4717 ;; This function is called by:
  4718 ;;		_Read_Time
  4719 ;;		_Read_Fecha
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723     0D46                     _Bcd_to_Dec:	
  4724                           ;psect for function _Bcd_to_Dec
  4725                           
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  4729                           ;Bcd_to_Dec@bcd stored from wreg
  4730     0D46  1283               	bcf	3,5	;RP0=0, select bank0
  4731     0D47  1303               	bcf	3,6	;RP1=0, select bank0
  4732     0D48  00A7               	movwf	Bcd_to_Dec@bcd
  4733     0D49                     l2177:
  4734                           
  4735                           ;main_master.c: 377:     uint8_t dec;;main_master.c: 378:     dec = ((bcd>>4)*10)+(bcd &
      +                           0b00001111);
  4736     0D49  300F               	movlw	15
  4737     0D4A  0527               	andwf	Bcd_to_Dec@bcd,w
  4738     0D4B  00A4               	movwf	??_Bcd_to_Dec
  4739     0D4C  300A               	movlw	10
  4740     0D4D  00A0               	movwf	___bmul@multiplicand
  4741     0D4E  0827               	movf	Bcd_to_Dec@bcd,w
  4742     0D4F  00A5               	movwf	??_Bcd_to_Dec+1
  4743     0D50  3004               	movlw	4
  4744     0D51                     u1795:
  4745     0D51  1003               	clrc
  4746     0D52  0CA5               	rrf	??_Bcd_to_Dec+1,f
  4747     0D53  3EFF               	addlw	-1
  4748     0D54  1D03               	skipz
  4749     0D55  2D51               	goto	u1795
  4750     0D56  0825               	movf	??_Bcd_to_Dec+1,w
  4751     0D57  120A  158A  2513  120A  158A  	fcall	___bmul
  4752     0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  4753     0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  4754     0D5E  0724               	addwf	??_Bcd_to_Dec,w
  4755     0D5F  00A6               	movwf	Bcd_to_Dec@dec
  4756     0D60                     l2179:
  4757                           
  4758                           ;main_master.c: 379:     return dec;
  4759     0D60  0826               	movf	Bcd_to_Dec@dec,w
  4760     0D61                     l282:
  4761     0D61  0008               	return
  4762     0D62                     __end_of_Bcd_to_Dec:
  4763                           
  4764                           	psect	text29
  4765     0D13                     __ptext29:	
  4766 ;; *************** function ___bmul *****************
  4767 ;; Defined at:
  4768 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  multiplier      1    wreg     unsigned char 
  4771 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4774 ;;  product         1    2[BANK0 ] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4784 ;;      Params:         0       1       0       0       0
  4785 ;;      Locals:         0       2       0       0       0
  4786 ;;      Temps:          0       1       0       0       0
  4787 ;;      Totals:         0       4       0       0       0
  4788 ;;Total ram usage:        4 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 3
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_Bcd_to_Dec
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798     0D13                     ___bmul:	
  4799                           ;psect for function ___bmul
  4800                           
  4801                           
  4802                           ;incstack = 0
  4803                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4804                           ;___bmul@multiplier stored from wreg
  4805     0D13  1283               	bcf	3,5	;RP0=0, select bank0
  4806     0D14  1303               	bcf	3,6	;RP1=0, select bank0
  4807     0D15  00A3               	movwf	___bmul@multiplier
  4808     0D16                     l1927:
  4809     0D16  01A2               	clrf	___bmul@product
  4810     0D17                     l1929:
  4811     0D17  1C23               	btfss	___bmul@multiplier,0
  4812     0D18  2D1A               	goto	u1361
  4813     0D19  2D1B               	goto	u1360
  4814     0D1A                     u1361:
  4815     0D1A  2D1F               	goto	l1933
  4816     0D1B                     u1360:
  4817     0D1B                     l1931:
  4818     0D1B  0820               	movf	___bmul@multiplicand,w
  4819     0D1C  00A1               	movwf	??___bmul
  4820     0D1D  0821               	movf	??___bmul,w
  4821     0D1E  07A2               	addwf	___bmul@product,f
  4822     0D1F                     l1933:
  4823     0D1F  1003               	clrc
  4824     0D20  0DA0               	rlf	___bmul@multiplicand,f
  4825     0D21                     l1935:
  4826     0D21  1003               	clrc
  4827     0D22  0CA3               	rrf	___bmul@multiplier,f
  4828     0D23  0823               	movf	___bmul@multiplier,w
  4829     0D24  1D03               	btfss	3,2
  4830     0D25  2D27               	goto	u1371
  4831     0D26  2D28               	goto	u1370
  4832     0D27                     u1371:
  4833     0D27  2D17               	goto	l1929
  4834     0D28                     u1370:
  4835     0D28                     l1937:
  4836     0D28  0822               	movf	___bmul@product,w
  4837     0D29                     l498:
  4838     0D29  0008               	return
  4839     0D2A                     __end_of___bmul:
  4840                           
  4841                           	psect	text30
  4842     05BE                     __ptext30:	
  4843 ;; *************** function _Lcd_Init *****************
  4844 ;; Defined at:
  4845 ;;		line 65 in file "LCD.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, pclath, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4859 ;;      Params:         0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0
  4861 ;;      Temps:          0       2       0       0       0
  4862 ;;      Totals:         0       2       0       0       0
  4863 ;;Total ram usage:        2 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 5
  4866 ;; This function calls:
  4867 ;;		_Lcd_Cmd
  4868 ;;		_Lcd_Port
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874     05BE                     _Lcd_Init:	
  4875                           ;psect for function _Lcd_Init
  4876                           
  4877     05BE                     l3025:	
  4878                           ;incstack = 0
  4879                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4880                           
  4881                           
  4882                           ;LCD.c: 66:     Lcd_Port(0x00);
  4883     05BE  3000               	movlw	0
  4884     05BF  120A  158A  2562  120A  118A  	fcall	_Lcd_Port
  4885     05C4                     l3027:
  4886                           
  4887                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4888     05C4  3034               	movlw	52
  4889     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  4890     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  4891     05C7  00A5               	movwf	??_Lcd_Init+1
  4892     05C8  30F1               	movlw	241
  4893     05C9  00A4               	movwf	??_Lcd_Init
  4894     05CA                     u2907:
  4895     05CA  0BA4               	decfsz	??_Lcd_Init,f
  4896     05CB  2DCA               	goto	u2907
  4897     05CC  0BA5               	decfsz	??_Lcd_Init+1,f
  4898     05CD  2DCA               	goto	u2907
  4899     05CE                     l3029:
  4900                           
  4901                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4902     05CE  3003               	movlw	3
  4903     05CF  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4904                           
  4905                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4906     05D4  300D               	movlw	13
  4907     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  4908     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  4909     05D7  00A5               	movwf	??_Lcd_Init+1
  4910     05D8  30FB               	movlw	251
  4911     05D9  00A4               	movwf	??_Lcd_Init
  4912     05DA                     u2917:
  4913     05DA  0BA4               	decfsz	??_Lcd_Init,f
  4914     05DB  2DDA               	goto	u2917
  4915     05DC  0BA5               	decfsz	??_Lcd_Init+1,f
  4916     05DD  2DDA               	goto	u2917
  4917     05DE                     l3031:
  4918                           
  4919                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4920     05DE  3003               	movlw	3
  4921     05DF  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4922     05E4                     l3033:
  4923                           
  4924                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4925     05E4  3084               	movlw	132
  4926     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4927     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4928     05E7  00A4               	movwf	??_Lcd_Init
  4929     05E8                     u2927:
  4930     05E8  0BA4               	decfsz	??_Lcd_Init,f
  4931     05E9  2DE8               	goto	u2927
  4932     05EA  0000               	nop
  4933                           
  4934                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4935     05EB  3003               	movlw	3
  4936     05EC  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4937                           
  4938                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  4939     05F1  3002               	movlw	2
  4940     05F2  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4941                           
  4942                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4943     05F7  3002               	movlw	2
  4944     05F8  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4945                           
  4946                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  4947     05FD  3008               	movlw	8
  4948     05FE  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4949                           
  4950                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  4951     0603  3000               	movlw	0
  4952     0604  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4953                           
  4954                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  4955     0609  300C               	movlw	12
  4956     060A  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4957                           
  4958                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  4959     060F  3000               	movlw	0
  4960     0610  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4961                           
  4962                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  4963     0615  3006               	movlw	6
  4964     0616  120A  158A  252A  120A  118A  	fcall	_Lcd_Cmd
  4965     061B                     l3035:
  4966                           
  4967                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  4968     061B  3041               	movlw	65
  4969     061C  1283               	bcf	3,5	;RP0=0, select bank0
  4970     061D  1303               	bcf	3,6	;RP1=0, select bank0
  4971     061E  00A4               	movwf	??_Lcd_Init
  4972     061F                     u2937:
  4973     061F  0BA4               	decfsz	??_Lcd_Init,f
  4974     0620  2E1F               	goto	u2937
  4975     0621  2E22               	nop2
  4976     0622                     l317:
  4977     0622  0008               	return
  4978     0623                     __end_of_Lcd_Init:
  4979                           
  4980                           	psect	text31
  4981     0CAC                     __ptext31:	
  4982 ;; *************** function _Lcd_Clear *****************
  4983 ;; Defined at:
  4984 ;;		line 43 in file "LCD.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, pclath, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4998 ;;      Params:         0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 5
  5005 ;; This function calls:
  5006 ;;		_Lcd_Cmd
  5007 ;; This function is called by:
  5008 ;;		_main
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     0CAC                     _Lcd_Clear:	
  5013                           ;psect for function _Lcd_Clear
  5014                           
  5015     0CAC                     l3037:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5018                           
  5019                           
  5020                           ;LCD.c: 44:     Lcd_Cmd(0);
  5021     0CAC  3000               	movlw	0
  5022     0CAD  120A  158A  252A  120A  158A  	fcall	_Lcd_Cmd
  5023                           
  5024                           ;LCD.c: 45:     Lcd_Cmd(1);
  5025     0CB2  3001               	movlw	1
  5026     0CB3  120A  158A  252A  120A  158A  	fcall	_Lcd_Cmd
  5027     0CB8                     l308:
  5028     0CB8  0008               	return
  5029     0CB9                     __end_of_Lcd_Clear:
  5030                           
  5031                           	psect	text32
  5032     0D2A                     __ptext32:	
  5033 ;; *************** function _Lcd_Cmd *****************
  5034 ;; Defined at:
  5035 ;;		line 35 in file "LCD.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  a               1    wreg     unsigned char 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  a               1    3[BANK0 ] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5049 ;;      Params:         0       0       0       0       0
  5050 ;;      Locals:         0       1       0       0       0
  5051 ;;      Temps:          0       2       0       0       0
  5052 ;;      Totals:         0       3       0       0       0
  5053 ;;Total ram usage:        3 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 4
  5056 ;; This function calls:
  5057 ;;		_Lcd_Port
  5058 ;; This function is called by:
  5059 ;;		_Lcd_Clear
  5060 ;;		_Lcd_Set_Cursor
  5061 ;;		_Lcd_Init
  5062 ;;		_Lcd_Shift_Right
  5063 ;;		_Lcd_Shift_Left
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067     0D2A                     _Lcd_Cmd:	
  5068                           ;psect for function _Lcd_Cmd
  5069                           
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5073                           ;Lcd_Cmd@a stored from wreg
  5074     0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  5075     0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  5076     0D2C  00A3               	movwf	Lcd_Cmd@a
  5077     0D2D                     l2727:
  5078                           
  5079                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  5080     0D2D  1308               	bcf	8,6	;volatile
  5081     0D2E                     l2729:
  5082                           
  5083                           ;LCD.c: 37:     Lcd_Port(a);
  5084     0D2E  0823               	movf	Lcd_Cmd@a,w
  5085     0D2F  120A  158A  2562  120A  158A  	fcall	_Lcd_Port
  5086     0D34                     l2731:
  5087                           
  5088                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  5089     0D34  1283               	bcf	3,5	;RP0=0, select bank0
  5090     0D35  1303               	bcf	3,6	;RP1=0, select bank0
  5091     0D36  1788               	bsf	8,7	;volatile
  5092     0D37                     l2733:
  5093                           
  5094                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5095     0D37  300B               	movlw	11
  5096     0D38  1283               	bcf	3,5	;RP0=0, select bank0
  5097     0D39  1303               	bcf	3,6	;RP1=0, select bank0
  5098     0D3A  00A2               	movwf	??_Lcd_Cmd+1
  5099     0D3B  3061               	movlw	97
  5100     0D3C  00A1               	movwf	??_Lcd_Cmd
  5101     0D3D                     u2947:
  5102     0D3D  0BA1               	decfsz	??_Lcd_Cmd,f
  5103     0D3E  2D3D               	goto	u2947
  5104     0D3F  0BA2               	decfsz	??_Lcd_Cmd+1,f
  5105     0D40  2D3D               	goto	u2947
  5106     0D41  2D42               	nop2
  5107     0D42                     l2735:
  5108                           
  5109                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  5110     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  5111     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  5112     0D44  1388               	bcf	8,7	;volatile
  5113     0D45                     l305:
  5114     0D45  0008               	return
  5115     0D46                     __end_of_Lcd_Cmd:
  5116                           
  5117                           	psect	text33
  5118     0D62                     __ptext33:	
  5119 ;; *************** function _Lcd_Port *****************
  5120 ;; Defined at:
  5121 ;;		line 13 in file "LCD.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  a               1    wreg     unsigned char 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  a               1    0[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5135 ;;      Params:         0       0       0       0       0
  5136 ;;      Locals:         0       1       0       0       0
  5137 ;;      Temps:          0       0       0       0       0
  5138 ;;      Totals:         0       1       0       0       0
  5139 ;;Total ram usage:        1 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; Hardware stack levels required when called: 3
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_Lcd_Cmd
  5146 ;;		_Lcd_Init
  5147 ;;		_Lcd_Write_Char
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151     0D62                     _Lcd_Port:	
  5152                           ;psect for function _Lcd_Port
  5153                           
  5154                           
  5155                           ;incstack = 0
  5156                           ; Regs used in _Lcd_Port: [wreg]
  5157                           ;Lcd_Port@a stored from wreg
  5158     0D62  1283               	bcf	3,5	;RP0=0, select bank0
  5159     0D63  1303               	bcf	3,6	;RP1=0, select bank0
  5160     0D64  00A0               	movwf	Lcd_Port@a
  5161     0D65                     l2697:
  5162                           
  5163                           ;LCD.c: 14:     if (a & 1)
  5164     0D65  1C20               	btfss	Lcd_Port@a,0
  5165     0D66  2D68               	goto	u2361
  5166     0D67  2D69               	goto	u2360
  5167     0D68                     u2361:
  5168     0D68  2D6B               	goto	l294
  5169     0D69                     u2360:
  5170     0D69                     l2699:
  5171                           
  5172                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  5173     0D69  1606               	bsf	6,4	;volatile
  5174     0D6A  2D6C               	goto	l295
  5175     0D6B                     l294:	
  5176                           ;LCD.c: 16:     else
  5177                           
  5178                           
  5179                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  5180     0D6B  1206               	bcf	6,4	;volatile
  5181     0D6C                     l295:
  5182                           
  5183                           ;LCD.c: 19:     if (a & 2)
  5184     0D6C  1CA0               	btfss	Lcd_Port@a,1
  5185     0D6D  2D6F               	goto	u2371
  5186     0D6E  2D70               	goto	u2370
  5187     0D6F                     u2371:
  5188     0D6F  2D72               	goto	l296
  5189     0D70                     u2370:
  5190     0D70                     l2701:
  5191                           
  5192                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  5193     0D70  1686               	bsf	6,5	;volatile
  5194     0D71  2D73               	goto	l297
  5195     0D72                     l296:	
  5196                           ;LCD.c: 21:     else
  5197                           
  5198                           
  5199                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  5200     0D72  1286               	bcf	6,5	;volatile
  5201     0D73                     l297:
  5202                           
  5203                           ;LCD.c: 24:     if (a & 4)
  5204     0D73  1D20               	btfss	Lcd_Port@a,2
  5205     0D74  2D76               	goto	u2381
  5206     0D75  2D77               	goto	u2380
  5207     0D76                     u2381:
  5208     0D76  2D79               	goto	l298
  5209     0D77                     u2380:
  5210     0D77                     l2703:
  5211                           
  5212                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  5213     0D77  1706               	bsf	6,6	;volatile
  5214     0D78  2D7A               	goto	l299
  5215     0D79                     l298:	
  5216                           ;LCD.c: 26:     else
  5217                           
  5218                           
  5219                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  5220     0D79  1306               	bcf	6,6	;volatile
  5221     0D7A                     l299:
  5222                           
  5223                           ;LCD.c: 29:     if (a & 8)
  5224     0D7A  1DA0               	btfss	Lcd_Port@a,3
  5225     0D7B  2D7D               	goto	u2391
  5226     0D7C  2D7E               	goto	u2390
  5227     0D7D                     u2391:
  5228     0D7D  2D80               	goto	l300
  5229     0D7E                     u2390:
  5230     0D7E                     l2705:
  5231                           
  5232                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  5233     0D7E  1786               	bsf	6,7	;volatile
  5234     0D7F  2D81               	goto	l302
  5235     0D80                     l300:	
  5236                           ;LCD.c: 31:     else
  5237                           
  5238                           
  5239                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  5240     0D80  1386               	bcf	6,7	;volatile
  5241     0D81                     l302:
  5242     0D81  0008               	return
  5243     0D82                     __end_of_Lcd_Port:
  5244                           
  5245                           	psect	text34
  5246     001F                     __ptext34:	
  5247 ;; *************** function _isr *****************
  5248 ;; Defined at:
  5249 ;;		line 113 in file "main_master.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0, pclath, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0
  5265 ;;      Temps:          4       0       0       0       0
  5266 ;;      Totals:         4       0       0       0       0
  5267 ;;Total ram usage:        4 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 2
  5270 ;; This function calls:
  5271 ;;		i1_Set_day
  5272 ;;		i1_Set_month
  5273 ;;		i1_Set_year
  5274 ;; This function is called by:
  5275 ;;		Interrupt level 1
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279     001F                     _isr:	
  5280                           ;psect for function _isr
  5281                           
  5282     001F                     i1l2451:
  5283                           
  5284                           ;main_master.c: 114:     if (INTCONbits.RBIF == 1){
  5285     001F  1C0B               	btfss	11,0	;volatile
  5286     0020  2822               	goto	u189_21
  5287     0021  2823               	goto	u189_20
  5288     0022                     u189_21:
  5289     0022  2A03               	goto	i1l238
  5290     0023                     u189_20:
  5291     0023                     i1l2453:
  5292                           
  5293                           ;main_master.c: 115:         INTCONbits.RBIF = 0;
  5294     0023  100B               	bcf	11,0	;volatile
  5295                           
  5296                           ;main_master.c: 116:         if (PORTBbits.RB3 == 0){
  5297     0024  1283               	bcf	3,5	;RP0=0, select bank0
  5298     0025  1303               	bcf	3,6	;RP1=0, select bank0
  5299     0026  1986               	btfsc	6,3	;volatile
  5300     0027  2829               	goto	u190_21
  5301     0028  282A               	goto	u190_20
  5302     0029                     u190_21:
  5303     0029  2835               	goto	i1l2459
  5304     002A                     u190_20:
  5305     002A                     i1l2455:
  5306                           
  5307                           ;main_master.c: 117:             bandera = 1;
  5308     002A  01F9               	clrf	_bandera
  5309     002B  0AF9               	incf	_bandera,f
  5310     002C                     i1l2457:
  5311                           
  5312                           ;main_master.c: 118:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5313     002C  3003               	movlw	3
  5314     002D  00F4               	movwf	??_isr+1
  5315     002E  3097               	movlw	151
  5316     002F  00F3               	movwf	??_isr
  5317     0030                     u295_27:
  5318     0030  0BF3               	decfsz	??_isr,f
  5319     0031  2830               	goto	u295_27
  5320     0032  0BF4               	decfsz	??_isr+1,f
  5321     0033  2830               	goto	u295_27
  5322     0034  2835               	nop2
  5323     0035                     i1l2459:
  5324                           
  5325                           ;main_master.c: 120:         if (PORTBbits.RB3 == 1 && bandera == 1){
  5326     0035  1283               	bcf	3,5	;RP0=0, select bank0
  5327     0036  1303               	bcf	3,6	;RP1=0, select bank0
  5328     0037  1D86               	btfss	6,3	;volatile
  5329     0038  283A               	goto	u191_21
  5330     0039  283B               	goto	u191_20
  5331     003A                     u191_21:
  5332     003A  2863               	goto	i1l2485
  5333     003B                     u191_20:
  5334     003B                     i1l2461:
  5335     003B  0379               	decf	_bandera,w
  5336     003C  1D03               	btfss	3,2
  5337     003D  283F               	goto	u192_21
  5338     003E  2840               	goto	u192_20
  5339     003F                     u192_21:
  5340     003F  2863               	goto	i1l2485
  5341     0040                     u192_20:
  5342     0040                     i1l2463:
  5343                           
  5344                           ;main_master.c: 121:             if (selector == 0){
  5345     0040  084A               	movf	_selector,w
  5346     0041  1D03               	btfss	3,2
  5347     0042  2844               	goto	u193_21
  5348     0043  2845               	goto	u193_20
  5349     0044                     u193_21:
  5350     0044  2849               	goto	i1l2469
  5351     0045                     u193_20:
  5352     0045                     i1l2465:
  5353                           
  5354                           ;main_master.c: 122:                 selector = 1;
  5355     0045  01CA               	clrf	_selector
  5356     0046  0ACA               	incf	_selector,f
  5357     0047                     i1l2467:
  5358                           
  5359                           ;main_master.c: 123:                 bandera = 0;
  5360     0047  01F9               	clrf	_bandera
  5361                           
  5362                           ;main_master.c: 124:             }
  5363     0048  2863               	goto	i1l2485
  5364     0049                     i1l2469:
  5365     0049  034A               	decf	_selector,w
  5366     004A  1D03               	btfss	3,2
  5367     004B  284D               	goto	u194_21
  5368     004C  284E               	goto	u194_20
  5369     004D                     u194_21:
  5370     004D  2851               	goto	i1l2475
  5371     004E                     u194_20:
  5372     004E                     i1l2471:
  5373                           
  5374                           ;main_master.c: 126:                 selector = 2;
  5375     004E  3002               	movlw	2
  5376     004F  00CA               	movwf	_selector
  5377     0050  2847               	goto	i1l2467
  5378     0051                     i1l2475:
  5379     0051  3002               	movlw	2
  5380     0052  064A               	xorwf	_selector,w
  5381     0053  1D03               	btfss	3,2
  5382     0054  2856               	goto	u195_21
  5383     0055  2857               	goto	u195_20
  5384     0056                     u195_21:
  5385     0056  285A               	goto	i1l2481
  5386     0057                     u195_20:
  5387     0057                     i1l2477:
  5388                           
  5389                           ;main_master.c: 130:                 selector = 3;
  5390     0057  3003               	movlw	3
  5391     0058  00CA               	movwf	_selector
  5392     0059  2847               	goto	i1l2467
  5393     005A                     i1l2481:
  5394     005A  3003               	movlw	3
  5395     005B  064A               	xorwf	_selector,w
  5396     005C  1D03               	btfss	3,2
  5397     005D  285F               	goto	u196_21
  5398     005E  2860               	goto	u196_20
  5399     005F                     u196_21:
  5400     005F  2863               	goto	i1l188
  5401     0060                     u196_20:
  5402     0060                     i1l2483:
  5403                           
  5404                           ;main_master.c: 134:                 selector = 0;
  5405     0060  01CA               	clrf	_selector
  5406                           
  5407                           ;main_master.c: 135:                 bandera = 0;
  5408     0061  01F9               	clrf	_bandera
  5409     0062  2863               	goto	i1l2485
  5410     0063                     i1l188:
  5411     0063                     i1l2485:
  5412                           
  5413                           ;main_master.c: 138:         if (PORTBbits.RB2 == 0){
  5414     0063  1906               	btfsc	6,2	;volatile
  5415     0064  2866               	goto	u197_21
  5416     0065  2867               	goto	u197_20
  5417     0066                     u197_21:
  5418     0066  2872               	goto	i1l2489
  5419     0067                     u197_20:
  5420     0067                     i1l2487:
  5421                           
  5422                           ;main_master.c: 139:             bandera = 2;
  5423     0067  3002               	movlw	2
  5424     0068  00F9               	movwf	_bandera
  5425                           
  5426                           ;main_master.c: 140:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5427     0069  3003               	movlw	3
  5428     006A  00F4               	movwf	??_isr+1
  5429     006B  3097               	movlw	151
  5430     006C  00F3               	movwf	??_isr
  5431     006D                     u296_27:
  5432     006D  0BF3               	decfsz	??_isr,f
  5433     006E  286D               	goto	u296_27
  5434     006F  0BF4               	decfsz	??_isr+1,f
  5435     0070  286D               	goto	u296_27
  5436     0071  2872               	nop2
  5437     0072                     i1l2489:
  5438                           
  5439                           ;main_master.c: 142:         if (PORTBbits.RB2 == 1 && bandera == 2){
  5440     0072  1283               	bcf	3,5	;RP0=0, select bank0
  5441     0073  1303               	bcf	3,6	;RP1=0, select bank0
  5442     0074  1D06               	btfss	6,2	;volatile
  5443     0075  2877               	goto	u198_21
  5444     0076  2878               	goto	u198_20
  5445     0077                     u198_21:
  5446     0077  2990               	goto	i1l2593
  5447     0078                     u198_20:
  5448     0078                     i1l2491:
  5449     0078  3002               	movlw	2
  5450     0079  0679               	xorwf	_bandera,w
  5451     007A  1D03               	btfss	3,2
  5452     007B  287D               	goto	u199_21
  5453     007C  287E               	goto	u199_20
  5454     007D                     u199_21:
  5455     007D  2990               	goto	i1l2593
  5456     007E                     u199_20:
  5457     007E                     i1l2493:
  5458                           
  5459                           ;main_master.c: 143:             if (selector == 1){
  5460     007E  034A               	decf	_selector,w
  5461     007F  1D03               	btfss	3,2
  5462     0080  2882               	goto	u200_21
  5463     0081  2883               	goto	u200_20
  5464     0082                     u200_21:
  5465     0082  2919               	goto	i1l2551
  5466     0083                     u200_20:
  5467     0083                     i1l2495:
  5468                           
  5469                           ;main_master.c: 144:                 if (mes == 1 || mes == 3 || mes == 5 || mes == 7 ||
      +                           mes == 8 || mes == 10 || mes == 12){
  5470     0083  0360               	decf	_mes,w
  5471     0084  1903               	btfsc	3,2
  5472     0085  2887               	goto	u201_21
  5473     0086  2888               	goto	u201_20
  5474     0087                     u201_21:
  5475     0087  28AC               	goto	i1l2509
  5476     0088                     u201_20:
  5477     0088                     i1l2497:
  5478     0088  3003               	movlw	3
  5479     0089  0660               	xorwf	_mes,w
  5480     008A  1903               	btfsc	3,2
  5481     008B  288D               	goto	u202_21
  5482     008C  288E               	goto	u202_20
  5483     008D                     u202_21:
  5484     008D  28AC               	goto	i1l2509
  5485     008E                     u202_20:
  5486     008E                     i1l2499:
  5487     008E  3005               	movlw	5
  5488     008F  0660               	xorwf	_mes,w
  5489     0090  1903               	btfsc	3,2
  5490     0091  2893               	goto	u203_21
  5491     0092  2894               	goto	u203_20
  5492     0093                     u203_21:
  5493     0093  28AC               	goto	i1l2509
  5494     0094                     u203_20:
  5495     0094                     i1l2501:
  5496     0094  3007               	movlw	7
  5497     0095  0660               	xorwf	_mes,w
  5498     0096  1903               	btfsc	3,2
  5499     0097  2899               	goto	u204_21
  5500     0098  289A               	goto	u204_20
  5501     0099                     u204_21:
  5502     0099  28AC               	goto	i1l2509
  5503     009A                     u204_20:
  5504     009A                     i1l2503:
  5505     009A  3008               	movlw	8
  5506     009B  0660               	xorwf	_mes,w
  5507     009C  1903               	btfsc	3,2
  5508     009D  289F               	goto	u205_21
  5509     009E  28A0               	goto	u205_20
  5510     009F                     u205_21:
  5511     009F  28AC               	goto	i1l2509
  5512     00A0                     u205_20:
  5513     00A0                     i1l2505:
  5514     00A0  300A               	movlw	10
  5515     00A1  0660               	xorwf	_mes,w
  5516     00A2  1903               	btfsc	3,2
  5517     00A3  28A5               	goto	u206_21
  5518     00A4  28A6               	goto	u206_20
  5519     00A5                     u206_21:
  5520     00A5  28AC               	goto	i1l2509
  5521     00A6                     u206_20:
  5522     00A6                     i1l2507:
  5523     00A6  300C               	movlw	12
  5524     00A7  0660               	xorwf	_mes,w
  5525     00A8  1D03               	btfss	3,2
  5526     00A9  28AB               	goto	u207_21
  5527     00AA  28AC               	goto	u207_20
  5528     00AB                     u207_21:
  5529     00AB  28C6               	goto	i1l2519
  5530     00AC                     u207_20:
  5531     00AC                     i1l2509:
  5532                           
  5533                           ;main_master.c: 145:                     if (dia == 31){
  5534     00AC  301F               	movlw	31
  5535     00AD  0661               	xorwf	_dia,w
  5536     00AE  1D03               	btfss	3,2
  5537     00AF  28B1               	goto	u208_21
  5538     00B0  28B2               	goto	u208_20
  5539     00B1                     u208_21:
  5540     00B1  28BB               	goto	i1l2515
  5541     00B2                     u208_20:
  5542     00B2                     i1l2511:
  5543                           
  5544                           ;main_master.c: 146:                         dia = 31;
  5545     00B2  301F               	movlw	31
  5546     00B3  00E1               	movwf	_dia
  5547     00B4                     i1l2513:
  5548                           
  5549                           ;main_master.c: 147:                         Set_day(dia);
  5550     00B4  0861               	movf	_dia,w
  5551     00B5  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5552                           
  5553                           ;main_master.c: 148:                     }
  5554     00BA  2917               	goto	i1l2549
  5555     00BB                     i1l2515:
  5556                           
  5557                           ;main_master.c: 150:                         dia++;
  5558     00BB  3001               	movlw	1
  5559     00BC  00F3               	movwf	??_isr
  5560     00BD  0873               	movf	??_isr,w
  5561     00BE  07E1               	addwf	_dia,f
  5562     00BF                     i1l2517:
  5563                           
  5564                           ;main_master.c: 151:                         Set_day(dia);
  5565     00BF  0861               	movf	_dia,w
  5566     00C0  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5567     00C5  2917               	goto	i1l2549
  5568     00C6                     i1l2519:
  5569     00C6  3004               	movlw	4
  5570     00C7  0660               	xorwf	_mes,w
  5571     00C8  1903               	btfsc	3,2
  5572     00C9  28CB               	goto	u209_21
  5573     00CA  28CC               	goto	u209_20
  5574     00CB                     u209_21:
  5575     00CB  28DE               	goto	i1l2527
  5576     00CC                     u209_20:
  5577     00CC                     i1l2521:
  5578     00CC  3006               	movlw	6
  5579     00CD  0660               	xorwf	_mes,w
  5580     00CE  1903               	btfsc	3,2
  5581     00CF  28D1               	goto	u210_21
  5582     00D0  28D2               	goto	u210_20
  5583     00D1                     u210_21:
  5584     00D1  28DE               	goto	i1l2527
  5585     00D2                     u210_20:
  5586     00D2                     i1l2523:
  5587     00D2  3009               	movlw	9
  5588     00D3  0660               	xorwf	_mes,w
  5589     00D4  1903               	btfsc	3,2
  5590     00D5  28D7               	goto	u211_21
  5591     00D6  28D8               	goto	u211_20
  5592     00D7                     u211_21:
  5593     00D7  28DE               	goto	i1l2527
  5594     00D8                     u211_20:
  5595     00D8                     i1l2525:
  5596     00D8  300B               	movlw	11
  5597     00D9  0660               	xorwf	_mes,w
  5598     00DA  1D03               	btfss	3,2
  5599     00DB  28DD               	goto	u212_21
  5600     00DC  28DE               	goto	u212_20
  5601     00DD                     u212_21:
  5602     00DD  28F8               	goto	i1l2537
  5603     00DE                     u212_20:
  5604     00DE                     i1l2527:
  5605                           
  5606                           ;main_master.c: 155:                     if (dia == 30){
  5607     00DE  301E               	movlw	30
  5608     00DF  0661               	xorwf	_dia,w
  5609     00E0  1D03               	btfss	3,2
  5610     00E1  28E3               	goto	u213_21
  5611     00E2  28E4               	goto	u213_20
  5612     00E3                     u213_21:
  5613     00E3  28ED               	goto	i1l2533
  5614     00E4                     u213_20:
  5615     00E4                     i1l2529:
  5616                           
  5617                           ;main_master.c: 156:                         dia = 30;
  5618     00E4  301E               	movlw	30
  5619     00E5  00E1               	movwf	_dia
  5620     00E6                     i1l2531:
  5621                           
  5622                           ;main_master.c: 157:                         Set_day(dia);
  5623     00E6  0861               	movf	_dia,w
  5624     00E7  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5625                           
  5626                           ;main_master.c: 158:                     }
  5627     00EC  2917               	goto	i1l2549
  5628     00ED                     i1l2533:
  5629                           
  5630                           ;main_master.c: 160:                         dia++;
  5631     00ED  3001               	movlw	1
  5632     00EE  00F3               	movwf	??_isr
  5633     00EF  0873               	movf	??_isr,w
  5634     00F0  07E1               	addwf	_dia,f
  5635     00F1                     i1l2535:
  5636                           
  5637                           ;main_master.c: 161:                         Set_day(dia);
  5638     00F1  0861               	movf	_dia,w
  5639     00F2  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5640     00F7  2917               	goto	i1l2549
  5641     00F8                     i1l2537:
  5642     00F8  3002               	movlw	2
  5643     00F9  0660               	xorwf	_mes,w
  5644     00FA  1D03               	btfss	3,2
  5645     00FB  28FD               	goto	u214_21
  5646     00FC  28FE               	goto	u214_20
  5647     00FD                     u214_21:
  5648     00FD  2917               	goto	i1l2549
  5649     00FE                     u214_20:
  5650     00FE                     i1l2539:
  5651                           
  5652                           ;main_master.c: 165:                     if (dia == 28){
  5653     00FE  301C               	movlw	28
  5654     00FF  0661               	xorwf	_dia,w
  5655     0100  1D03               	btfss	3,2
  5656     0101  2903               	goto	u215_21
  5657     0102  2904               	goto	u215_20
  5658     0103                     u215_21:
  5659     0103  290D               	goto	i1l2545
  5660     0104                     u215_20:
  5661     0104                     i1l2541:
  5662                           
  5663                           ;main_master.c: 166:                         dia = 28;
  5664     0104  301C               	movlw	28
  5665     0105  00E1               	movwf	_dia
  5666     0106                     i1l2543:
  5667                           
  5668                           ;main_master.c: 167:                         Set_day(dia);
  5669     0106  0861               	movf	_dia,w
  5670     0107  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5671                           
  5672                           ;main_master.c: 168:                     }
  5673     010C  2917               	goto	i1l2549
  5674     010D                     i1l2545:
  5675                           
  5676                           ;main_master.c: 170:                         dia++;
  5677     010D  3001               	movlw	1
  5678     010E  00F3               	movwf	??_isr
  5679     010F  0873               	movf	??_isr,w
  5680     0110  07E1               	addwf	_dia,f
  5681     0111                     i1l2547:
  5682                           
  5683                           ;main_master.c: 171:                         Set_day(dia);
  5684     0111  0861               	movf	_dia,w
  5685     0112  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5686     0117                     i1l2549:
  5687                           
  5688                           ;main_master.c: 174:                 bandera = 0;
  5689     0117  01F9               	clrf	_bandera
  5690                           
  5691                           ;main_master.c: 175:             }
  5692     0118  2990               	goto	i1l2593
  5693     0119                     i1l2551:
  5694     0119  3002               	movlw	2
  5695     011A  064A               	xorwf	_selector,w
  5696     011B  1D03               	btfss	3,2
  5697     011C  291E               	goto	u216_21
  5698     011D  291F               	goto	u216_20
  5699     011E                     u216_21:
  5700     011E  2970               	goto	i1l2579
  5701     011F                     u216_20:
  5702     011F                     i1l2553:
  5703                           
  5704                           ;main_master.c: 177:                 if (mes == 12){
  5705     011F  300C               	movlw	12
  5706     0120  0660               	xorwf	_mes,w
  5707     0121  1D03               	btfss	3,2
  5708     0122  2924               	goto	u217_21
  5709     0123  2925               	goto	u217_20
  5710     0124                     u217_21:
  5711     0124  292E               	goto	i1l2559
  5712     0125                     u217_20:
  5713     0125                     i1l2555:
  5714                           
  5715                           ;main_master.c: 178:                     mes = 12;
  5716     0125  300C               	movlw	12
  5717     0126  00E0               	movwf	_mes
  5718     0127                     i1l2557:
  5719                           
  5720                           ;main_master.c: 179:                     Set_month(mes);
  5721     0127  0860               	movf	_mes,w
  5722     0128  120A  158A  25A5  120A  118A  	fcall	i1_Set_month
  5723                           
  5724                           ;main_master.c: 180:                 }
  5725     012D  2917               	goto	i1l2549
  5726     012E                     i1l2559:
  5727                           
  5728                           ;main_master.c: 182:                     mes++;
  5729     012E  3001               	movlw	1
  5730     012F  00F3               	movwf	??_isr
  5731     0130  0873               	movf	??_isr,w
  5732     0131  07E0               	addwf	_mes,f
  5733                           
  5734                           ;main_master.c: 183:                     if ((mes == 4 || mes == 6 || mes == 9 || mes ==
      +                           11) && (dia >> 30)){
  5735     0132  3004               	movlw	4
  5736     0133  0660               	xorwf	_mes,w
  5737     0134  1903               	btfsc	3,2
  5738     0135  2937               	goto	u218_21
  5739     0136  2938               	goto	u218_20
  5740     0137                     u218_21:
  5741     0137  294A               	goto	i1l2567
  5742     0138                     u218_20:
  5743     0138                     i1l2561:
  5744     0138  3006               	movlw	6
  5745     0139  0660               	xorwf	_mes,w
  5746     013A  1903               	btfsc	3,2
  5747     013B  293D               	goto	u219_21
  5748     013C  293E               	goto	u219_20
  5749     013D                     u219_21:
  5750     013D  294A               	goto	i1l2567
  5751     013E                     u219_20:
  5752     013E                     i1l2563:
  5753     013E  3009               	movlw	9
  5754     013F  0660               	xorwf	_mes,w
  5755     0140  1903               	btfsc	3,2
  5756     0141  2943               	goto	u220_21
  5757     0142  2944               	goto	u220_20
  5758     0143                     u220_21:
  5759     0143  294A               	goto	i1l2567
  5760     0144                     u220_20:
  5761     0144                     i1l2565:
  5762     0144  300B               	movlw	11
  5763     0145  0660               	xorwf	_mes,w
  5764     0146  1D03               	btfss	3,2
  5765     0147  2949               	goto	u221_21
  5766     0148  294A               	goto	u221_20
  5767     0149                     u221_21:
  5768     0149  2956               	goto	i1l2571
  5769     014A                     u221_20:
  5770     014A                     i1l2567:
  5771     014A  0861               	movf	_dia,w
  5772     014B  1903               	btfsc	3,2
  5773     014C  294E               	goto	u222_21
  5774     014D  294F               	goto	u222_20
  5775     014E                     u222_21:
  5776     014E  2956               	goto	i1l2571
  5777     014F                     u222_20:
  5778     014F                     i1l2569:
  5779                           
  5780                           ;main_master.c: 184:                         Set_day(30);
  5781     014F  301E               	movlw	30
  5782     0150  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5783                           
  5784                           ;main_master.c: 185:                     }
  5785     0155  2967               	goto	i1l219
  5786     0156                     i1l2571:
  5787     0156  3002               	movlw	2
  5788     0157  0660               	xorwf	_mes,w
  5789     0158  1D03               	btfss	3,2
  5790     0159  295B               	goto	u223_21
  5791     015A  295C               	goto	u223_20
  5792     015B                     u223_21:
  5793     015B  2967               	goto	i1l219
  5794     015C                     u223_20:
  5795     015C                     i1l2573:
  5796     015C  0861               	movf	_dia,w
  5797     015D  1903               	btfsc	3,2
  5798     015E  2960               	goto	u224_21
  5799     015F  2961               	goto	u224_20
  5800     0160                     u224_21:
  5801     0160  2967               	goto	i1l219
  5802     0161                     u224_20:
  5803     0161                     i1l2575:
  5804                           
  5805                           ;main_master.c: 187:                         Set_day(28);
  5806     0161  301C               	movlw	28
  5807     0162  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5808     0167                     i1l219:
  5809                           
  5810                           ;main_master.c: 189:                     Set_month(mes);
  5811     0167  1283               	bcf	3,5	;RP0=0, select bank0
  5812     0168  1303               	bcf	3,6	;RP1=0, select bank0
  5813     0169  0860               	movf	_mes,w
  5814     016A  120A  158A  25A5  120A  118A  	fcall	i1_Set_month
  5815     016F  2917               	goto	i1l2549
  5816     0170                     i1l2579:
  5817     0170  3003               	movlw	3
  5818     0171  064A               	xorwf	_selector,w
  5819     0172  1D03               	btfss	3,2
  5820     0173  2975               	goto	u225_21
  5821     0174  2976               	goto	u225_20
  5822     0175                     u225_21:
  5823     0175  2990               	goto	i1l212
  5824     0176                     u225_20:
  5825     0176                     i1l2581:
  5826                           
  5827                           ;main_master.c: 194:                 if (ano == 99){
  5828     0176  3063               	movlw	99
  5829     0177  065F               	xorwf	_ano,w
  5830     0178  1D03               	btfss	3,2
  5831     0179  297B               	goto	u226_21
  5832     017A  297C               	goto	u226_20
  5833     017B                     u226_21:
  5834     017B  2985               	goto	i1l2587
  5835     017C                     u226_20:
  5836     017C                     i1l2583:
  5837                           
  5838                           ;main_master.c: 195:                     ano = 99;
  5839     017C  3063               	movlw	99
  5840     017D  00DF               	movwf	_ano
  5841     017E                     i1l2585:
  5842                           
  5843                           ;main_master.c: 196:                     Set_year(ano);
  5844     017E  085F               	movf	_ano,w
  5845     017F  120A  158A  25C8  120A  118A  	fcall	i1_Set_year
  5846                           
  5847                           ;main_master.c: 197:                 }
  5848     0184  2917               	goto	i1l2549
  5849     0185                     i1l2587:
  5850                           
  5851                           ;main_master.c: 199:                     ano++;
  5852     0185  3001               	movlw	1
  5853     0186  00F3               	movwf	??_isr
  5854     0187  0873               	movf	??_isr,w
  5855     0188  07DF               	addwf	_ano,f
  5856     0189                     i1l2589:
  5857                           
  5858                           ;main_master.c: 200:                     Set_year(ano);
  5859     0189  085F               	movf	_ano,w
  5860     018A  120A  158A  25C8  120A  118A  	fcall	i1_Set_year
  5861     018F  2917               	goto	i1l2549
  5862     0190                     i1l212:
  5863     0190                     i1l2593:
  5864                           
  5865                           ;main_master.c: 205:         if (PORTBbits.RB1 == 0){
  5866     0190  1283               	bcf	3,5	;RP0=0, select bank0
  5867     0191  1303               	bcf	3,6	;RP1=0, select bank0
  5868     0192  1886               	btfsc	6,1	;volatile
  5869     0193  2995               	goto	u227_21
  5870     0194  2996               	goto	u227_20
  5871     0195                     u227_21:
  5872     0195  29A1               	goto	i1l2597
  5873     0196                     u227_20:
  5874     0196                     i1l2595:
  5875                           
  5876                           ;main_master.c: 206:             bandera = 3;
  5877     0196  3003               	movlw	3
  5878     0197  00F9               	movwf	_bandera
  5879                           
  5880                           ;main_master.c: 207:             _delay((unsigned long)((1)*(8000000/4000.0)));
  5881     0198  3003               	movlw	3
  5882     0199  00F4               	movwf	??_isr+1
  5883     019A  3097               	movlw	151
  5884     019B  00F3               	movwf	??_isr
  5885     019C                     u297_27:
  5886     019C  0BF3               	decfsz	??_isr,f
  5887     019D  299C               	goto	u297_27
  5888     019E  0BF4               	decfsz	??_isr+1,f
  5889     019F  299C               	goto	u297_27
  5890     01A0  29A1               	nop2
  5891     01A1                     i1l2597:
  5892                           
  5893                           ;main_master.c: 209:         if (PORTBbits.RB1 == 1 && bandera == 3){
  5894     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  5895     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  5896     01A3  1C86               	btfss	6,1	;volatile
  5897     01A4  29A6               	goto	u228_21
  5898     01A5  29A7               	goto	u228_20
  5899     01A6                     u228_21:
  5900     01A6  2A03               	goto	i1l238
  5901     01A7                     u228_20:
  5902     01A7                     i1l2599:
  5903     01A7  3003               	movlw	3
  5904     01A8  0679               	xorwf	_bandera,w
  5905     01A9  1D03               	btfss	3,2
  5906     01AA  29AC               	goto	u229_21
  5907     01AB  29AD               	goto	u229_20
  5908     01AC                     u229_21:
  5909     01AC  2A03               	goto	i1l238
  5910     01AD                     u229_20:
  5911     01AD                     i1l2601:
  5912                           
  5913                           ;main_master.c: 210:             if (selector == 1){
  5914     01AD  034A               	decf	_selector,w
  5915     01AE  1D03               	btfss	3,2
  5916     01AF  29B1               	goto	u230_21
  5917     01B0  29B2               	goto	u230_20
  5918     01B1                     u230_21:
  5919     01B1  29CA               	goto	i1l2615
  5920     01B2                     u230_20:
  5921     01B2                     i1l2603:
  5922                           
  5923                           ;main_master.c: 211:                 if (dia == 1){
  5924     01B2  0361               	decf	_dia,w
  5925     01B3  1D03               	btfss	3,2
  5926     01B4  29B6               	goto	u231_21
  5927     01B5  29B7               	goto	u231_20
  5928     01B6                     u231_21:
  5929     01B6  29C0               	goto	i1l2609
  5930     01B7                     u231_20:
  5931     01B7                     i1l2605:
  5932                           
  5933                           ;main_master.c: 212:                     dia = 1;
  5934     01B7  01E1               	clrf	_dia
  5935     01B8  0AE1               	incf	_dia,f
  5936     01B9                     i1l2607:
  5937                           
  5938                           ;main_master.c: 213:                     Set_day(dia);
  5939     01B9  0861               	movf	_dia,w
  5940     01BA  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5941                           
  5942                           ;main_master.c: 214:                 }
  5943     01BF  29C8               	goto	i1l2613
  5944     01C0                     i1l2609:
  5945                           
  5946                           ;main_master.c: 216:                     dia--;
  5947     01C0  3001               	movlw	1
  5948     01C1  02E1               	subwf	_dia,f
  5949     01C2                     i1l2611:
  5950                           
  5951                           ;main_master.c: 217:                     Set_day(dia);
  5952     01C2  0861               	movf	_dia,w
  5953     01C3  120A  158A  2582  120A  118A  	fcall	i1_Set_day
  5954     01C8                     i1l2613:
  5955                           
  5956                           ;main_master.c: 219:                 bandera = 0;
  5957     01C8  01F9               	clrf	_bandera
  5958                           
  5959                           ;main_master.c: 220:             }
  5960     01C9  2A03               	goto	i1l238
  5961     01CA                     i1l2615:
  5962     01CA  3002               	movlw	2
  5963     01CB  064A               	xorwf	_selector,w
  5964     01CC  1D03               	btfss	3,2
  5965     01CD  29CF               	goto	u232_21
  5966     01CE  29D0               	goto	u232_20
  5967     01CF                     u232_21:
  5968     01CF  29E7               	goto	i1l2629
  5969     01D0                     u232_20:
  5970     01D0                     i1l2617:
  5971                           
  5972                           ;main_master.c: 222:                 if (mes == 1){
  5973     01D0  0360               	decf	_mes,w
  5974     01D1  1D03               	btfss	3,2
  5975     01D2  29D4               	goto	u233_21
  5976     01D3  29D5               	goto	u233_20
  5977     01D4                     u233_21:
  5978     01D4  29DE               	goto	i1l2623
  5979     01D5                     u233_20:
  5980     01D5                     i1l2619:
  5981                           
  5982                           ;main_master.c: 223:                     mes = 1;
  5983     01D5  01E0               	clrf	_mes
  5984     01D6  0AE0               	incf	_mes,f
  5985     01D7                     i1l2621:
  5986                           
  5987                           ;main_master.c: 224:                     Set_month(mes);
  5988     01D7  0860               	movf	_mes,w
  5989     01D8  120A  158A  25A5  120A  118A  	fcall	i1_Set_month
  5990                           
  5991                           ;main_master.c: 225:                 }
  5992     01DD  29C8               	goto	i1l2613
  5993     01DE                     i1l2623:
  5994                           
  5995                           ;main_master.c: 227:                     mes--;
  5996     01DE  3001               	movlw	1
  5997     01DF  02E0               	subwf	_mes,f
  5998     01E0                     i1l2625:
  5999                           
  6000                           ;main_master.c: 228:                     Set_month(mes);
  6001     01E0  0860               	movf	_mes,w
  6002     01E1  120A  158A  25A5  120A  118A  	fcall	i1_Set_month
  6003     01E6  29C8               	goto	i1l2613
  6004     01E7                     i1l2629:
  6005     01E7  3003               	movlw	3
  6006     01E8  064A               	xorwf	_selector,w
  6007     01E9  1D03               	btfss	3,2
  6008     01EA  29EC               	goto	u234_21
  6009     01EB  29ED               	goto	u234_20
  6010     01EC                     u234_21:
  6011     01EC  2A03               	goto	i1l226
  6012     01ED                     u234_20:
  6013     01ED                     i1l2631:
  6014                           
  6015                           ;main_master.c: 233:                 if (ano == 0){
  6016     01ED  085F               	movf	_ano,w
  6017     01EE  1D03               	btfss	3,2
  6018     01EF  29F1               	goto	u235_21
  6019     01F0  29F2               	goto	u235_20
  6020     01F1                     u235_21:
  6021     01F1  29FA               	goto	i1l2637
  6022     01F2                     u235_20:
  6023     01F2                     i1l2633:
  6024                           
  6025                           ;main_master.c: 234:                     ano = 0;
  6026     01F2  01DF               	clrf	_ano
  6027     01F3                     i1l2635:
  6028                           
  6029                           ;main_master.c: 235:                     Set_year(ano);
  6030     01F3  085F               	movf	_ano,w
  6031     01F4  120A  158A  25C8  120A  118A  	fcall	i1_Set_year
  6032                           
  6033                           ;main_master.c: 236:                 }
  6034     01F9  29C8               	goto	i1l2613
  6035     01FA                     i1l2637:
  6036                           
  6037                           ;main_master.c: 238:                     ano--;
  6038     01FA  3001               	movlw	1
  6039     01FB  02DF               	subwf	_ano,f
  6040     01FC                     i1l2639:
  6041                           
  6042                           ;main_master.c: 239:                     Set_year(ano);
  6043     01FC  085F               	movf	_ano,w
  6044     01FD  120A  158A  25C8  120A  118A  	fcall	i1_Set_year
  6045     0202  29C8               	goto	i1l2613
  6046     0203                     i1l226:	
  6047                           ;main_master.c: 243:         }
  6048                           
  6049     0203                     i1l238:
  6050     0203  0876               	movf	??_isr+3,w
  6051     0204  008A               	movwf	10
  6052     0205  0E75               	swapf	??_isr+2,w
  6053     0206  0083               	movwf	3
  6054     0207  0EFE               	swapf	btemp,f
  6055     0208  0E7E               	swapf	btemp,w
  6056     0209  0009               	retfie
  6057     020A                     __end_of_isr:
  6058                           
  6059                           	psect	intentry
  6060     0004                     __pintentry:	
  6061                           ;incstack = 0
  6062                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6063                           
  6064     0004                     interrupt_function:
  6065     007E                     saved_w	set	btemp
  6066     0004  00FE               	movwf	btemp
  6067     0005  0E03               	swapf	3,w
  6068     0006  00F5               	movwf	??_isr+2
  6069     0007  080A               	movf	10,w
  6070     0008  00F6               	movwf	??_isr+3
  6071     0009  120A  118A  281F   	ljmp	_isr
  6072                           
  6073                           	psect	text35
  6074     0DC8                     __ptext35:	
  6075 ;; *************** function i1_Set_year *****************
  6076 ;; Defined at:
  6077 ;;		line 352 in file "main_master.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  year            1    wreg     unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  year            1    2[COMMON] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6091 ;;      Params:         0       0       0       0       0
  6092 ;;      Locals:         1       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0
  6094 ;;      Totals:         1       0       0       0       0
  6095 ;;Total ram usage:        1 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 1
  6098 ;; This function calls:
  6099 ;;		i1_Dec_to_Bcd
  6100 ;;		i1_I2C_Start
  6101 ;;		i1_I2C_Stop
  6102 ;;		i1_I2C_Write
  6103 ;; This function is called by:
  6104 ;;		_isr
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108     0DC8                     i1_Set_year:	
  6109                           ;psect for function i1_Set_year
  6110                           
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in i1_Set_year: [wreg+status,2+status,0+pclath+cstack]
  6114                           ;i1Set_year@year stored from wreg
  6115     0DC8  00F2               	movwf	i1Set_year@year
  6116     0DC9                     i1l2373:
  6117                           
  6118                           ;main_master.c: 353:     I2C_Start();
  6119     0DC9  120A  158A  2464  120A  158A  	fcall	i1_I2C_Start
  6120     0DCE                     i1l2375:
  6121                           
  6122                           ;main_master.c: 354:     I2C_Write(0xD0);
  6123     0DCE  30D0               	movlw	208
  6124     0DCF  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6125     0DD4                     i1l2377:
  6126                           
  6127                           ;main_master.c: 355:     I2C_Write(0x06);
  6128     0DD4  3006               	movlw	6
  6129     0DD5  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6130     0DDA                     i1l2379:
  6131                           
  6132                           ;main_master.c: 356:     I2C_Write(Dec_to_Bcd(year));
  6133     0DDA  0872               	movf	i1Set_year@year,w
  6134     0DDB  120A  158A  24D5  120A  158A  	fcall	i1_Dec_to_Bcd
  6135     0DE0  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6136     0DE5                     i1l2381:
  6137                           
  6138                           ;main_master.c: 357:     I2C_Stop();
  6139     0DE5  120A  158A  246E  120A  158A  	fcall	i1_I2C_Stop
  6140     0DEA                     i1l271:
  6141     0DEA  0008               	return
  6142     0DEB                     __end_ofi1_Set_year:
  6143                           
  6144                           	psect	text36
  6145     0DA5                     __ptext36:	
  6146 ;; *************** function i1_Set_month *****************
  6147 ;; Defined at:
  6148 ;;		line 344 in file "main_master.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  month           1    wreg     unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  month           1    2[COMMON] unsigned char 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0, pclath, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6162 ;;      Params:         0       0       0       0       0
  6163 ;;      Locals:         1       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0
  6165 ;;      Totals:         1       0       0       0       0
  6166 ;;Total ram usage:        1 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 1
  6169 ;; This function calls:
  6170 ;;		i1_Dec_to_Bcd
  6171 ;;		i1_I2C_Start
  6172 ;;		i1_I2C_Stop
  6173 ;;		i1_I2C_Write
  6174 ;; This function is called by:
  6175 ;;		_isr
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179     0DA5                     i1_Set_month:	
  6180                           ;psect for function i1_Set_month
  6181                           
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in i1_Set_month: [wreg+status,2+status,0+pclath+cstack]
  6185                           ;i1Set_month@month stored from wreg
  6186     0DA5  00F2               	movwf	i1Set_month@month
  6187     0DA6                     i1l2363:
  6188                           
  6189                           ;main_master.c: 345:     I2C_Start();
  6190     0DA6  120A  158A  2464  120A  158A  	fcall	i1_I2C_Start
  6191     0DAB                     i1l2365:
  6192                           
  6193                           ;main_master.c: 346:     I2C_Write(0xD0);
  6194     0DAB  30D0               	movlw	208
  6195     0DAC  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6196     0DB1                     i1l2367:
  6197                           
  6198                           ;main_master.c: 347:     I2C_Write(0x05);
  6199     0DB1  3005               	movlw	5
  6200     0DB2  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6201     0DB7                     i1l2369:
  6202                           
  6203                           ;main_master.c: 348:     I2C_Write(Dec_to_Bcd(month));
  6204     0DB7  0872               	movf	i1Set_month@month,w
  6205     0DB8  120A  158A  24D5  120A  158A  	fcall	i1_Dec_to_Bcd
  6206     0DBD  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6207     0DC2                     i1l2371:
  6208                           
  6209                           ;main_master.c: 349:     I2C_Stop();
  6210     0DC2  120A  158A  246E  120A  158A  	fcall	i1_I2C_Stop
  6211     0DC7                     i1l268:
  6212     0DC7  0008               	return
  6213     0DC8                     __end_ofi1_Set_month:
  6214                           
  6215                           	psect	text37
  6216     0D82                     __ptext37:	
  6217 ;; *************** function i1_Set_day *****************
  6218 ;; Defined at:
  6219 ;;		line 336 in file "main_master.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  day             1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  day             1    2[COMMON] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6233 ;;      Params:         0       0       0       0       0
  6234 ;;      Locals:         1       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0
  6236 ;;      Totals:         1       0       0       0       0
  6237 ;;Total ram usage:        1 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 1
  6240 ;; This function calls:
  6241 ;;		i1_Dec_to_Bcd
  6242 ;;		i1_I2C_Start
  6243 ;;		i1_I2C_Stop
  6244 ;;		i1_I2C_Write
  6245 ;; This function is called by:
  6246 ;;		_isr
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     0D82                     i1_Set_day:	
  6251                           ;psect for function i1_Set_day
  6252                           
  6253                           
  6254                           ;incstack = 0
  6255                           ; Regs used in i1_Set_day: [wreg+status,2+status,0+pclath+cstack]
  6256                           ;i1Set_day@day stored from wreg
  6257     0D82  00F2               	movwf	i1Set_day@day
  6258     0D83                     i1l2353:
  6259                           
  6260                           ;main_master.c: 337:     I2C_Start();
  6261     0D83  120A  158A  2464  120A  158A  	fcall	i1_I2C_Start
  6262     0D88                     i1l2355:
  6263                           
  6264                           ;main_master.c: 338:     I2C_Write(0xD0);
  6265     0D88  30D0               	movlw	208
  6266     0D89  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6267     0D8E                     i1l2357:
  6268                           
  6269                           ;main_master.c: 339:     I2C_Write(0x04);
  6270     0D8E  3004               	movlw	4
  6271     0D8F  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6272     0D94                     i1l2359:
  6273                           
  6274                           ;main_master.c: 340:     I2C_Write(Dec_to_Bcd(day));
  6275     0D94  0872               	movf	i1Set_day@day,w
  6276     0D95  120A  158A  24D5  120A  158A  	fcall	i1_Dec_to_Bcd
  6277     0D9A  120A  158A  24B9  120A  158A  	fcall	i1_I2C_Write
  6278     0D9F                     i1l2361:
  6279                           
  6280                           ;main_master.c: 341:     I2C_Stop();
  6281     0D9F  120A  158A  246E  120A  158A  	fcall	i1_I2C_Stop
  6282     0DA4                     i1l265:
  6283     0DA4  0008               	return
  6284     0DA5                     __end_ofi1_Set_day:
  6285                           
  6286                           	psect	text38
  6287     0CB9                     __ptext38:	
  6288 ;; *************** function i1_I2C_Write *****************
  6289 ;; Defined at:
  6290 ;;		line 64 in file "i2c.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  data            1    wreg     unsigned char 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  data            1    0[COMMON] unsigned char 
  6295 ;;  b_ok            2    0        short 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  2    0[None  ] short 
  6298 ;; Registers used:
  6299 ;;		wreg
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6305 ;;      Params:         0       0       0       0       0
  6306 ;;      Locals:         1       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0
  6308 ;;      Totals:         1       0       0       0       0
  6309 ;;Total ram usage:        1 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		i1_Set_day
  6315 ;;		i1_Set_month
  6316 ;;		i1_Set_year
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320     0CB9                     i1_I2C_Write:	
  6321                           ;psect for function i1_I2C_Write
  6322                           
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in i1_I2C_Write: [wreg]
  6326                           ;i1I2C_Write@data stored from wreg
  6327     0CB9  00F0               	movwf	i1I2C_Write@data
  6328     0CBA                     i1l2199:
  6329                           
  6330                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  6331     0CBA  0870               	movf	i1I2C_Write@data,w
  6332     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  6333     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  6334     0CBD  0093               	movwf	19	;volatile
  6335     0CBE                     i1l55:	
  6336                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  6337                           
  6338     0CBE  1D8C               	btfss	12,3	;volatile
  6339     0CBF  2CC1               	goto	u183_21
  6340     0CC0  2CC2               	goto	u183_20
  6341     0CC1                     u183_21:
  6342     0CC1  2CBE               	goto	i1l55
  6343     0CC2                     u183_20:
  6344     0CC2                     i1l57:
  6345                           
  6346                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  6347     0CC2  118C               	bcf	12,3	;volatile
  6348     0CC3                     i1l2201:
  6349     0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  6350     0CC4  1303               	bcf	3,6	;RP1=0, select bank1
  6351     0CC5  0811               	movf	17,w	;volatile
  6352     0CC6                     i1l58:
  6353     0CC6  0008               	return
  6354     0CC7                     __end_ofi1_I2C_Write:
  6355                           
  6356                           	psect	text39
  6357     0C6E                     __ptext39:	
  6358 ;; *************** function i1_I2C_Stop *****************
  6359 ;; Defined at:
  6360 ;;		line 34 in file "i2c.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		None
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6374 ;;      Params:         0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0
  6376 ;;      Temps:          0       0       0       0       0
  6377 ;;      Totals:         0       0       0       0       0
  6378 ;;Total ram usage:        0 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		i1_Set_day
  6384 ;;		i1_Set_month
  6385 ;;		i1_Set_year
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389     0C6E                     i1_I2C_Stop:	
  6390                           ;psect for function i1_I2C_Stop
  6391                           
  6392     0C6E                     i1l2197:	
  6393                           ;incstack = 0
  6394                           ; Regs used in i1_I2C_Stop: []
  6395                           
  6396                           
  6397                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  6398     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  6399     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  6400     0C70  1511               	bsf	17,2	;volatile
  6401     0C71                     i1l31:	
  6402                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  6403                           
  6404     0C71  1283               	bcf	3,5	;RP0=0, select bank0
  6405     0C72  1D8C               	btfss	12,3	;volatile
  6406     0C73  2C75               	goto	u182_21
  6407     0C74  2C76               	goto	u182_20
  6408     0C75                     u182_21:
  6409     0C75  2C71               	goto	i1l31
  6410     0C76                     u182_20:
  6411     0C76                     i1l33:
  6412                           
  6413                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  6414     0C76  118C               	bcf	12,3	;volatile
  6415     0C77                     i1l34:
  6416     0C77  0008               	return
  6417     0C78                     __end_ofi1_I2C_Stop:
  6418                           
  6419                           	psect	text40
  6420     0C64                     __ptext40:	
  6421 ;; *************** function i1_I2C_Start *****************
  6422 ;; Defined at:
  6423 ;;		line 27 in file "i2c.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		None
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		i1_Set_day
  6447 ;;		i1_Set_month
  6448 ;;		i1_Set_year
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452     0C64                     i1_I2C_Start:	
  6453                           ;psect for function i1_I2C_Start
  6454                           
  6455     0C64                     i1l2195:	
  6456                           ;incstack = 0
  6457                           ; Regs used in i1_I2C_Start: []
  6458                           
  6459                           
  6460                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  6461     0C64  1683               	bsf	3,5	;RP0=1, select bank1
  6462     0C65  1303               	bcf	3,6	;RP1=0, select bank1
  6463     0C66  1411               	bsf	17,0	;volatile
  6464     0C67                     i1l25:	
  6465                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  6466                           
  6467     0C67  1283               	bcf	3,5	;RP0=0, select bank0
  6468     0C68  1D8C               	btfss	12,3	;volatile
  6469     0C69  2C6B               	goto	u181_21
  6470     0C6A  2C6C               	goto	u181_20
  6471     0C6B                     u181_21:
  6472     0C6B  2C67               	goto	i1l25
  6473     0C6C                     u181_20:
  6474     0C6C                     i1l27:
  6475                           
  6476                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  6477     0C6C  118C               	bcf	12,3	;volatile
  6478     0C6D                     i1l28:
  6479     0C6D  0008               	return
  6480     0C6E                     __end_ofi1_I2C_Start:
  6481                           
  6482                           	psect	text41
  6483     0CD5                     __ptext41:	
  6484 ;; *************** function i1_Dec_to_Bcd *****************
  6485 ;; Defined at:
  6486 ;;		line 360 in file "main_master.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  dec_number      1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  dec_number      1    0[COMMON] unsigned char 
  6491 ;;  bcd_number      1    1[COMMON] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       0       0       0       0
  6502 ;;      Locals:         2       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0
  6504 ;;      Totals:         2       0       0       0       0
  6505 ;;Total ram usage:        2 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		i1_Set_day
  6511 ;;		i1_Set_month
  6512 ;;		i1_Set_year
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516     0CD5                     i1_Dec_to_Bcd:	
  6517                           ;psect for function i1_Dec_to_Bcd
  6518                           
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in i1_Dec_to_Bcd: [wreg+status,2+status,0]
  6522                           ;i1Dec_to_Bcd@dec_number stored from wreg
  6523     0CD5  00F0               	movwf	i1Dec_to_Bcd@dec_number
  6524     0CD6                     i1l2205:
  6525                           
  6526                           ;main_master.c: 361:     uint8_t bcd_number;;main_master.c: 362:     bcd_number = 0;
  6527     0CD6  01F1               	clrf	i1Dec_to_Bcd@bcd_number
  6528     0CD7                     i1l2207:
  6529                           
  6530                           ;main_master.c: 364:         if (dec_number >= 10){
  6531     0CD7  300A               	movlw	10
  6532     0CD8  0270               	subwf	i1Dec_to_Bcd@dec_number,w
  6533     0CD9  1C03               	skipc
  6534     0CDA  2CDC               	goto	u184_21
  6535     0CDB  2CDD               	goto	u184_20
  6536     0CDC                     u184_21:
  6537     0CDC  2CE4               	goto	i1l2211
  6538     0CDD                     u184_20:
  6539     0CDD                     i1l2209:
  6540                           
  6541                           ;main_master.c: 365:             dec_number = dec_number - 10;
  6542     0CDD  0870               	movf	i1Dec_to_Bcd@dec_number,w
  6543     0CDE  3EF6               	addlw	246
  6544     0CDF  00F0               	movwf	i1Dec_to_Bcd@dec_number
  6545                           
  6546                           ;main_master.c: 366:             bcd_number = bcd_number + 0b00010000;
  6547     0CE0  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  6548     0CE1  3E10               	addlw	16
  6549     0CE2  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  6550                           
  6551                           ;main_master.c: 367:         }
  6552     0CE3  2CD7               	goto	i1l2207
  6553     0CE4                     i1l2211:
  6554                           
  6555                           ;main_master.c: 369:             bcd_number = bcd_number + dec_number;
  6556     0CE4  0870               	movf	i1Dec_to_Bcd@dec_number,w
  6557     0CE5  0771               	addwf	i1Dec_to_Bcd@bcd_number,w
  6558     0CE6  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  6559     0CE7                     i1l2213:	
  6560                           ;main_master.c: 370:             break;
  6561                           
  6562                           
  6563                           ;main_master.c: 373:     return bcd_number;
  6564     0CE7  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  6565     0CE8                     i1l279:
  6566     0CE8  0008               	return
  6567     0CE9                     __end_ofi1_Dec_to_Bcd:
  6568     007E                     btemp	set	126	;btemp
  6569     007E                     wtemp0	set	126
  6570                           
  6571                           	psect	idloc
  6572                           
  6573                           ;Config register IDLOC0 @ 0x2000
  6574                           ;	unspecified, using default values
  6575     2000                     	org	8192
  6576     2000  3FFF               	dw	16383
  6577                           
  6578                           ;Config register IDLOC1 @ 0x2001
  6579                           ;	unspecified, using default values
  6580     2001                     	org	8193
  6581     2001  3FFF               	dw	16383
  6582                           
  6583                           ;Config register IDLOC2 @ 0x2002
  6584                           ;	unspecified, using default values
  6585     2002                     	org	8194
  6586     2002  3FFF               	dw	16383
  6587                           
  6588                           ;Config register IDLOC3 @ 0x2003
  6589                           ;	unspecified, using default values
  6590     2003                     	org	8195
  6591     2003  3FFF               	dw	16383
  6592                           
  6593                           	psect	config
  6594                           
  6595                           ;Config register CONFIG1 @ 0x2007
  6596                           ;	Oscillator Selection bits
  6597                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6598                           ;	Watchdog Timer Enable bit
  6599                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6600                           ;	Power-up Timer Enable bit
  6601                           ;	PWRTE = OFF, PWRT disabled
  6602                           ;	RE3/MCLR pin function select bit
  6603                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6604                           ;	Code Protection bit
  6605                           ;	CP = OFF, Program memory code protection is disabled
  6606                           ;	Data Code Protection bit
  6607                           ;	CPD = OFF, Data memory code protection is disabled
  6608                           ;	Brown Out Reset Selection bits
  6609                           ;	BOREN = OFF, BOR disabled
  6610                           ;	Internal External Switchover bit
  6611                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6612                           ;	Fail-Safe Clock Monitor Enabled bit
  6613                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6614                           ;	Low Voltage Programming Enable bit
  6615                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6616                           ;	In-Circuit Debugger Mode bit
  6617                           ;	DEBUG = 0x1, unprogramme  6618     2007                     	org	8199
  6619     2007  20D4               	dw	8404
  6620                           
  6621                           ;Config register CONFIG2 @ 0x2008
  6622                           ;	Brown-out Reset Selection bit
  6623                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6624                           ;	Flash Program Memory Self Write Enable bits
  6625                           ;	WRT = OFF, Write protection off
  6626     2008                     	org	8200
  6627     2008  3FFF               	dw	16383

Data Sizes:
    Strings     53
    Constant    10
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     41      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_11(CODE[4]), STR_9(CODE[18]), STR_7(CODE[18]), STR_5(CODE[18]), 
		 -> STR_3(CODE[18]), STR_2(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[2]), 
		 -> buffer(BANK0[20]), STR_1(CODE[4]), 

    Read_Fecha@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK0[1]), 

    Read_Fecha@mo	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK0[1]), 

    Read_Fecha@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK0[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> hora(BANK0[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minuto(BANK0[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundo(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_day
    _isr->i1_Set_month
    _isr->i1_Set_year
    i1_Set_year->i1_Dec_to_Bcd
    i1_Set_month->i1_Dec_to_Bcd
    i1_Set_day->i1_Dec_to_Bcd

Critical Paths under _main in BANK0

    _main->_Slave1
    _setup->_I2C_Init_Master
    _Slave1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Set_year->_Dec_to_Bcd
    _Set_sec->_Dec_to_Bcd
    _Set_month->_Dec_to_Bcd
    _Set_hour->_Dec_to_Bcd
    _Set_day_week->_Dec_to_Bcd
    _Set_day->_Dec_to_Bcd
    _Read_Time->_Bcd_to_Dec
    _Read_Fecha->_Bcd_to_Dec
    _Read->_I2C_Write
    _Bcd_to_Dec->___bmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   15694
                                             35 BANK0      6     6      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Read_Fecha
                          _Read_Time
                            _Set_day
                       _Set_day_week
                           _Set_hour
                          _Set_month
                            _Set_sec
                           _Set_year
                             _Slave1
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      93
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Slave1                                               2     2      0    6141
                                             33 BANK0      2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    3191
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1535
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day_week                                         1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              1     1      0     270
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     198
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2     653
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Fecha                                           3     1      2     653
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 3     3      0     109
                                              1 BANK0      3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      41
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     561
                                              3 COMMON     4     4      0
                          i1_Set_day
                        i1_Set_month
                         i1_Set_year
 ---------------------------------------------------------------------------------
 (6) i1_Set_year                                           1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_month                                          1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_day                                            1     1      0     187
                                              2 COMMON     1     1      0
                       i1_Dec_to_Bcd
                        i1_I2C_Start
                         i1_I2C_Stop
                        i1_I2C_Write
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Write                                          3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Dec_to_Bcd                                         2     2      0     136
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Fecha
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_day_week
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Slave1
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setup
     _I2C_Init_Master
   _sprintf

 _isr (ROOT)
   i1_Set_day
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write
   i1_Set_month
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write
   i1_Set_year
     i1_Dec_to_Bcd
     i1_I2C_Start
     i1_I2C_Stop
     i1_I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 13:06:35 2023

                       pc 0002            ___bmul@product 0022                        l22 07F6  
                      l31 0C8F                        l40 0C81                        l25 0C85  
                      l33 0C94                        l34 0C95                        l51 0C9F  
                      l27 0C8A                        l52 0CA0                        l28 0C8B  
                      l61 0CA4                        l37 0C7B                        l63 0CA9  
                      l39 0C80                        l55 0CCC                        l64 0CAB  
                      l49 0C9A                        l57 0CD0                        l58 0CD4  
              _Bcd_to_Dec 0D46                        fsr 0004       ___wmul@multiplicand 0022  
             ?i1_I2C_Stop 0070                       l300 0D80                       l302 0D81  
                     l320 0FC3                       l305 0D45                       l241 0E0F  
                     l250 0F55                       l314 06BD                       l171 03E3  
                     l308 0CB8                       l244 07CB                       l317 0622  
                     l253 0ED2                       l262 0E5D                       l326 0749  
                     l430 0401                       l247 0F8A                       l271 0EF9  
                     l265 0E36                       l282 0D61                       l442 048E  
                     l259 0E84                       l451 04F2                       l268 0EAB  
                     l444 046A                       l285 078D                       l294 0D6B  
                     l295 0D6C                       l279 0D12                       l296 0D72  
                     l472 0F08                       l297 0D73                       l298 0D79  
                     l474 0F20                       l299 0D7A                       l468 05BD  
                     l744 0703                       l498 0D29                       l754 0FFF  
                     l925 0CFC                       _dia 0061                       _ano 005F  
                     _dow 0078                       _mes 0060                       _isr 001F  
                     fsr0 0004                       indf 0000                _Dec_to_Bcd 0CFD  
            ?i1_I2C_Start 0070              ?i1_I2C_Write 0070                      l3001 0DFC  
                    l3011 0E03                      l3003 0DFF                      l3101 074F  
                    l3021 0E08                      l3013 0E04                      l3005 0E00  
                    l3031 05DE                      l3111 0781                      l3103 0755  
                    l3023 0E09                      l3015 0E05                      l3007 0E01  
                    l3033 05E4                      l3025 05BE                      l3041 0EB4  
                    l3113 0786                      l3105 075D                      l3017 0E06  
                    l3009 0E02                      l3121 0223                      l3035 061B  
                    l3027 05C4                      l3115 0F59                      l3051 0E18  
                    l3043 0EBA                      l3107 0765                      l3019 0E07  
                    l3131 0246                      l3123 022E                      l3037 0CAC  
                    l3029 05CE                      l3117 0F24                      l3053 0E1E  
                    l3061 0E66                      l3045 0EC0                      l3109 0776  
                    l3141 0264                      l3133 024C                      l3125 0234  
                    l3055 0E24                      l3071 0E3F                      l3063 0E6C  
                    l3047 0ECD                      l3039 0EAF                      l3151 02B0  
                    l3143 0270                      l3135 0252                      l3127 023A  
                    l3119 020A                      l2177 0D49                      l3057 0E31  
                    l3049 0E13                      l3073 0E45                      l3065 0E72  
                    l3081 0E8D                      l3241 0414                      l3161 0307  
                    l3153 02E4                      l3145 027A                      l3137 0258  
                    l3129 0240                      l2179 0D60                      l3075 0E4B  
                    l3067 0E7F                      l3059 0E61                      l3083 0E93  
                    l3091 0EDB                      l3243 0480                      l3171 0355  
                    l3163 0326                      l3155 02EE                      l3147 0299  
                    l3139 025F                      l2701 0D70                      l3077 0E58  
                    l3069 0E3A                      l3085 0E99                      l3093 0EE1  
                    l3181 03A3                      l3173 0374                      l3165 033B  
                    l3149 02A4                      l3157 02FA                      l2703 0D77  
                    l2711 0C78                      l3087 0EA6                      l3079 0E88  
                    l3095 0EE7                      l3183 03C2                      l3175 0389  
                    l3159 02FF                      l3167 0347                      l2705 0D7E  
                    l2713 0C96                      l2721 0CA1                      l3097 0EF4  
                    l3089 0ED6                      l2801 0687                      l3185 03D7  
                    l3169 034D                      l3177 0395                      l2731 0D34  
                    l1931 0D1B                      l2723 0CAA                      l2707 0C82  
                    l2715 0CCA                      l2811 06AC                      l2803 068A  
                    l3099 074A                      l3179 039B                      l2733 0D37  
                    l1933 0D1F                      l2709 0C8C                      l2717 0CD1  
                    l2813 06AF                      l2805 0690                      l2741 0F95  
                    l2821 0725                      l1941 06BE                      l2901 0520  
                    l2735 0D42                      l2727 0D2D                      l1935 0D21  
                    l1927 0D16                      l2815 06B5                      l2807 0699  
                    l2751 0FB6                      l2743 0FA3                      l2823 072D  
                    l1951 06D6                      l1943 06C2                      l2911 0542  
                    l2903 0526                      l2831 03F8                      l2729 0D2E  
                    l1937 0D28                      l1929 0D17                      l2809 069F  
                    l2753 0FB9                      l2745 0FA6                      l2737 0F8E  
                    l2817 0704                      l1961 06F9                      l1953 06DA  
                    l1945 06C8                      l2761 0CF3                      l2921 0562  
                    l2913 0547                      l2905 052B                      l2841 0419  
                    l2833 03FD                      l2825 03EA                      l2755 0FC0  
                    l2747 0FAD                      l2739 0F94                      l2819 0709  
                    l1955 06EB                      l1947 06CB                      l1963 06FF  
                    l1971 0FCF                      l2771 0EFE                      l2763 0CF9  
                    l2931 05A0                      l2915 054B                      l2907 052F  
                    l2923 0566                      l2851 0459                      l2843 0429  
                    l2835 0402                      l2827 03ED                      l2749 0FB0  
                    l1957 06F1                      l1949 06D2                      l1981 0FEE  
                    l1973 0FD6                      l2773 0F02                      l2765 0CFB  
                    l2757 0CEC                      l2925 0569                      l2917 0557  
                    l2909 053C                      l2861 049E                      l2845 042D  
                    l2829 03F3                      l2933 05A9                      l2951 0796  
                    l1959 06F2                      l1983 0FF5                      l1975 0FDA  
                    l1967 0FC4                      l2775 0F0F                      l2759 0CED  
                    l2927 0597                      l2919 055D                      l2863 04A2  
                    l2871 04B8                      l2935 05B9                      l2847 0442  
                    l2855 046C                      l2839 0406                      l2791 07E8  
                    l2783 07CF                      l2697 0D65                      l2961 07B7  
                    l2953 079C                      l1977 0FDE                      l1969 0FCC  
                    l1985 0FFB                      l2777 0F16                      l2769 0EFA  
                    l2929 059C                      l2881 04D6                      l2865 04A6  
                    l2857 0492                      l2849 0455                      l2793 07ED  
                    l2785 07D3                      l2699 0D69                      l2963 07BC  
                    l2955 07A4                      l2947 0791                      l2971 0D00  
                    l1979 0FE8                      l2779 0F1C                      l2891 0509  
                    l2883 04E0                      l2859 049A                      l2867 04AC  
                    l2795 07F2                      l2787 07DD                      l2965 07C1  
                    l2957 07A9                      l2949 0791                      l2973 0D01  
                    l2797 0675                      l2893 050D                      l2885 04E6  
                    l2877 04BA                      l2869 04B4                      l2789 07E0  
                    l2967 07C8                      l2959 07AF                      l2975 0D07  
                    l2799 067A                      l2895 0511                      l2887 04EC  
                    l2991 0DF7                      l2983 0DEB                      l2977 0D0E  
                    l2897 0517                      l2889 04FD                      l2993 0DF8  
                    l2985 0DEF                      l2979 0D11                      l2899 051C  
                    l2995 0DF9                      l2987 0DF3                      l2997 0DFA  
                    l2989 0DF4                      l2999 0DFB                      ?_isr 0070  
                    STR_1 0663                      STR_2 064F                      STR_3 063D  
                    STR_4 0670                      STR_5 063D                      STR_6 066A  
                    STR_7 063D                      STR_8 066D                      STR_9 063D  
                    u1400 06DA                      u1401 06D9                      u1420 06EB  
                    u1500 0FFB                      u1421 06EA                      u1501 0FFA  
                    u1415 06DB                      u1360 0D1B                      u2400 0C8A  
                    u1440 06FF                      u1361 0D1A                      u2401 0C89  
                    u1441 06FE                      u1425 06E7                      u1370 0D28  
                    u2410 0C94                      u1450 0FCC                      u1371 0D27  
                    u2411 0C93                      u1435 06F3                      u1451 0FCB  
                    u2420 0C80                      u1380 06C8                      u2421 0C7F  
                    u1381 06C7                      u2430 0C9F                      u1470 0FDE  
                    u2431 0C9E                      u1471 0FDD                      u2360 0D69  
                    u2440 0CD0                      u2600 0737                      u1480 0FE8  
                    u2520 0F1C                      u2361 0D68                      u2441 0CCF  
                    u1481 0FE7                      u1465 0FD0                      u2521 0F1B  
                    u2505 0F09                      u2370 0D70                      u2450 0CA9  
                    u2610 0749                      u2530 07E8                      u2371 0D6F  
                    u2451 0CA8                      u2611 0748                      u1395 06CC  
                    u2515 0F10                      u2531 07E7                      u2380 0D77  
                    u2700 04EC                      u2620 03F3                      u2540 07F2  
                    u2381 0D76                      u1485 0FE4                      u2701 04EB  
                    u2621 03F2                      u2541 07F1                      u2390 0D7E  
                    u2550 067A                      u2470 0CF3                      u2710 04FD  
                    u2630 0429                      u2391 0D7D                      u2551 0679  
                    u1495 0FEF                      u2471 0CF2                      u2711 04FC  
                    u2631 0428                      u2480 0CF9                      u2800 05B9  
                    u2720 0511                      u2640 0469                      u2465 0F98  
                    u2481 0CF8                      u2801 05B8                      u2721 0510  
                    u2641 0468                      u2810 0D07                      u2570 069F  
                    u2490 0F02                      u2730 0517                      u2650 0492  
                    u2811 0D06                      u2571 069E                      u2491 0F01  
                    u2731 0516                      u2715 04F9                      u2651 0491  
                    u2740 0526                      u2660 04A2                      u2820 025F  
                    u2565 0680                      u2741 0525                      u2661 04A1  
                    u2821 025E                      u2590 0713                      u2750 053B  
                    u2670 04D5                      u2830 02FF                      u2751 053A  
                    u2671 04D4                      u2831 02FE                      u2760 0542  
                    u2680 04E0                      u2840 034D                      u2585 06A5  
                    u2761 0541                      u2681 04DF                      u2841 034C  
                    u2770 0557                      u2690 04E6                      u2850 039B  
                    u2907 05CA                      u1795 0D51                      u2771 0556  
                    u2691 04E5                      u2675 04D1                      u2851 039A  
                    u2780 055D                      u2917 05DA                      u2781 055C  
                    u2790 05A9                      i1l31 0C71                      u2927 05E8  
                    u2791 05A8                      i1l25 0C67                      i1l33 0C76  
                    u2937 061F                      i1l34 0C77                      i1l27 0C6C  
                    u2947 0D3D                      u2867 078A                      i1l28 0C6D  
                    u2877 0FAA                      i1l55 0CBE                      u2887 0FBD  
                    i1l57 0CC2                      u2897 07C5                      i1l58 0CC6  
                    _Read 078E         ?_Lcd_Write_String 0025                      _main 020A  
                    _hora 0062          __end_of_I2C_Nack 0CA1          __end_of_I2C_Read 0CAC  
                    btemp 007E          __end_of_I2C_Stop 0C96                      start 000C  
      ??_Lcd_Write_String 0027          ?_I2C_Init_Master 0070           __end_of_Lcd_Cmd 0D46  
              Read_Time@h 0029                Read_Time@m 0028                Read_Time@s 002A  
       ___bmul@multiplier 0023               Read@address 0022                     ??_isr 0073  
         __end_of_Set_day 0E37           __end_of_Set_sec 0ED3                     ?_Read 0070  
                   ?_main 0070                     STR_10 0667                     STR_11 065F  
                   _ANSEL 0188           __end_of___lwdiv 0704                     i1l212 0190  
                   i1l226 0203                     i1l219 0167                     i1l238 0203  
                   i1l271 0DEA                     i1l265 0DA4           __end_of___lwmod 1000  
                   i1l268 0DC7                     i1l188 0063                     i1l279 0CE8  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088           __end_of_dpowers 063D  
         __end_of_isdigit 0CFD                     _setup 0DEB               Read_Fecha@d 002A  
             Read_Fecha@y 0029         __end_of_I2C_Start 0C8C         __end_of_I2C_Write 0CD5  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 05BE               ?i1_Set_year 0070          __end_of_Lcd_Init 0623  
        __end_of_Lcd_Port 0D82           __initialization 000F              __end_of_Read 07CC  
              _Read_Fecha 0F21              __end_of_main 03E7               ?_Bcd_to_Dec 0070  
                  ??_Read 0021                    ??_main 0043    i1Dec_to_Bcd@bcd_number 0071  
        __end_of_Set_hour 0E85          __end_of_Set_year 0EFA                Set_day@day 0022  
             ?_Dec_to_Bcd 0070                Set_sec@sec 0022                    ?_setup 0070  
                  _ANSELH 0189    i1Dec_to_Bcd@dec_number 0070                    i1l2201 0CC3  
                  i1l2211 0CE4                    i1l2213 0CE7                    i1l2205 0CD6  
                  i1l2207 0CD7                    u200_20 0083                    i1l2209 0CDD  
                  u200_21 0082                    i1l2501 0094                    i1l2511 00B2  
                  i1l2503 009A                    u201_20 0088                    i1l2361 0D9F  
                  i1l2353 0D83                    i1l2601 01AD                    i1l2521 00CC  
                  i1l2513 00B4                    i1l2505 00A0                    u201_21 0087  
                  i1l2195 0C64                    i1l2355 0D88                    i1l2371 0DC2  
                  i1l2363 0DA6                    i1l2611 01C2                    i1l2603 01B2  
                  i1l2531 00E6                    i1l2523 00D2                    i1l2515 00BB  
                  i1l2507 00A6                    i1l2451 001F                    i1l2197 0C6E  
                  i1l2357 0D8E                    i1l2365 0DAB                    i1l2381 0DE5  
                  i1l2373 0DC9                    i1l2621 01D7                    i1l2613 01C8  
                  i1l2605 01B7                    i1l2541 0104                    i1l2533 00ED  
                  i1l2525 00D8                    i1l2517 00BF                    i1l2509 00AC  
                  i1l2461 003B                    i1l2453 0023                    i1l2199 0CBA  
                  i1l2359 0D94                    i1l2367 0DB1                    i1l2375 0DCE  
                  i1l2631 01ED                    i1l2623 01DE                    i1l2607 01B9  
                  i1l2615 01CA                    i1l2543 0106                    i1l2535 00F1  
                  i1l2527 00DE                    i1l2519 00C6                    i1l2551 0119  
                  i1l2471 004E                    i1l2463 0040                    i1l2455 002A  
                  u210_20 00D2                    u202_20 008E                    i1l2369 0DB7  
                  i1l2377 0DD4                    i1l2633 01F2                    i1l2625 01E0  
                  i1l2617 01D0                    i1l2609 01C0                    i1l2561 0138  
                  i1l2553 011F                    i1l2545 010D                    i1l2529 00E4  
                  i1l2537 00F8                    u210_21 00D1                    u202_21 008D  
                  i1l2481 005A                    i1l2465 0045                    i1l2457 002C  
                  i1l2379 0DDA                    i1l2635 01F3                    i1l2619 01D5  
                  i1l2571 0156                    i1l2563 013E                    i1l2555 0125  
                  i1l2547 0111                    i1l2539 00FE                    i1l2491 0078  
                  i1l2483 0060                    i1l2475 0051                    i1l2467 0047  
                  i1l2459 0035                    i1l2637 01FA                    i1l2629 01E7  
                  i1l2581 0176                    i1l2573 015C                    i1l2565 0144  
                  i1l2557 0127                    i1l2549 0117                    i1l2493 007E  
                  i1l2477 0057                    i1l2469 0049                    i1l2485 0063  
                  i1l2639 01FC                    i1l2583 017C                    i1l2575 0161  
                  i1l2567 014A                    i1l2559 012E                    i1l2495 0083  
                  i1l2487 0067                    u211_20 00D8                    u203_20 0094  
                  i1l2585 017E                    i1l2569 014F                    u211_21 00D7  
                  u203_21 0093                    i1l2497 0088                    i1l2593 0190  
                  i1l2489 0072                    i1l2595 0196                    i1l2587 0185  
                  i1l2579 0170                    i1l2499 008E                    i1l2597 01A1  
                  i1l2589 0189                    i1l2599 01A7                    u220_20 0144  
                  u212_20 00DE                    u204_20 009A                    u220_21 0143  
                  u212_21 00DD                    u204_21 0099                    u221_20 014A  
                  u213_20 00E4                    u205_20 00A0                    u221_21 0149  
                  u213_21 00E3                    u205_21 009F                    u230_20 01B2  
                  u222_20 014F                    u214_20 00FE                    u206_20 00A6  
                  u230_21 01B1                    u222_21 014E                    u214_21 00FD  
                  u206_21 00A5                    u231_20 01B7                    u223_20 015C  
                  u215_20 0104                    u207_20 00AC                    u231_21 01B6  
                  u223_21 015B                    u215_21 0103                    u207_21 00AB  
                  u232_20 01D0                    u224_20 0161                    u216_20 011F  
                  u208_20 00B2                    u232_21 01CF                    u224_21 0160  
                  u216_21 011E                    u208_21 00B1                    u233_20 01D5  
                  u225_20 0176                    u217_20 0125                    u209_20 00CC  
                  u233_21 01D4                    u225_21 0175                    u217_21 0124  
                  u209_21 00CB                    u234_20 01ED                    u226_20 017C  
                  u218_20 0138                    u234_21 01EC                    u226_21 017B  
                  u218_21 0137                    u235_20 01F2                    u227_20 0196  
                  u219_20 013E                    u235_21 01F1                    u227_21 0195  
                  u219_21 013D                    u228_20 01A7                    u228_21 01A6  
                  u181_20 0C6C                    u229_20 01AD                    u181_21 0C6B  
                  u229_21 01AC                    u182_20 0C76                    u190_20 002A  
                  u182_21 0C75                    u190_21 0029                    u183_20 0CC2  
                  u191_20 003B                    u183_21 0CC1                    u191_21 003A  
                  u184_20 0CDD                    u192_20 0040                    u184_21 0CDC  
                  u192_21 003F                    u193_20 0045                    u193_21 0044  
                  u194_20 004E                    u194_21 004D                    u195_20 0057  
                  u195_21 0056                    u196_20 0060                    u196_21 005F  
                  u197_20 0067                    u189_20 0023                    u197_21 0066  
                  u189_21 0022                    u198_20 0078                    u198_21 0077  
                  u199_20 007E                    u199_21 007D                    u295_27 0030  
                  u296_27 006D                    u297_27 019C                 ??_Lcd_Cmd 0021  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
               ??_Set_day 0022                    _Slave1 074A                 ??_Set_sec 0022  
                  ___bmul 0D13                    ___wmul 0EFA                 ??___lwdiv 0024  
               ??___lwmod 002C                    _buffer 004B                    _minuto 0063  
       __end_ofi1_Set_day 0DA5              Read_Fecha@mo 0028          i1Set_month@month 0072  
    Dec_to_Bcd@bcd_number 0021                 ?_I2C_Nack 0070                 ??_isdigit 0020  
               ?_I2C_Read 0070                 ?_I2C_Stop 0070                    saved_w 007E  
               ??_sprintf 0035           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027      Dec_to_Bcd@dec_number 0020  
            ?i1_Set_month 0070   __end_of__initialization 001B         __end_of_Lcd_Clear 0CB9  
     ___bmul@multiplicand 0020               ?_Read_Fecha 0028            __pcstackCOMMON 0070  
           __end_of_setup 0E10              ??i1_I2C_Stop 0070         __end_of_Read_Time 0F8B  
          _Lcd_Set_Cursor 0672                ??_I2C_Nack 0020            _OPTION_REGbits 0081  
              ??_I2C_Read 0020                ??_I2C_Stop 0020             ?_Set_day_week 0070  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070              sprintf@width 003D  
                 ??_setup 0021                __pbssBANK0 0049         __end_of_Set_month 0EAC  
      __end_ofi1_I2C_Stop 0C78                   ?_Slave1 0070                 ?_Set_hour 0070  
              __pmaintext 020A                 ?_Set_year 0070             ?i1_Dec_to_Bcd 0070  
                 ?___bmul 0020                   ?___wmul 0020                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 06BE             ??_I2C_Restart 0020            ??_Set_day_week 0022  
              ??_Lcd_Init 0024                ??_Lcd_Port 0020                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0623            _Lcd_Write_Char 0F8B  
                 _Lcd_Cmd 0D2A                 _I2C_Start 0C82              ??i1_Set_year 0072  
               _I2C_Write 0CC7            ??i1_Dec_to_Bcd 0070                   _Set_day 0E10  
              ??_Set_hour 0022                   _Set_sec 0EAC                ??_Set_year 0022  
                 ___lwdiv 06BE                   ___lwmod 0FC4              ??_Bcd_to_Dec 0024  
                 _bandera 0079           ?_Lcd_Set_Cursor 0024                   __ptext1 0DEB  
                 __ptext2 07CC                   __ptext3 074A                   __ptext4 03E7  
                 __ptext5 0CE9                   __ptext6 0EFA                   __ptext7 0FC4  
                 __ptext8 06BE                   __ptext9 0704                   _dpowers 0633  
                 _isdigit 0CE9                   _segundo 0064        __end_ofi1_Set_year 0DEB  
            ??_Dec_to_Bcd 0020                   _sprintf 03E7                   clrloop0 07F8  
     __end_of_I2C_Restart 0C82                   _voltaje 0049    __end_of_Lcd_Write_Char 0FC4  
    end_of_initialization 001B        __end_of_Bcd_to_Dec 0D62                ?_I2C_Start 0070  
              ?_I2C_Write 0070             Bcd_to_Dec@bcd 0027             Bcd_to_Dec@dec 0026  
               Lcd_Port@a 0020        __end_of_Dec_to_Bcd 0D13                 _PORTBbits 0006  
               _PORTDbits 0008                 i1_Set_day 0D82                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0025         Lcd_Write_String@i 002A  
    __end_of_Set_day_week 0E5E              ??_Read_Fecha 002A                 _Lcd_Clear 0CAC  
          __end_of_Slave1 078E            __end_of___bmul 0D2A            __end_of___wmul 0F21  
        _Lcd_Write_String 0704               _I2C_Restart 0C78                ?i1_Set_day 0070  
     start_initialization 000F         ??_I2C_Init_Master 0020      __end_ofi1_Dec_to_Bcd 0CE9  
             __end_of_isr 020A                 _Read_Time 0F56             ??i1_I2C_Start 0070  
   I2C_Init_Master@sp_i2c 0020             ??i1_I2C_Write 0070        __end_of_Read_Fecha 0F56  
             ??_I2C_Start 0020               ??_I2C_Write 0020                  ??_Slave1 0041  
               _Set_month 0E85                ?_Lcd_Clear 0070                  ??___bmul 0021  
                ??___wmul 0024           Lcd_Write_Char@a 0024           Lcd_Write_Char@y 0023  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
              ?_Read_Time 0028              _isdigit$1027 0020                  ?_Lcd_Cmd 0070  
             sprintf@flag 003C               sprintf@prec 0038       __end_ofi1_I2C_Start 0C6E  
     __end_ofi1_I2C_Write 0CC7          ___lwdiv@dividend 0022                  ?_Set_day 0070  
                ?_Set_sec 0070                ?_Set_month 0070          ??_Lcd_Set_Cursor 0025  
                ?___lwdiv 0020                  ?___lwmod 0028                 __pstrings 0623  
                _I2C_Nack 0C96                  ?_isdigit 0070                  _I2C_Read 0CA1  
             ??i1_Set_day 0072                  _I2C_Stop 0C8C          ___lwdiv@quotient 0025  
                ?_sprintf 002E              Set_hour@hour 0022         interrupt_function 0004  
          ___wmul@product 0024                  _IOCBbits 0096                 clear_ram0 07F7  
                Lcd_Cmd@a 0023                  _PIR1bits 000C               ??_Lcd_Clear 0024  
            Set_year@year 0022               __stringbase 0632         ___wmul@multiplier 0020  
                Read@dato 0023                  _WPUBbits 0095          ??_Lcd_Write_Char 0021  
            _Set_day_week 0E37                  _Lcd_Init 05BE               ??_Read_Time 002A  
                _Lcd_Port 0D62               i1_I2C_Start 0C64               i1_I2C_Write 0CB9  
           ??i1_Set_month 0072  __end_of_Lcd_Write_String 074A               ??_Set_month 0022  
                _Set_hour 0E5E                  _Set_year 0ED3              i1_Dec_to_Bcd 0CD5  
         _I2C_Init_Master 07CC             I2C_Write@data 0020            i1Set_year@year 0072  
      __end_of__stringtab 0633              ?_I2C_Restart 0070                sprintf@val 003A  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0027                  __ptext10 0F8B  
                __ptext11 0672                  __ptext20 0F21                  __ptext12 0ED3  
                __ptext21 078E                  __ptext13 0EAC                  __ptext30 05BE  
                __ptext22 0CC7                  __ptext14 0E85                  __ptext31 0CAC  
                __ptext23 0C8C                  __ptext15 0E5E                  __ptext40 0C64  
                __ptext32 0D2A                  __ptext24 0C82                  __ptext16 0E37  
                __ptext41 0CD5                  __ptext33 0D62                  __ptext25 0C78  
                __ptext17 0E10                  __ptext34 001F                  __ptext26 0CA1  
                __ptext18 0CFD                  __ptext35 0DC8                  __ptext27 0C96  
                __ptext19 0F56                  __ptext36 0DA5                  __ptext28 0D46  
                __ptext37 0D82                  __ptext29 0D13                  __ptext38 0CB9  
                __ptext39 0C6E                  _selector 004A       __end_ofi1_Set_month 0DC8  
                _temporal 0077                i1_I2C_Stop 0C6E                _INTCONbits 000B  
    Set_day_week@day_week 0022                  isdigit@c 0021        Lcd_Write_Char@temp 0022  
                intlevel1 0000                 sprintf@ap 0039                 sprintf@sp 0040  
        ___lwmod@dividend 002A   __end_of_I2C_Init_Master 07F7            Set_month@month 0022  
               stringcode 062D                _OSCCONbits 008F              i1Set_day@day 0072  
      Lcd_Set_Cursor@temp 0029           i1I2C_Write@data 0070                  sprintf@c 003F  
                sprintf@f 002E           ___lwmod@divisor 0028           ___lwmod@counter 002D  
                stringdir 062D                  stringtab 0623               _SSPCON2bits 0091  
             i1_Set_month 0DA5                i1_Set_year 0DC8  
