

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 15:42:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378                           
   379                           	psect	strings
   380     0003                     __pstrings:
   381     0003                     stringtab:
   382     0003                     __stringtab:
   383                           
   384                           ;	String table - string pointers are 1 byte each
   385     0003  1BFF               	btfsc	btemp+1,7
   386     0004  280D               	ljmp	stringcode
   387     0005  1383               	bcf	3,7
   388     0006  187F               	btfsc	btemp+1,0
   389     0007  1783               	bsf	3,7
   390     0008  0800               	movf	0,w
   391     0009  0A84               	incf	4,f
   392     000A  1903               	skipnz
   393     000B  0AFF               	incf	btemp+1,f
   394     000C  0008               	return
   395     000D                     stringcode:
   396     000D                     stringdir:
   397     000D  3000               	movlw	high stringdir
   398     000E  008A               	movwf	10
   399     000F  0804               	movf	4,w
   400     0010  0A84               	incf	4,f
   401     0011  0782               	addwf	2,f
   402     0012                     __stringbase:
   403     0012  3400               	retlw	0
   404     0013                     __end_of__stringtab:
   405     0013                     _dpowers:
   406     0013  3401               	retlw	1
   407     0014  3400               	retlw	0
   408     0015  340A               	retlw	10
   409     0016  3400               	retlw	0
   410     0017  3464               	retlw	100
   411     0018  3400               	retlw	0
   412     0019  34E8               	retlw	232
   413     001A  3403               	retlw	3
   414     001B  3410               	retlw	16
   415     001C  3427               	retlw	39
   416     001D                     __end_of_dpowers:
   417     0008                     _PORTDbits	set	8
   418     0006                     _PORTBbits	set	6
   419     0008                     _PORTD	set	8
   420     0007                     _PORTC	set	7
   421     0006                     _PORTB	set	6
   422     0013                     _SSPBUF	set	19
   423     000C                     _PIR1bits	set	12
   424     0014                     _SSPCON	set	20
   425     008F                     _OSCCONbits	set	143
   426     0088                     _TRISD	set	136
   427     0086                     _TRISB	set	134
   428     0091                     _SSPCON2bits	set	145
   429     0093                     _SSPADD	set	147
   430     0091                     _SSPCON2	set	145
   431     0094                     _SSPSTAT	set	148
   432     0087                     _TRISCbits	set	135
   433     0189                     _ANSELH	set	393
   434     0188                     _ANSEL	set	392
   435     001D                     STR_1:
   436     001D  3453               	retlw	83	;'S'
   437     001E  3431               	retlw	49	;'1'
   438     001F  343A               	retlw	58	;':'
   439     0020  3400               	retlw	0
   440     0021                     STR_2:
   441     0021  3425               	retlw	37	;'%'
   442     0022  3464               	retlw	100	;'d'
   443     0023  3400               	retlw	0
   444                           
   445                           	psect	cinit
   446     07F3                     start_initialization:	
   447                           ; #config settings
   448                           
   449     07F3                     __initialization:
   450                           
   451                           ; Clear objects allocated to BANK0
   452     07F3  1383               	bcf	3,7	;select IRP bank0
   453     07F4  3020               	movlw	low __pbssBANK0
   454     07F5  0084               	movwf	4
   455     07F6  3035               	movlw	low (__pbssBANK0+21)
   456     07F7  120A  118A  2464  120A  118A  	fcall	clear_ram0
   457     07FC                     end_of_initialization:	
   458                           ;End of C runtime variable initialization code
   459                           
   460     07FC                     __end_of__initialization:
   461     07FC  0183               	clrf	3
   462     07FD  120A  118A  2EB4   	ljmp	_main	;jump to C main() function
   463                           
   464                           	psect	bssBANK0
   465     0020                     __pbssBANK0:
   466     0020                     _voltaje:
   467     0020                     	ds	1
   468     0021                     _buffer:
   469     0021                     	ds	20
   470                           
   471                           	psect	clrtext
   472     0464                     clear_ram0:	
   473                           ;	Called with FSR containing the base address, and
   474                           ;	W with the last address+1
   475                           
   476     0464  0064               	clrwdt	;clear the watchdog before getting into this loop
   477     0465                     clrloop0:
   478     0465  0180               	clrf	0	;clear RAM location pointed to by FSR
   479     0466  0A84               	incf	4,f	;increment pointer
   480     0467  0604               	xorwf	4,w	;XOR with final address
   481     0468  1903               	btfsc	3,2	;have we reached the end yet?
   482     0469  3400               	retlw	0	;all done for this memory range, return
   483     046A  0604               	xorwf	4,w	;XOR again to restore value
   484     046B  2C65               	goto	clrloop0	;do the next byte
   485                           
   486                           	psect	cstackCOMMON
   487     0070                     __pcstackCOMMON:
   488     0070                     ?_setup:
   489     0070                     ?_Lcd_Init:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_Lcd_Clear:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_I2C_Init_Master:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ??_I2C_Init_Master:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_I2C_Start:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ??_I2C_Start:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_I2C_Stop:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ??_I2C_Stop:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ??_I2C_Write:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_I2C_Read:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ??_I2C_Read:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_main:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_Lcd_Port:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ??_Lcd_Port:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_Lcd_Cmd:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_Lcd_Write_Char:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_I2C_Write:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?___lwdiv:	
   541                           ; 2 bytes @ 0x0
   542                           
   543     0070                     I2C_Init_Master@sp_i2c:	
   544                           ; 2 bytes @ 0x0
   545                           
   546     0070                     I2C_Write@data:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     Lcd_Port@a:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ___lwdiv@divisor:	
   553                           ; 1 bytes @ 0x0
   554                           
   555                           
   556                           ; 2 bytes @ 0x0
   557     0070                     	ds	1
   558     0071                     ??_setup:
   559     0071                     ??_Lcd_Cmd:	
   560                           ; 1 bytes @ 0x1
   561                           
   562     0071                     ??_Lcd_Write_Char:	
   563                           ; 1 bytes @ 0x1
   564                           
   565                           
   566                           ; 1 bytes @ 0x1
   567     0071                     	ds	1
   568     0072                     Lcd_Write_Char@temp:
   569     0072                     ___lwdiv@dividend:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 2 bytes @ 0x2
   574     0072                     	ds	1
   575     0073                     Lcd_Cmd@a:
   576     0073                     Lcd_Write_Char@y:	
   577                           ; 1 bytes @ 0x3
   578                           
   579                           
   580                           ; 1 bytes @ 0x3
   581     0073                     	ds	1
   582     0074                     ??_Lcd_Init:
   583     0074                     ??_Lcd_Clear:	
   584                           ; 1 bytes @ 0x4
   585                           
   586     0074                     ?_Lcd_Set_Cursor:	
   587                           ; 1 bytes @ 0x4
   588                           
   589     0074                     ??___lwdiv:	
   590                           ; 1 bytes @ 0x4
   591                           
   592     0074                     Lcd_Set_Cursor@b:	
   593                           ; 1 bytes @ 0x4
   594                           
   595     0074                     Lcd_Write_Char@a:	
   596                           ; 1 bytes @ 0x4
   597                           
   598                           
   599                           ; 1 bytes @ 0x4
   600     0074                     	ds	1
   601     0075                     ??_Lcd_Set_Cursor:
   602     0075                     ?_Lcd_Write_String:	
   603                           ; 1 bytes @ 0x5
   604                           
   605     0075                     Lcd_Write_String@a:	
   606                           ; 1 bytes @ 0x5
   607                           
   608     0075                     ___lwdiv@quotient:	
   609                           ; 2 bytes @ 0x5
   610                           
   611                           
   612                           ; 2 bytes @ 0x5
   613     0075                     	ds	1
   614     0076                     Lcd_Set_Cursor@a:
   615                           
   616                           ; 1 bytes @ 0x6
   617     0076                     	ds	1
   618     0077                     ??_Lcd_Write_String:
   619     0077                     Lcd_Set_Cursor@z:	
   620                           ; 1 bytes @ 0x7
   621                           
   622     0077                     ___lwdiv@counter:	
   623                           ; 1 bytes @ 0x7
   624                           
   625                           
   626                           ; 1 bytes @ 0x7
   627     0077                     	ds	1
   628     0078                     ?___lwmod:
   629     0078                     Lcd_Set_Cursor@y:	
   630                           ; 2 bytes @ 0x8
   631                           
   632     0078                     ___lwmod@divisor:	
   633                           ; 1 bytes @ 0x8
   634                           
   635                           
   636                           ; 2 bytes @ 0x8
   637     0078                     	ds	1
   638     0079                     Lcd_Set_Cursor@temp:
   639                           
   640                           ; 1 bytes @ 0x9
   641     0079                     	ds	1
   642     007A                     Lcd_Write_String@i:
   643     007A                     ___lwmod@dividend:	
   644                           ; 2 bytes @ 0xA
   645                           
   646                           
   647                           ; 2 bytes @ 0xA
   648     007A                     	ds	2
   649     007C                     ??___lwmod:
   650                           
   651                           ; 1 bytes @ 0xC
   652     007C                     	ds	1
   653     007D                     ___lwmod@counter:
   654                           
   655                           ; 1 bytes @ 0xD
   656     007D                     	ds	1
   657                           
   658                           	psect	cstackBANK0
   659     0035                     __pcstackBANK0:
   660     0035                     ?_sprintf:
   661     0035                     sprintf@f:	
   662                           ; 2 bytes @ 0x0
   663                           
   664                           
   665                           ; 1 bytes @ 0x0
   666     0035                     	ds	3
   667     0038                     ??_sprintf:
   668                           
   669                           ; 1 bytes @ 0x3
   670     0038                     	ds	3
   671     003B                     sprintf@ap:
   672                           
   673                           ; 1 bytes @ 0x6
   674     003B                     	ds	1
   675     003C                     sprintf@flag:
   676                           
   677                           ; 1 bytes @ 0x7
   678     003C                     	ds	1
   679     003D                     sprintf@prec:
   680                           
   681                           ; 1 bytes @ 0x8
   682     003D                     	ds	1
   683     003E                     sprintf@val:
   684                           
   685                           ; 2 bytes @ 0x9
   686     003E                     	ds	2
   687     0040                     sprintf@sp:
   688                           
   689                           ; 1 bytes @ 0xB
   690     0040                     	ds	1
   691     0041                     sprintf@c:
   692                           
   693                           ; 1 bytes @ 0xC
   694     0041                     	ds	1
   695     0042                     ??_main:
   696                           
   697                           ; 1 bytes @ 0xD
   698     0042                     	ds	2
   699                           
   700                           	psect	maintext
   701     06B4                     __pmaintext:	
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   704 ;;
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 37 in file "main_master.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : B00/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          0       2       0       0       0
   724 ;;      Totals:         0       2       0       0       0
   725 ;;Total ram usage:        2 bytes
   726 ;; Hardware stack levels required when called: 3
   727 ;; This function calls:
   728 ;;		_I2C_Read
   729 ;;		_I2C_Start
   730 ;;		_I2C_Stop
   731 ;;		_I2C_Write
   732 ;;		_Lcd_Clear
   733 ;;		_Lcd_Init
   734 ;;		_Lcd_Set_Cursor
   735 ;;		_Lcd_Write_String
   736 ;;		_setup
   737 ;;		_sprintf
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743     06B4                     _main:	
   744                           ;psect for function _main
   745                           
   746     06B4                     l1304:	
   747                           ;incstack = 0
   748                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   749                           
   750                           
   751                           ;main_master.c: 38:     setup();
   752     06B4  120A  118A  24C0  120A  118A  	fcall	_setup
   753                           
   754                           ;main_master.c: 39:     Lcd_Init();
   755     06B9  120A  118A  2656  120A  118A  	fcall	_Lcd_Init
   756                           
   757                           ;main_master.c: 40:     Lcd_Clear();
   758     06BE  120A  118A  248B  120A  118A  	fcall	_Lcd_Clear
   759                           
   760                           ;main_master.c: 41:     Lcd_Set_Cursor(1,1);
   761     06C3  01F4               	clrf	Lcd_Set_Cursor@b
   762     06C4  0AF4               	incf	Lcd_Set_Cursor@b,f
   763     06C5  3001               	movlw	1
   764     06C6  120A  118A  2610  120A  118A  	fcall	_Lcd_Set_Cursor
   765     06CB                     l1306:
   766                           
   767                           ;main_master.c: 42:     Lcd_Write_String("S1:");
   768     06CB  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   769     06CC  00F5               	movwf	Lcd_Write_String@a
   770     06CD  3080               	movlw	128
   771     06CE  00F6               	movwf	Lcd_Write_String@a+1
   772     06CF  120A  118A  258A  120A  118A  	fcall	_Lcd_Write_String
   773     06D4                     l1308:
   774                           
   775                           ;main_master.c: 44:         I2C_Start();
   776     06D4  120A  118A  246C  120A  118A  	fcall	_I2C_Start
   777     06D9                     l1310:
   778                           
   779                           ;main_master.c: 45:         I2C_Write(0x51);
   780     06D9  3051               	movlw	81
   781     06DA  120A  118A  2498  120A  118A  	fcall	_I2C_Write
   782     06DF                     l1312:
   783                           
   784                           ;main_master.c: 46:         voltaje = I2C_Read();
   785     06DF  120A  118A  2480  120A  118A  	fcall	_I2C_Read
   786     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   787     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   788     06E6  00A0               	movwf	_voltaje
   789     06E7                     l1314:
   790                           
   791                           ;main_master.c: 47:         Lcd_Set_Cursor(2,1);
   792     06E7  01F4               	clrf	Lcd_Set_Cursor@b
   793     06E8  0AF4               	incf	Lcd_Set_Cursor@b,f
   794     06E9  3002               	movlw	2
   795     06EA  120A  118A  2610  120A  118A  	fcall	_Lcd_Set_Cursor
   796     06EF                     l1316:
   797                           
   798                           ;main_master.c: 48:         sprintf(buffer, "%d", voltaje);
   799     06EF  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   800     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   801     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   802     06F2  00B5               	movwf	sprintf@f
   803     06F3  0820               	movf	_voltaje,w
   804     06F4  00C2               	movwf	??_main
   805     06F5  01C3               	clrf	??_main+1
   806     06F6  0842               	movf	??_main,w
   807     06F7  00B6               	movwf	?_sprintf+1
   808     06F8  0843               	movf	??_main+1,w
   809     06F9  00B7               	movwf	?_sprintf+2
   810     06FA  3021               	movlw	(low (_buffer| 0))& (0+255)
   811     06FB  120A  118A  2719  120A  118A  	fcall	_sprintf
   812     0700                     l1318:
   813                           
   814                           ;main_master.c: 49:         Lcd_Write_String(buffer);
   815     0700  3021               	movlw	(low (_buffer| 0))& (0+255)
   816     0701  00F5               	movwf	Lcd_Write_String@a
   817     0702  3000               	movlw	0
   818     0703  00F6               	movwf	Lcd_Write_String@a+1
   819     0704  120A  118A  258A  120A  118A  	fcall	_Lcd_Write_String
   820     0709                     l1320:
   821                           
   822                           ;main_master.c: 50:         I2C_Stop();
   823     0709  120A  118A  2476  120A  118A  	fcall	_I2C_Stop
   824     070E                     l1322:
   825                           
   826                           ;main_master.c: 51:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   827     070E  3005               	movlw	5
   828     070F  1283               	bcf	3,5	;RP0=0, select bank0
   829     0710  1303               	bcf	3,6	;RP1=0, select bank0
   830     0711  00C2               	movwf	??_main
   831     0712                     u807:
   832     0712  0BC2               	decfsz	??_main,f
   833     0713  2F12               	goto	u807
   834     0714  2F15               	nop2
   835     0715  2ED4               	goto	l1308
   836     0716  120A  118A  2800   	ljmp	start
   837     0719                     __end_of_main:
   838                           
   839                           	psect	text1
   840     0719                     __ptext1:	
   841 ;; *************** function _sprintf *****************
   842 ;; Defined at:
   843 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  sp              1    wreg     PTR unsigned char 
   846 ;;		 -> buffer(20), 
   847 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   848 ;;		 -> STR_2(3), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   851 ;;		 -> buffer(20), 
   852 ;;  tmpval          4    0        struct .
   853 ;;  val             2    9[BANK0 ] unsigned int 
   854 ;;  cp              2    0        PTR const unsigned char 
   855 ;;  len             2    0        unsigned int 
   856 ;;  c               1   12[BANK0 ] unsigned char 
   857 ;;  prec            1    8[BANK0 ] char 
   858 ;;  flag            1    7[BANK0 ] unsigned char 
   859 ;;  ap              1    6[BANK0 ] PTR void [1]
   860 ;;		 -> ?_sprintf(2), 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  2    0[BANK0 ] int 
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       3       0       0       0
   871 ;;      Locals:         0       7       0       0       0
   872 ;;      Temps:          0       3       0       0       0
   873 ;;      Totals:         0      13       0       0       0
   874 ;;Total ram usage:       13 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 1
   877 ;; This function calls:
   878 ;;		___lwdiv
   879 ;;		___lwmod
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885     0719                     _sprintf:	
   886                           ;psect for function _sprintf
   887                           
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   891                           ;sprintf@sp stored from wreg
   892     0719  1283               	bcf	3,5	;RP0=0, select bank0
   893     071A  1303               	bcf	3,6	;RP1=0, select bank0
   894     071B  00C0               	movwf	sprintf@sp
   895     071C                     l1242:
   896                           
   897                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   898     071C  3036               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   899     071D  00BB               	movwf	sprintf@ap
   900                           
   901                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   902     071E  2FDE               	goto	l1294
   903     071F                     l1244:
   904                           
   905                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   906     071F  3025               	movlw	37
   907     0720  0641               	xorwf	sprintf@c,w
   908     0721  1903               	btfsc	3,2
   909     0722  2F24               	goto	u731
   910     0723  2F25               	goto	u730
   911     0724                     u731:
   912     0724  2F2F               	goto	l1250
   913     0725                     u730:
   914     0725                     l1246:
   915                           
   916                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   917     0725  0840               	movf	sprintf@sp,w
   918     0726  0084               	movwf	4
   919     0727  0841               	movf	sprintf@c,w
   920     0728  1383               	bcf	3,7	;select IRP bank0
   921     0729  0080               	movwf	0
   922     072A                     l1248:
   923     072A  3001               	movlw	1
   924     072B  00B8               	movwf	??_sprintf
   925     072C  0838               	movf	??_sprintf,w
   926     072D  07C0               	addwf	sprintf@sp,f
   927                           
   928                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   929     072E  2FDE               	goto	l1294
   930     072F                     l1250:
   931                           
   932                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   933     072F  01BC               	clrf	sprintf@flag
   934     0730                     l1254:	
   935                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   936                           
   937     0730  3001               	movlw	1
   938     0731  07B5               	addwf	sprintf@f,f
   939     0732  30FF               	movlw	-1
   940     0733  0735               	addwf	sprintf@f,w
   941     0734  0084               	movwf	4
   942     0735  120A  118A  200D  120A  118A  	fcall	stringdir
   943     073A  00C1               	movwf	sprintf@c
   944     073B  00B8               	movwf	??_sprintf
   945     073C  01B9               	clrf	??_sprintf+1
   946                           
   947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 1, Range of values is 0 to 0
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            4     3 (average)
   953                           ; direct_byte           11     8 (fixed)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956     073D  0839               	movf	??_sprintf+1,w
   957     073E  3A00               	xorlw	0	; case 0
   958     073F  1903               	skipnz
   959     0740  2F42               	goto	l1348
   960     0741  2FDE               	goto	l1294
   961     0742                     l1348:
   962                           
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 3, Range of values is 0 to 105
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte           10     6 (average)
   968                           ; jumptable            260     6 (fixed)
   969                           ;	Chosen strategy is simple_byte
   970     0742  0838               	movf	??_sprintf,w
   971     0743  3A00               	xorlw	0	; case 0
   972     0744  1903               	skipnz
   973     0745  2FEE               	goto	l1296
   974     0746  3A64               	xorlw	100	; case 100
   975     0747  1903               	skipnz
   976     0748  2F4D               	goto	l1256
   977     0749  3A0D               	xorlw	13	; case 105
   978     074A  1903               	skipnz
   979     074B  2F4D               	goto	l1256
   980     074C  2FDE               	goto	l1294
   981     074D                     l1256:
   982                           
   983                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   984     074D  083B               	movf	sprintf@ap,w
   985     074E  0084               	movwf	4
   986     074F  1383               	bcf	3,7	;select IRP bank0
   987     0750  0800               	movf	0,w
   988     0751  00BE               	movwf	sprintf@val
   989     0752  0A84               	incf	4,f
   990     0753  0800               	movf	0,w
   991     0754  00BF               	movwf	sprintf@val+1
   992     0755                     l1258:
   993     0755  3002               	movlw	2
   994     0756  00B8               	movwf	??_sprintf
   995     0757  0838               	movf	??_sprintf,w
   996     0758  07BB               	addwf	sprintf@ap,f
   997     0759                     l1260:
   998                           
   999                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1000     0759  1FBF               	btfss	sprintf@val+1,7
  1001     075A  2F5C               	goto	u741
  1002     075B  2F5D               	goto	u740
  1003     075C                     u741:
  1004     075C  2F66               	goto	l1266
  1005     075D                     u740:
  1006     075D                     l1262:
  1007                           
  1008                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1009     075D  3003               	movlw	3
  1010     075E  00B8               	movwf	??_sprintf
  1011     075F  0838               	movf	??_sprintf,w
  1012     0760  04BC               	iorwf	sprintf@flag,f
  1013     0761                     l1264:
  1014                           
  1015                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1016     0761  09BE               	comf	sprintf@val,f
  1017     0762  09BF               	comf	sprintf@val+1,f
  1018     0763  0ABE               	incf	sprintf@val,f
  1019     0764  1903               	skipnz
  1020     0765  0ABF               	incf	sprintf@val+1,f
  1021     0766                     l1266:
  1022                           
  1023                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1024     0766  01C1               	clrf	sprintf@c
  1025     0767  0AC1               	incf	sprintf@c,f
  1026     0768                     l1272:
  1027                           
  1028                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1029     0768  0841               	movf	sprintf@c,w
  1030     0769  00B8               	movwf	??_sprintf
  1031     076A  0738               	addwf	??_sprintf,w
  1032     076B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1033     076C  0084               	movwf	4
  1034     076D  120A  118A  200D  120A  118A  	fcall	stringdir
  1035     0772  00B9               	movwf	??_sprintf+1
  1036     0773  120A  118A  200D  120A  118A  	fcall	stringdir
  1037     0778  00BA               	movwf	??_sprintf+2
  1038     0779  083A               	movf	??_sprintf+2,w
  1039     077A  023F               	subwf	sprintf@val+1,w
  1040     077B  1D03               	skipz
  1041     077C  2F7F               	goto	u755
  1042     077D  0839               	movf	??_sprintf+1,w
  1043     077E  023E               	subwf	sprintf@val,w
  1044     077F                     u755:
  1045     077F  1803               	skipnc
  1046     0780  2F82               	goto	u751
  1047     0781  2F83               	goto	u750
  1048     0782                     u751:
  1049     0782  2F84               	goto	l1276
  1050     0783                     u750:
  1051     0783  2F8E               	goto	l1278
  1052     0784                     l1276:
  1053     0784  3001               	movlw	1
  1054     0785  00B8               	movwf	??_sprintf
  1055     0786  0838               	movf	??_sprintf,w
  1056     0787  07C1               	addwf	sprintf@c,f
  1057     0788  3005               	movlw	5
  1058     0789  0641               	xorwf	sprintf@c,w
  1059     078A  1D03               	btfss	3,2
  1060     078B  2F8D               	goto	u761
  1061     078C  2F8E               	goto	u760
  1062     078D                     u761:
  1063     078D  2F68               	goto	l1272
  1064     078E                     u760:
  1065     078E                     l1278:
  1066                           
  1067                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1068     078E  083C               	movf	sprintf@flag,w
  1069     078F  3903               	andlw	3
  1070     0790  1903               	btfsc	3,2
  1071     0791  2F93               	goto	u771
  1072     0792  2F94               	goto	u770
  1073     0793                     u771:
  1074     0793  2F9D               	goto	l1284
  1075     0794                     u770:
  1076     0794                     l1280:
  1077                           
  1078                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1079     0794  0840               	movf	sprintf@sp,w
  1080     0795  0084               	movwf	4
  1081     0796  302D               	movlw	45
  1082     0797  1383               	bcf	3,7	;select IRP bank0
  1083     0798  0080               	movwf	0
  1084     0799                     l1282:
  1085     0799  3001               	movlw	1
  1086     079A  00B8               	movwf	??_sprintf
  1087     079B  0838               	movf	??_sprintf,w
  1088     079C  07C0               	addwf	sprintf@sp,f
  1089     079D                     l1284:
  1090                           
  1091                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1092     079D  0841               	movf	sprintf@c,w
  1093     079E  00BD               	movwf	sprintf@prec
  1094                           
  1095                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1096     079F  2FD5               	goto	l1292
  1097     07A0                     l1286:
  1098                           
  1099                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1100     07A0  300A               	movlw	10
  1101     07A1  00F8               	movwf	___lwmod@divisor
  1102     07A2  3000               	movlw	0
  1103     07A3  00F9               	movwf	___lwmod@divisor+1
  1104     07A4  083D               	movf	sprintf@prec,w
  1105     07A5  00B8               	movwf	??_sprintf
  1106     07A6  0738               	addwf	??_sprintf,w
  1107     07A7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1108     07A8  0084               	movwf	4
  1109     07A9  120A  118A  200D  120A  118A  	fcall	stringdir
  1110     07AE  00F0               	movwf	___lwdiv@divisor
  1111     07AF  120A  118A  200D  120A  118A  	fcall	stringdir
  1112     07B4  00F1               	movwf	___lwdiv@divisor+1
  1113     07B5  083F               	movf	sprintf@val+1,w
  1114     07B6  00F3               	movwf	___lwdiv@dividend+1
  1115     07B7  083E               	movf	sprintf@val,w
  1116     07B8  00F2               	movwf	___lwdiv@dividend
  1117     07B9  120A  118A  25CC  120A  118A  	fcall	___lwdiv
  1118     07BE  0871               	movf	?___lwdiv+1,w
  1119     07BF  00FB               	movwf	___lwmod@dividend+1
  1120     07C0  0870               	movf	?___lwdiv,w
  1121     07C1  00FA               	movwf	___lwmod@dividend
  1122     07C2  120A  118A  2550  120A  118A  	fcall	___lwmod
  1123     07C7  0878               	movf	?___lwmod,w
  1124     07C8  3E30               	addlw	48
  1125     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1126     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1127     07CB  00C1               	movwf	sprintf@c
  1128     07CC                     l1288:
  1129                           
  1130                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1131     07CC  0840               	movf	sprintf@sp,w
  1132     07CD  0084               	movwf	4
  1133     07CE  0841               	movf	sprintf@c,w
  1134     07CF  1383               	bcf	3,7	;select IRP bank0
  1135     07D0  0080               	movwf	0
  1136     07D1                     l1290:
  1137     07D1  3001               	movlw	1
  1138     07D2  00B8               	movwf	??_sprintf
  1139     07D3  0838               	movf	??_sprintf,w
  1140     07D4  07C0               	addwf	sprintf@sp,f
  1141     07D5                     l1292:
  1142                           
  1143                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1144     07D5  30FF               	movlw	255
  1145     07D6  00B8               	movwf	??_sprintf
  1146     07D7  0838               	movf	??_sprintf,w
  1147     07D8  07BD               	addwf	sprintf@prec,f
  1148     07D9  0A3D               	incf	sprintf@prec,w
  1149     07DA  1D03               	btfss	3,2
  1150     07DB  2FDD               	goto	u781
  1151     07DC  2FDE               	goto	u780
  1152     07DD                     u781:
  1153     07DD  2FA0               	goto	l1286
  1154     07DE                     u780:
  1155     07DE                     l1294:
  1156                           
  1157                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1158     07DE  3001               	movlw	1
  1159     07DF  07B5               	addwf	sprintf@f,f
  1160     07E0  30FF               	movlw	-1
  1161     07E1  0735               	addwf	sprintf@f,w
  1162     07E2  0084               	movwf	4
  1163     07E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1164     07E8  00C1               	movwf	sprintf@c
  1165     07E9  0841               	movf	sprintf@c,w
  1166     07EA  1D03               	btfss	3,2
  1167     07EB  2FED               	goto	u791
  1168     07EC  2FEE               	goto	u790
  1169     07ED                     u791:
  1170     07ED  2F1F               	goto	l1244
  1171     07EE                     u790:
  1172     07EE                     l1296:
  1173                           
  1174                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1175     07EE  0840               	movf	sprintf@sp,w
  1176     07EF  0084               	movwf	4
  1177     07F0  1383               	bcf	3,7	;select IRP bank0
  1178     07F1  0180               	clrf	0
  1179     07F2                     l276:
  1180     07F2  0008               	return
  1181     07F3                     __end_of_sprintf:
  1182                           
  1183                           	psect	text2
  1184     0550                     __ptext2:	
  1185 ;; *************** function ___lwmod *****************
  1186 ;; Defined at:
  1187 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  divisor         2    8[COMMON] unsigned int 
  1190 ;;  dividend        2   10[COMMON] unsigned int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  counter         1   13[COMMON] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2    8[COMMON] unsigned int 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         4       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0
  1204 ;;      Temps:          1       0       0       0       0
  1205 ;;      Totals:         6       0       0       0       0
  1206 ;;Total ram usage:        6 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_sprintf
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     0550                     ___lwmod:	
  1216                           ;psect for function ___lwmod
  1217                           
  1218     0550                     l1150:	
  1219                           ;incstack = 0
  1220                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1221                           
  1222     0550  0878               	movf	___lwmod@divisor,w
  1223     0551  0479               	iorwf	___lwmod@divisor+1,w
  1224     0552  1903               	btfsc	3,2
  1225     0553  2D55               	goto	u561
  1226     0554  2D56               	goto	u560
  1227     0555                     u561:
  1228     0555  2D85               	goto	l1168
  1229     0556                     u560:
  1230     0556                     l1152:
  1231     0556  01FD               	clrf	___lwmod@counter
  1232     0557  0AFD               	incf	___lwmod@counter,f
  1233     0558  2D64               	goto	l1158
  1234     0559                     l1154:
  1235     0559  3001               	movlw	1
  1236     055A                     u575:
  1237     055A  1003               	clrc
  1238     055B  0DF8               	rlf	___lwmod@divisor,f
  1239     055C  0DF9               	rlf	___lwmod@divisor+1,f
  1240     055D  3EFF               	addlw	-1
  1241     055E  1D03               	skipz
  1242     055F  2D5A               	goto	u575
  1243     0560                     l1156:
  1244     0560  3001               	movlw	1
  1245     0561  00FC               	movwf	??___lwmod
  1246     0562  087C               	movf	??___lwmod,w
  1247     0563  07FD               	addwf	___lwmod@counter,f
  1248     0564                     l1158:
  1249     0564  1FF9               	btfss	___lwmod@divisor+1,7
  1250     0565  2D67               	goto	u581
  1251     0566  2D68               	goto	u580
  1252     0567                     u581:
  1253     0567  2D59               	goto	l1154
  1254     0568                     u580:
  1255     0568                     l1160:
  1256     0568  0879               	movf	___lwmod@divisor+1,w
  1257     0569  027B               	subwf	___lwmod@dividend+1,w
  1258     056A  1D03               	skipz
  1259     056B  2D6E               	goto	u595
  1260     056C  0878               	movf	___lwmod@divisor,w
  1261     056D  027A               	subwf	___lwmod@dividend,w
  1262     056E                     u595:
  1263     056E  1C03               	skipc
  1264     056F  2D71               	goto	u591
  1265     0570  2D72               	goto	u590
  1266     0571                     u591:
  1267     0571  2D78               	goto	l1164
  1268     0572                     u590:
  1269     0572                     l1162:
  1270     0572  0878               	movf	___lwmod@divisor,w
  1271     0573  02FA               	subwf	___lwmod@dividend,f
  1272     0574  0879               	movf	___lwmod@divisor+1,w
  1273     0575  1C03               	skipc
  1274     0576  03FB               	decf	___lwmod@dividend+1,f
  1275     0577  02FB               	subwf	___lwmod@dividend+1,f
  1276     0578                     l1164:
  1277     0578  3001               	movlw	1
  1278     0579                     u605:
  1279     0579  1003               	clrc
  1280     057A  0CF9               	rrf	___lwmod@divisor+1,f
  1281     057B  0CF8               	rrf	___lwmod@divisor,f
  1282     057C  3EFF               	addlw	-1
  1283     057D  1D03               	skipz
  1284     057E  2D79               	goto	u605
  1285     057F                     l1166:
  1286     057F  3001               	movlw	1
  1287     0580  02FD               	subwf	___lwmod@counter,f
  1288     0581  1D03               	btfss	3,2
  1289     0582  2D84               	goto	u611
  1290     0583  2D85               	goto	u610
  1291     0584                     u611:
  1292     0584  2D68               	goto	l1160
  1293     0585                     u610:
  1294     0585                     l1168:
  1295     0585  087B               	movf	___lwmod@dividend+1,w
  1296     0586  00F9               	movwf	?___lwmod+1
  1297     0587  087A               	movf	___lwmod@dividend,w
  1298     0588  00F8               	movwf	?___lwmod
  1299     0589                     l562:
  1300     0589  0008               	return
  1301     058A                     __end_of___lwmod:
  1302                           
  1303                           	psect	text3
  1304     05CC                     __ptext3:	
  1305 ;; *************** function ___lwdiv *****************
  1306 ;; Defined at:
  1307 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  divisor         2    0[COMMON] unsigned int 
  1310 ;;  dividend        2    2[COMMON] unsigned int 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  quotient        2    5[COMMON] unsigned int 
  1313 ;;  counter         1    7[COMMON] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2    0[COMMON] unsigned int 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         4       0       0       0       0
  1324 ;;      Locals:         3       0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0
  1326 ;;      Totals:         8       0       0       0       0
  1327 ;;Total ram usage:        8 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_sprintf
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336     05CC                     ___lwdiv:	
  1337                           ;psect for function ___lwdiv
  1338                           
  1339     05CC                     l1124:	
  1340                           ;incstack = 0
  1341                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1342                           
  1343     05CC  01F5               	clrf	___lwdiv@quotient
  1344     05CD  01F6               	clrf	___lwdiv@quotient+1
  1345     05CE                     l1126:
  1346     05CE  0870               	movf	___lwdiv@divisor,w
  1347     05CF  0471               	iorwf	___lwdiv@divisor+1,w
  1348     05D0  1903               	btfsc	3,2
  1349     05D1  2DD3               	goto	u491
  1350     05D2  2DD4               	goto	u490
  1351     05D3                     u491:
  1352     05D3  2E0B               	goto	l1146
  1353     05D4                     u490:
  1354     05D4                     l1128:
  1355     05D4  01F7               	clrf	___lwdiv@counter
  1356     05D5  0AF7               	incf	___lwdiv@counter,f
  1357     05D6  2DE2               	goto	l1134
  1358     05D7                     l1130:
  1359     05D7  3001               	movlw	1
  1360     05D8                     u505:
  1361     05D8  1003               	clrc
  1362     05D9  0DF0               	rlf	___lwdiv@divisor,f
  1363     05DA  0DF1               	rlf	___lwdiv@divisor+1,f
  1364     05DB  3EFF               	addlw	-1
  1365     05DC  1D03               	skipz
  1366     05DD  2DD8               	goto	u505
  1367     05DE                     l1132:
  1368     05DE  3001               	movlw	1
  1369     05DF  00F4               	movwf	??___lwdiv
  1370     05E0  0874               	movf	??___lwdiv,w
  1371     05E1  07F7               	addwf	___lwdiv@counter,f
  1372     05E2                     l1134:
  1373     05E2  1FF1               	btfss	___lwdiv@divisor+1,7
  1374     05E3  2DE5               	goto	u511
  1375     05E4  2DE6               	goto	u510
  1376     05E5                     u511:
  1377     05E5  2DD7               	goto	l1130
  1378     05E6                     u510:
  1379     05E6                     l1136:
  1380     05E6  3001               	movlw	1
  1381     05E7                     u525:
  1382     05E7  1003               	clrc
  1383     05E8  0DF5               	rlf	___lwdiv@quotient,f
  1384     05E9  0DF6               	rlf	___lwdiv@quotient+1,f
  1385     05EA  3EFF               	addlw	-1
  1386     05EB  1D03               	skipz
  1387     05EC  2DE7               	goto	u525
  1388     05ED  0871               	movf	___lwdiv@divisor+1,w
  1389     05EE  0273               	subwf	___lwdiv@dividend+1,w
  1390     05EF  1D03               	skipz
  1391     05F0  2DF3               	goto	u535
  1392     05F1  0870               	movf	___lwdiv@divisor,w
  1393     05F2  0272               	subwf	___lwdiv@dividend,w
  1394     05F3                     u535:
  1395     05F3  1C03               	skipc
  1396     05F4  2DF6               	goto	u531
  1397     05F5  2DF7               	goto	u530
  1398     05F6                     u531:
  1399     05F6  2DFE               	goto	l1142
  1400     05F7                     u530:
  1401     05F7                     l1138:
  1402     05F7  0870               	movf	___lwdiv@divisor,w
  1403     05F8  02F2               	subwf	___lwdiv@dividend,f
  1404     05F9  0871               	movf	___lwdiv@divisor+1,w
  1405     05FA  1C03               	skipc
  1406     05FB  03F3               	decf	___lwdiv@dividend+1,f
  1407     05FC  02F3               	subwf	___lwdiv@dividend+1,f
  1408     05FD                     l1140:
  1409     05FD  1475               	bsf	___lwdiv@quotient,0
  1410     05FE                     l1142:
  1411     05FE  3001               	movlw	1
  1412     05FF                     u545:
  1413     05FF  1003               	clrc
  1414     0600  0CF1               	rrf	___lwdiv@divisor+1,f
  1415     0601  0CF0               	rrf	___lwdiv@divisor,f
  1416     0602  3EFF               	addlw	-1
  1417     0603  1D03               	skipz
  1418     0604  2DFF               	goto	u545
  1419     0605                     l1144:
  1420     0605  3001               	movlw	1
  1421     0606  02F7               	subwf	___lwdiv@counter,f
  1422     0607  1D03               	btfss	3,2
  1423     0608  2E0A               	goto	u551
  1424     0609  2E0B               	goto	u550
  1425     060A                     u551:
  1426     060A  2DE6               	goto	l1136
  1427     060B                     u550:
  1428     060B                     l1146:
  1429     060B  0876               	movf	___lwdiv@quotient+1,w
  1430     060C  00F1               	movwf	?___lwdiv+1
  1431     060D  0875               	movf	___lwdiv@quotient,w
  1432     060E  00F0               	movwf	?___lwdiv
  1433     060F                     l552:
  1434     060F  0008               	return
  1435     0610                     __end_of___lwdiv:
  1436                           
  1437                           	psect	text4
  1438     04C0                     __ptext4:	
  1439 ;; *************** function _setup *****************
  1440 ;; Defined at:
  1441 ;;		line 55 in file "main_master.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 1
  1462 ;; This function calls:
  1463 ;;		_I2C_Init_Master
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     04C0                     _setup:	
  1470                           ;psect for function _setup
  1471                           
  1472     04C0                     l1188:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1475                           
  1476                           
  1477                           ;main_master.c: 56:     ANSEL = 0;
  1478     04C0  1683               	bsf	3,5	;RP0=1, select bank3
  1479     04C1  1703               	bsf	3,6	;RP1=1, select bank3
  1480     04C2  0188               	clrf	8	;volatile
  1481                           
  1482                           ;main_master.c: 57:     ANSELH = 0;
  1483     04C3  0189               	clrf	9	;volatile
  1484                           
  1485                           ;main_master.c: 59:     TRISB = 0;
  1486     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  1487     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  1488     04C6  0186               	clrf	6	;volatile
  1489                           
  1490                           ;main_master.c: 60:     TRISD = 0;
  1491     04C7  0188               	clrf	8	;volatile
  1492                           
  1493                           ;main_master.c: 61:     PORTB = 0;
  1494     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  1495     04C9  1303               	bcf	3,6	;RP1=0, select bank0
  1496     04CA  0186               	clrf	6	;volatile
  1497                           
  1498                           ;main_master.c: 62:     PORTC = 0;
  1499     04CB  0187               	clrf	7	;volatile
  1500                           
  1501                           ;main_master.c: 63:     PORTD = 0;
  1502     04CC  0188               	clrf	8	;volatile
  1503     04CD                     l1190:
  1504                           
  1505                           ;main_master.c: 65:     OSCCONbits.IRCF2 = 1;
  1506     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  1507     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  1508     04CF  170F               	bsf	15,6	;volatile
  1509     04D0                     l1192:
  1510                           
  1511                           ;main_master.c: 66:     OSCCONbits.IRCF1 = 1;
  1512     04D0  168F               	bsf	15,5	;volatile
  1513     04D1                     l1194:
  1514                           
  1515                           ;main_master.c: 67:     OSCCONbits.IRCF0 = 1;
  1516     04D1  160F               	bsf	15,4	;volatile
  1517     04D2                     l1196:
  1518                           
  1519                           ;main_master.c: 69:     OSCCONbits.SCS = 1;
  1520     04D2  140F               	bsf	15,0	;volatile
  1521     04D3                     l1198:
  1522                           
  1523                           ;main_master.c: 70:     I2C_Init_Master(0x80);
  1524     04D3  3080               	movlw	128
  1525     04D4  120A  118A  24DA  120A  118A  	fcall	_I2C_Init_Master
  1526     04D9                     l119:
  1527     04D9  0008               	return
  1528     04DA                     __end_of_setup:
  1529                           
  1530                           	psect	text5
  1531     04DA                     __ptext5:	
  1532 ;; *************** function _I2C_Init_Master *****************
  1533 ;; Defined at:
  1534 ;;		line 12 in file "i2c.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  sp_i2c          1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  sp_i2c          1    0[COMMON] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         1       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         1       0       0       0       0
  1552 ;;Total ram usage:        1 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_setup
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     04DA                     _I2C_Init_Master:	
  1562                           ;psect for function _I2C_Init_Master
  1563                           
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1567                           ;I2C_Init_Master@sp_i2c stored from wreg
  1568     04DA  00F0               	movwf	I2C_Init_Master@sp_i2c
  1569     04DB                     l1080:
  1570                           
  1571                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1572     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  1573     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  1574     04DD  1587               	bsf	7,3	;volatile
  1575                           
  1576                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1577     04DE  1607               	bsf	7,4	;volatile
  1578     04DF                     l1082:
  1579                           
  1580                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1581     04DF  0870               	movf	I2C_Init_Master@sp_i2c,w
  1582     04E0  0094               	movwf	20	;volatile
  1583                           
  1584                           ;i2c.c: 17:  SSPCON = 0x28;
  1585     04E1  3028               	movlw	40
  1586     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1587     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1588     04E4  0094               	movwf	20	;volatile
  1589     04E5                     l1084:
  1590                           
  1591                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1592     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  1593     04E6  1303               	bcf	3,6	;RP1=0, select bank1
  1594     04E7  0191               	clrf	17	;volatile
  1595     04E8                     l1086:
  1596                           
  1597                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1598     04E8  3080               	movlw	128
  1599     04E9  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  1600     04EA  1D03               	btfss	3,2
  1601     04EB  2CED               	goto	u461
  1602     04EC  2CEE               	goto	u460
  1603     04ED                     u461:
  1604     04ED  2CF1               	goto	l1090
  1605     04EE                     u460:
  1606     04EE                     l1088:
  1607                           
  1608                           ;i2c.c: 20:         SSPADD = 19;
  1609     04EE  3013               	movlw	19
  1610     04EF  0093               	movwf	19	;volatile
  1611                           
  1612                           ;i2c.c: 21:     }
  1613     04F0  2CF8               	goto	l22
  1614     04F1                     l1090:
  1615     04F1  0870               	movf	I2C_Init_Master@sp_i2c,w
  1616     04F2  1D03               	btfss	3,2
  1617     04F3  2CF5               	goto	u471
  1618     04F4  2CF6               	goto	u470
  1619     04F5                     u471:
  1620     04F5  2CF8               	goto	l22
  1621     04F6                     u470:
  1622     04F6                     l1092:
  1623                           
  1624                           ;i2c.c: 23:         SSPADD = 29;
  1625     04F6  301D               	movlw	29
  1626     04F7  0093               	movwf	19	;volatile
  1627     04F8                     l22:
  1628     04F8  0008               	return
  1629     04F9                     __end_of_I2C_Init_Master:
  1630                           
  1631                           	psect	text6
  1632     058A                     __ptext6:	
  1633 ;; *************** function _Lcd_Write_String *****************
  1634 ;; Defined at:
  1635 ;;		line 98 in file "LCD.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  a               2    5[COMMON] PTR unsigned char 
  1638 ;;		 -> buffer(20), STR_1(4), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  i               2   10[COMMON] int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         2       0       0       0       0
  1651 ;;      Locals:         2       0       0       0       0
  1652 ;;      Temps:          3       0       0       0       0
  1653 ;;      Totals:         7       0       0       0       0
  1654 ;;Total ram usage:        7 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 2
  1657 ;; This function calls:
  1658 ;;		_Lcd_Write_Char
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664     058A                     _Lcd_Write_String:	
  1665                           ;psect for function _Lcd_Write_String
  1666                           
  1667     058A                     l1234:	
  1668                           ;incstack = 0
  1669                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1670                           
  1671                           
  1672                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1673     058A  01FA               	clrf	Lcd_Write_String@i
  1674     058B  01FB               	clrf	Lcd_Write_String@i+1
  1675     058C  2DAF               	goto	l1240
  1676     058D                     l1236:
  1677                           
  1678                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1679     058D  087A               	movf	Lcd_Write_String@i,w
  1680     058E  0775               	addwf	Lcd_Write_String@a,w
  1681     058F  00F8               	movwf	??_Lcd_Write_String+1
  1682     0590  0876               	movf	Lcd_Write_String@a+1,w
  1683     0591  00F7               	movwf	??_Lcd_Write_String
  1684     0592  1803               	skipnc
  1685     0593  0AF7               	incf	??_Lcd_Write_String,f
  1686     0594  1FFA               	btfss	Lcd_Write_String@i,7
  1687     0595  2D97               	goto	u700
  1688     0596  03F7               	decf	??_Lcd_Write_String,f
  1689     0597                     u700:
  1690     0597  0877               	movf	??_Lcd_Write_String,w
  1691     0598  00F9               	movwf	??_Lcd_Write_String+2
  1692     0599  0879               	movf	??_Lcd_Write_String+2,w
  1693     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1694     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1695     059C  00FF               	movwf	btemp+1
  1696     059D  0878               	movf	??_Lcd_Write_String+1,w
  1697     059E  0084               	movwf	4
  1698     059F  120A  118A  2003  120A  118A  	fcall	stringtab
  1699     05A4  120A  118A  251B  120A  118A  	fcall	_Lcd_Write_Char
  1700     05A9                     l1238:
  1701     05A9  3001               	movlw	1
  1702     05AA  07FA               	addwf	Lcd_Write_String@i,f
  1703     05AB  1803               	skipnc
  1704     05AC  0AFB               	incf	Lcd_Write_String@i+1,f
  1705     05AD  3000               	movlw	0
  1706     05AE  07FB               	addwf	Lcd_Write_String@i+1,f
  1707     05AF                     l1240:
  1708     05AF  087A               	movf	Lcd_Write_String@i,w
  1709     05B0  0775               	addwf	Lcd_Write_String@a,w
  1710     05B1  00F8               	movwf	??_Lcd_Write_String+1
  1711     05B2  0876               	movf	Lcd_Write_String@a+1,w
  1712     05B3  00F7               	movwf	??_Lcd_Write_String
  1713     05B4  1803               	skipnc
  1714     05B5  0AF7               	incf	??_Lcd_Write_String,f
  1715     05B6  1FFA               	btfss	Lcd_Write_String@i,7
  1716     05B7  2DB9               	goto	u710
  1717     05B8  03F7               	decf	??_Lcd_Write_String,f
  1718     05B9                     u710:
  1719     05B9  0877               	movf	??_Lcd_Write_String,w
  1720     05BA  00F9               	movwf	??_Lcd_Write_String+2
  1721     05BB  0879               	movf	??_Lcd_Write_String+2,w
  1722     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1723     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1724     05BE  00FF               	movwf	btemp+1
  1725     05BF  0878               	movf	??_Lcd_Write_String+1,w
  1726     05C0  0084               	movwf	4
  1727     05C1  120A  118A  2003  120A  118A  	fcall	stringtab
  1728     05C6  3A00               	xorlw	0
  1729     05C7  1D03               	skipz
  1730     05C8  2DCA               	goto	u721
  1731     05C9  2DCB               	goto	u720
  1732     05CA                     u721:
  1733     05CA  2D8D               	goto	l1236
  1734     05CB                     u720:
  1735     05CB                     l160:
  1736     05CB  0008               	return
  1737     05CC                     __end_of_Lcd_Write_String:
  1738                           
  1739                           	psect	text7
  1740     051B                     __ptext7:	
  1741 ;; *************** function _Lcd_Write_Char *****************
  1742 ;; Defined at:
  1743 ;;		line 83 in file "LCD.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  a               1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  a               1    4[COMMON] unsigned char 
  1748 ;;  y               1    3[COMMON] unsigned char 
  1749 ;;  temp            1    2[COMMON] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         3       0       0       0       0
  1761 ;;      Temps:          1       0       0       0       0
  1762 ;;      Totals:         4       0       0       0       0
  1763 ;;Total ram usage:        4 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 1
  1766 ;; This function calls:
  1767 ;;		_Lcd_Port
  1768 ;; This function is called by:
  1769 ;;		_Lcd_Write_String
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773     051B                     _Lcd_Write_Char:	
  1774                           ;psect for function _Lcd_Write_Char
  1775                           
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1779                           ;Lcd_Write_Char@a stored from wreg
  1780     051B  00F4               	movwf	Lcd_Write_Char@a
  1781     051C                     l1104:
  1782                           
  1783                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1784     051C  0874               	movf	Lcd_Write_Char@a,w
  1785     051D  390F               	andlw	15
  1786     051E  00F2               	movwf	Lcd_Write_Char@temp
  1787                           
  1788                           ;LCD.c: 86:     y = a & 0xF0;
  1789     051F  0874               	movf	Lcd_Write_Char@a,w
  1790     0520  39F0               	andlw	240
  1791     0521  00F3               	movwf	Lcd_Write_Char@y
  1792     0522                     l1106:
  1793                           
  1794                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  1795     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1796     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0524  1708               	bsf	8,6	;volatile
  1798     0525                     l1108:
  1799                           
  1800                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1801     0525  0873               	movf	Lcd_Write_Char@y,w
  1802     0526  00F1               	movwf	??_Lcd_Write_Char
  1803     0527  3004               	movlw	4
  1804     0528                     u485:
  1805     0528  1003               	clrc
  1806     0529  0CF1               	rrf	??_Lcd_Write_Char,f
  1807     052A  3EFF               	addlw	-1
  1808     052B  1D03               	skipz
  1809     052C  2D28               	goto	u485
  1810     052D  0871               	movf	??_Lcd_Write_Char,w
  1811     052E  120A  118A  24F9  120A  118A  	fcall	_Lcd_Port
  1812     0533                     l1110:
  1813                           
  1814                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  1815     0533  1283               	bcf	3,5	;RP0=0, select bank0
  1816     0534  1303               	bcf	3,6	;RP1=0, select bank0
  1817     0535  1788               	bsf	8,7	;volatile
  1818     0536                     l1112:
  1819                           
  1820                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1821     0536  301A               	movlw	26
  1822     0537  00F1               	movwf	??_Lcd_Write_Char
  1823     0538                     u817:
  1824     0538  0BF1               	decfsz	??_Lcd_Write_Char,f
  1825     0539  2D38               	goto	u817
  1826     053A  0000               	nop
  1827     053B                     l1114:
  1828                           
  1829                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  1830     053B  1283               	bcf	3,5	;RP0=0, select bank0
  1831     053C  1303               	bcf	3,6	;RP1=0, select bank0
  1832     053D  1388               	bcf	8,7	;volatile
  1833     053E                     l1116:
  1834                           
  1835                           ;LCD.c: 92:     Lcd_Port(temp);
  1836     053E  0872               	movf	Lcd_Write_Char@temp,w
  1837     053F  120A  118A  24F9  120A  118A  	fcall	_Lcd_Port
  1838     0544                     l1118:
  1839                           
  1840                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  1841     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1842     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1843     0546  1788               	bsf	8,7	;volatile
  1844     0547                     l1120:
  1845                           
  1846                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1847     0547  301A               	movlw	26
  1848     0548  00F1               	movwf	??_Lcd_Write_Char
  1849     0549                     u827:
  1850     0549  0BF1               	decfsz	??_Lcd_Write_Char,f
  1851     054A  2D49               	goto	u827
  1852     054B  0000               	nop
  1853     054C                     l1122:
  1854                           
  1855                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  1856     054C  1283               	bcf	3,5	;RP0=0, select bank0
  1857     054D  1303               	bcf	3,6	;RP1=0, select bank0
  1858     054E  1388               	bcf	8,7	;volatile
  1859     054F                     l154:
  1860     054F  0008               	return
  1861     0550                     __end_of_Lcd_Write_Char:
  1862                           
  1863                           	psect	text8
  1864     0610                     __ptext8:	
  1865 ;; *************** function _Lcd_Set_Cursor *****************
  1866 ;; Defined at:
  1867 ;;		line 48 in file "LCD.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  a               1    wreg     unsigned char 
  1870 ;;  b               1    4[COMMON] unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  a               1    6[COMMON] unsigned char 
  1873 ;;  temp            1    9[COMMON] unsigned char 
  1874 ;;  y               1    8[COMMON] unsigned char 
  1875 ;;  z               1    7[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         1       0       0       0       0
  1886 ;;      Locals:         4       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0
  1888 ;;      Totals:         6       0       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 2
  1892 ;; This function calls:
  1893 ;;		_Lcd_Cmd
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899     0610                     _Lcd_Set_Cursor:	
  1900                           ;psect for function _Lcd_Set_Cursor
  1901                           
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1905                           ;Lcd_Set_Cursor@a stored from wreg
  1906     0610  00F6               	movwf	Lcd_Set_Cursor@a
  1907     0611                     l1214:
  1908                           
  1909                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1910     0611  0376               	decf	Lcd_Set_Cursor@a,w
  1911     0612  1D03               	btfss	3,2
  1912     0613  2E15               	goto	u661
  1913     0614  2E16               	goto	u660
  1914     0615                     u661:
  1915     0615  2E33               	goto	l1224
  1916     0616                     u660:
  1917     0616                     l1216:
  1918                           
  1919                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1920     0616  0874               	movf	Lcd_Set_Cursor@b,w
  1921     0617  3E7F               	addlw	127
  1922     0618  00F9               	movwf	Lcd_Set_Cursor@temp
  1923                           
  1924                           ;LCD.c: 52:         z = temp >> 4;
  1925     0619  0879               	movf	Lcd_Set_Cursor@temp,w
  1926     061A  00F5               	movwf	??_Lcd_Set_Cursor
  1927     061B  3004               	movlw	4
  1928     061C                     u675:
  1929     061C  1003               	clrc
  1930     061D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1931     061E  3EFF               	addlw	-1
  1932     061F  1D03               	skipz
  1933     0620  2E1C               	goto	u675
  1934     0621  0875               	movf	??_Lcd_Set_Cursor,w
  1935     0622  00F7               	movwf	Lcd_Set_Cursor@z
  1936     0623                     l1218:
  1937                           
  1938                           ;LCD.c: 53:         y = temp & 0x0F;
  1939     0623  0879               	movf	Lcd_Set_Cursor@temp,w
  1940     0624  390F               	andlw	15
  1941     0625  00F8               	movwf	Lcd_Set_Cursor@y
  1942     0626                     l1220:
  1943                           
  1944                           ;LCD.c: 54:         Lcd_Cmd(z);
  1945     0626  0877               	movf	Lcd_Set_Cursor@z,w
  1946     0627  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  1947     062C                     l1222:
  1948                           
  1949                           ;LCD.c: 55:         Lcd_Cmd(y);
  1950     062C  0878               	movf	Lcd_Set_Cursor@y,w
  1951     062D  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  1952                           
  1953                           ;LCD.c: 56:     } else if (a == 2) {
  1954     0632  2E55               	goto	l148
  1955     0633                     l1224:
  1956     0633  3002               	movlw	2
  1957     0634  0676               	xorwf	Lcd_Set_Cursor@a,w
  1958     0635  1D03               	btfss	3,2
  1959     0636  2E38               	goto	u681
  1960     0637  2E39               	goto	u680
  1961     0638                     u681:
  1962     0638  2E55               	goto	l148
  1963     0639                     u680:
  1964     0639                     l1226:
  1965                           
  1966                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1967     0639  0874               	movf	Lcd_Set_Cursor@b,w
  1968     063A  3EBF               	addlw	191
  1969     063B  00F9               	movwf	Lcd_Set_Cursor@temp
  1970                           
  1971                           ;LCD.c: 58:         z = temp >> 4;
  1972     063C  0879               	movf	Lcd_Set_Cursor@temp,w
  1973     063D  00F5               	movwf	??_Lcd_Set_Cursor
  1974     063E  3004               	movlw	4
  1975     063F                     u695:
  1976     063F  1003               	clrc
  1977     0640  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1978     0641  3EFF               	addlw	-1
  1979     0642  1D03               	skipz
  1980     0643  2E3F               	goto	u695
  1981     0644  0875               	movf	??_Lcd_Set_Cursor,w
  1982     0645  00F7               	movwf	Lcd_Set_Cursor@z
  1983     0646                     l1228:
  1984                           
  1985                           ;LCD.c: 59:         y = temp & 0x0F;
  1986     0646  0879               	movf	Lcd_Set_Cursor@temp,w
  1987     0647  390F               	andlw	15
  1988     0648  00F8               	movwf	Lcd_Set_Cursor@y
  1989     0649                     l1230:
  1990                           
  1991                           ;LCD.c: 60:         Lcd_Cmd(z);
  1992     0649  0877               	movf	Lcd_Set_Cursor@z,w
  1993     064A  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  1994     064F                     l1232:
  1995                           
  1996                           ;LCD.c: 61:         Lcd_Cmd(y);
  1997     064F  0878               	movf	Lcd_Set_Cursor@y,w
  1998     0650  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  1999     0655                     l148:
  2000     0655  0008               	return
  2001     0656                     __end_of_Lcd_Set_Cursor:
  2002                           
  2003                           	psect	text9
  2004     0656                     __ptext9:	
  2005 ;; *************** function _Lcd_Init *****************
  2006 ;; Defined at:
  2007 ;;		line 65 in file "LCD.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          2       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 2
  2028 ;; This function calls:
  2029 ;;		_Lcd_Cmd
  2030 ;;		_Lcd_Port
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036     0656                     _Lcd_Init:	
  2037                           ;psect for function _Lcd_Init
  2038                           
  2039     0656                     l1200:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2042                           
  2043                           
  2044                           ;LCD.c: 66:     Lcd_Port(0x00);
  2045     0656  3000               	movlw	0
  2046     0657  120A  118A  24F9  120A  118A  	fcall	_Lcd_Port
  2047     065C                     l1202:
  2048                           
  2049                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2050     065C  3034               	movlw	52
  2051     065D  00F5               	movwf	??_Lcd_Init+1
  2052     065E  30F1               	movlw	241
  2053     065F  00F4               	movwf	??_Lcd_Init
  2054     0660                     u837:
  2055     0660  0BF4               	decfsz	??_Lcd_Init,f
  2056     0661  2E60               	goto	u837
  2057     0662  0BF5               	decfsz	??_Lcd_Init+1,f
  2058     0663  2E60               	goto	u837
  2059     0664  2E65               	nop2
  2060     0665                     l1204:
  2061                           
  2062                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2063     0665  3003               	movlw	3
  2064     0666  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2065                           
  2066                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2067     066B  300D               	movlw	13
  2068     066C  00F5               	movwf	??_Lcd_Init+1
  2069     066D  30FB               	movlw	251
  2070     066E  00F4               	movwf	??_Lcd_Init
  2071     066F                     u847:
  2072     066F  0BF4               	decfsz	??_Lcd_Init,f
  2073     0670  2E6F               	goto	u847
  2074     0671  0BF5               	decfsz	??_Lcd_Init+1,f
  2075     0672  2E6F               	goto	u847
  2076     0673  2E74               	nop2
  2077     0674                     l1206:
  2078                           
  2079                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2080     0674  3003               	movlw	3
  2081     0675  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2082     067A                     l1208:
  2083                           
  2084                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2085     067A  3085               	movlw	133
  2086     067B  00F4               	movwf	??_Lcd_Init
  2087     067C                     u857:
  2088     067C  0BF4               	decfsz	??_Lcd_Init,f
  2089     067D  2E7C               	goto	u857
  2090                           
  2091                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2092     067E  3003               	movlw	3
  2093     067F  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2094                           
  2095                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  2096     0684  3002               	movlw	2
  2097     0685  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2098                           
  2099                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2100     068A  3002               	movlw	2
  2101     068B  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2102                           
  2103                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  2104     0690  3008               	movlw	8
  2105     0691  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2106                           
  2107                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  2108     0696  3000               	movlw	0
  2109     0697  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2110                           
  2111                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  2112     069C  300C               	movlw	12
  2113     069D  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2114                           
  2115                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  2116     06A2  3000               	movlw	0
  2117     06A3  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2118                           
  2119                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  2120     06A8  3006               	movlw	6
  2121     06A9  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2122     06AE                     l1210:
  2123                           
  2124                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  2125     06AE  3042               	movlw	66
  2126     06AF  00F4               	movwf	??_Lcd_Init
  2127     06B0                     u867:
  2128     06B0  0BF4               	decfsz	??_Lcd_Init,f
  2129     06B1  2EB0               	goto	u867
  2130     06B2  0000               	nop
  2131     06B3                     l151:
  2132     06B3  0008               	return
  2133     06B4                     __end_of_Lcd_Init:
  2134                           
  2135                           	psect	text10
  2136     048B                     __ptext10:	
  2137 ;; *************** function _Lcd_Clear *****************
  2138 ;; Defined at:
  2139 ;;		line 43 in file "LCD.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 2
  2160 ;; This function calls:
  2161 ;;		_Lcd_Cmd
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167     048B                     _Lcd_Clear:	
  2168                           ;psect for function _Lcd_Clear
  2169                           
  2170     048B                     l1212:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2173                           
  2174                           
  2175                           ;LCD.c: 44:     Lcd_Cmd(0);
  2176     048B  3000               	movlw	0
  2177     048C  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2178                           
  2179                           ;LCD.c: 45:     Lcd_Cmd(1);
  2180     0491  3001               	movlw	1
  2181     0492  120A  118A  24A6  120A  118A  	fcall	_Lcd_Cmd
  2182     0497                     l142:
  2183     0497  0008               	return
  2184     0498                     __end_of_Lcd_Clear:
  2185                           
  2186                           	psect	text11
  2187     04A6                     __ptext11:	
  2188 ;; *************** function _Lcd_Cmd *****************
  2189 ;; Defined at:
  2190 ;;		line 35 in file "LCD.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  a               1    wreg     unsigned char 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  a               1    3[COMMON] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         0       0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0
  2206 ;;      Temps:          2       0       0       0       0
  2207 ;;      Totals:         3       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 1
  2211 ;; This function calls:
  2212 ;;		_Lcd_Port
  2213 ;; This function is called by:
  2214 ;;		_Lcd_Clear
  2215 ;;		_Lcd_Set_Cursor
  2216 ;;		_Lcd_Init
  2217 ;;		_Lcd_Shift_Right
  2218 ;;		_Lcd_Shift_Left
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222     04A6                     _Lcd_Cmd:	
  2223                           ;psect for function _Lcd_Cmd
  2224                           
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2228                           ;Lcd_Cmd@a stored from wreg
  2229     04A6  00F3               	movwf	Lcd_Cmd@a
  2230     04A7                     l1094:
  2231                           
  2232                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  2233     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2234     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2235     04A9  1308               	bcf	8,6	;volatile
  2236     04AA                     l1096:
  2237                           
  2238                           ;LCD.c: 37:     Lcd_Port(a);
  2239     04AA  0873               	movf	Lcd_Cmd@a,w
  2240     04AB  120A  118A  24F9  120A  118A  	fcall	_Lcd_Port
  2241     04B0                     l1098:
  2242                           
  2243                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  2244     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2245     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2246     04B2  1788               	bsf	8,7	;volatile
  2247     04B3                     l1100:
  2248                           
  2249                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2250     04B3  300B               	movlw	11
  2251     04B4  00F2               	movwf	??_Lcd_Cmd+1
  2252     04B5  3062               	movlw	98
  2253     04B6  00F1               	movwf	??_Lcd_Cmd
  2254     04B7                     u877:
  2255     04B7  0BF1               	decfsz	??_Lcd_Cmd,f
  2256     04B8  2CB7               	goto	u877
  2257     04B9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2258     04BA  2CB7               	goto	u877
  2259     04BB  0000               	nop
  2260     04BC                     l1102:
  2261                           
  2262                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  2263     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2264     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2265     04BE  1388               	bcf	8,7	;volatile
  2266     04BF                     l139:
  2267     04BF  0008               	return
  2268     04C0                     __end_of_Lcd_Cmd:
  2269                           
  2270                           	psect	text12
  2271     04F9                     __ptext12:	
  2272 ;; *************** function _Lcd_Port *****************
  2273 ;; Defined at:
  2274 ;;		line 13 in file "LCD.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  a               1    wreg     unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  a               1    0[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         1       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         1       0       0       0       0
  2292 ;;Total ram usage:        1 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_Lcd_Cmd
  2298 ;;		_Lcd_Init
  2299 ;;		_Lcd_Write_Char
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     04F9                     _Lcd_Port:	
  2304                           ;psect for function _Lcd_Port
  2305                           
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _Lcd_Port: [wreg]
  2309                           ;Lcd_Port@a stored from wreg
  2310     04F9  00F0               	movwf	Lcd_Port@a
  2311     04FA                     l1070:
  2312                           
  2313                           ;LCD.c: 14:     if (a & 1)
  2314     04FA  1C70               	btfss	Lcd_Port@a,0
  2315     04FB  2CFD               	goto	u421
  2316     04FC  2CFE               	goto	u420
  2317     04FD                     u421:
  2318     04FD  2D02               	goto	l128
  2319     04FE                     u420:
  2320     04FE                     l1072:
  2321                           
  2322                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  2323     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2324     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2325     0500  1606               	bsf	6,4	;volatile
  2326     0501  2D05               	goto	l129
  2327     0502                     l128:	
  2328                           ;LCD.c: 16:     else
  2329                           
  2330                           
  2331                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  2332     0502  1283               	bcf	3,5	;RP0=0, select bank0
  2333     0503  1303               	bcf	3,6	;RP1=0, select bank0
  2334     0504  1206               	bcf	6,4	;volatile
  2335     0505                     l129:
  2336                           
  2337                           ;LCD.c: 19:     if (a & 2)
  2338     0505  1CF0               	btfss	Lcd_Port@a,1
  2339     0506  2D08               	goto	u431
  2340     0507  2D09               	goto	u430
  2341     0508                     u431:
  2342     0508  2D0B               	goto	l130
  2343     0509                     u430:
  2344     0509                     l1074:
  2345                           
  2346                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  2347     0509  1686               	bsf	6,5	;volatile
  2348     050A  2D0C               	goto	l131
  2349     050B                     l130:	
  2350                           ;LCD.c: 21:     else
  2351                           
  2352                           
  2353                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  2354     050B  1286               	bcf	6,5	;volatile
  2355     050C                     l131:
  2356                           
  2357                           ;LCD.c: 24:     if (a & 4)
  2358     050C  1D70               	btfss	Lcd_Port@a,2
  2359     050D  2D0F               	goto	u441
  2360     050E  2D10               	goto	u440
  2361     050F                     u441:
  2362     050F  2D12               	goto	l132
  2363     0510                     u440:
  2364     0510                     l1076:
  2365                           
  2366                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  2367     0510  1706               	bsf	6,6	;volatile
  2368     0511  2D13               	goto	l133
  2369     0512                     l132:	
  2370                           ;LCD.c: 26:     else
  2371                           
  2372                           
  2373                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  2374     0512  1306               	bcf	6,6	;volatile
  2375     0513                     l133:
  2376                           
  2377                           ;LCD.c: 29:     if (a & 8)
  2378     0513  1DF0               	btfss	Lcd_Port@a,3
  2379     0514  2D16               	goto	u451
  2380     0515  2D17               	goto	u450
  2381     0516                     u451:
  2382     0516  2D19               	goto	l134
  2383     0517                     u450:
  2384     0517                     l1078:
  2385                           
  2386                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  2387     0517  1786               	bsf	6,7	;volatile
  2388     0518  2D1A               	goto	l136
  2389     0519                     l134:	
  2390                           ;LCD.c: 31:     else
  2391                           
  2392                           
  2393                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  2394     0519  1386               	bcf	6,7	;volatile
  2395     051A                     l136:
  2396     051A  0008               	return
  2397     051B                     __end_of_Lcd_Port:
  2398                           
  2399                           	psect	text13
  2400     0498                     __ptext13:	
  2401 ;; *************** function _I2C_Write *****************
  2402 ;; Defined at:
  2403 ;;		line 64 in file "i2c.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  data            1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  data            1    0[COMMON] unsigned char 
  2408 ;;  b_ok            2    0        short 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2   54[None  ] short 
  2411 ;; Registers used:
  2412 ;;		wreg
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431     0498                     _I2C_Write:	
  2432                           ;psect for function _I2C_Write
  2433                           
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _I2C_Write: [wreg]
  2437                           ;I2C_Write@data stored from wreg
  2438     0498  00F0               	movwf	I2C_Write@data
  2439     0499                     l1176:
  2440                           
  2441                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  2442     0499  0870               	movf	I2C_Write@data,w
  2443     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2444     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2445     049C  0093               	movwf	19	;volatile
  2446     049D                     l55:	
  2447                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  2448                           
  2449     049D  1D8C               	btfss	12,3	;volatile
  2450     049E  2CA0               	goto	u641
  2451     049F  2CA1               	goto	u640
  2452     04A0                     u641:
  2453     04A0  2C9D               	goto	l55
  2454     04A1                     u640:
  2455     04A1                     l57:
  2456                           
  2457                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  2458     04A1  118C               	bcf	12,3	;volatile
  2459     04A2                     l1178:
  2460     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2461     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2462     04A4  0811               	movf	17,w	;volatile
  2463     04A5                     l58:
  2464     04A5  0008               	return
  2465     04A6                     __end_of_I2C_Write:
  2466                           
  2467                           	psect	text14
  2468     0476                     __ptext14:	
  2469 ;; *************** function _I2C_Stop *****************
  2470 ;; Defined at:
  2471 ;;		line 34 in file "i2c.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		None
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         0       0       0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498     0476                     _I2C_Stop:	
  2499                           ;psect for function _I2C_Stop
  2500                           
  2501     0476                     l1174:	
  2502                           ;incstack = 0
  2503                           ; Regs used in _I2C_Stop: []
  2504                           
  2505                           
  2506                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  2507     0476  1683               	bsf	3,5	;RP0=1, select bank1
  2508     0477  1303               	bcf	3,6	;RP1=0, select bank1
  2509     0478  1511               	bsf	17,2	;volatile
  2510     0479                     l31:	
  2511                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  2512                           
  2513     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2514     047A  1D8C               	btfss	12,3	;volatile
  2515     047B  2C7D               	goto	u631
  2516     047C  2C7E               	goto	u630
  2517     047D                     u631:
  2518     047D  2C79               	goto	l31
  2519     047E                     u630:
  2520     047E                     l33:
  2521                           
  2522                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  2523     047E  118C               	bcf	12,3	;volatile
  2524     047F                     l34:
  2525     047F  0008               	return
  2526     0480                     __end_of_I2C_Stop:
  2527                           
  2528                           	psect	text15
  2529     046C                     __ptext15:	
  2530 ;; *************** function _I2C_Start *****************
  2531 ;; Defined at:
  2532 ;;		line 27 in file "i2c.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		None
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     046C                     _I2C_Start:	
  2560                           ;psect for function _I2C_Start
  2561                           
  2562     046C                     l1172:	
  2563                           ;incstack = 0
  2564                           ; Regs used in _I2C_Start: []
  2565                           
  2566                           
  2567                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  2568     046C  1683               	bsf	3,5	;RP0=1, select bank1
  2569     046D  1303               	bcf	3,6	;RP1=0, select bank1
  2570     046E  1411               	bsf	17,0	;volatile
  2571     046F                     l25:	
  2572                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  2573                           
  2574     046F  1283               	bcf	3,5	;RP0=0, select bank0
  2575     0470  1D8C               	btfss	12,3	;volatile
  2576     0471  2C73               	goto	u621
  2577     0472  2C74               	goto	u620
  2578     0473                     u621:
  2579     0473  2C6F               	goto	l25
  2580     0474                     u620:
  2581     0474                     l27:
  2582                           
  2583                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  2584     0474  118C               	bcf	12,3	;volatile
  2585     0475                     l28:
  2586     0475  0008               	return
  2587     0476                     __end_of_I2C_Start:
  2588                           
  2589                           	psect	text16
  2590     0480                     __ptext16:	
  2591 ;; *************** function _I2C_Read *****************
  2592 ;; Defined at:
  2593 ;;		line 73 in file "i2c.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      unsigned char 
  2600 ;; Registers used:
  2601 ;;		wreg
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620     0480                     _I2C_Read:	
  2621                           ;psect for function _I2C_Read
  2622                           
  2623     0480                     l1182:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _I2C_Read: [wreg]
  2626                           
  2627                           
  2628                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  2629     0480  1683               	bsf	3,5	;RP0=1, select bank1
  2630     0481  1303               	bcf	3,6	;RP1=0, select bank1
  2631     0482  1591               	bsf	17,3	;volatile
  2632     0483                     l61:	
  2633                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  2634                           
  2635     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2636     0484  1D8C               	btfss	12,3	;volatile
  2637     0485  2C87               	goto	u651
  2638     0486  2C88               	goto	u650
  2639     0487                     u651:
  2640     0487  2C83               	goto	l61
  2641     0488                     u650:
  2642     0488                     l63:
  2643                           
  2644                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  2645     0488  118C               	bcf	12,3	;volatile
  2646     0489                     l1184:
  2647                           
  2648                           ;i2c.c: 78:     return SSPBUF;
  2649     0489  0813               	movf	19,w	;volatile
  2650     048A                     l64:
  2651     048A  0008               	return
  2652     048B                     __end_of_I2C_Read:
  2653     007E                     btemp	set	126	;btemp
  2654     007E                     wtemp0	set	126
  2655                           
  2656                           	psect	idloc
  2657                           
  2658                           ;Config register IDLOC0 @ 0x2000
  2659                           ;	unspecified, using default values
  2660     2000                     	org	8192
  2661     2000  3FFF               	dw	16383
  2662                           
  2663                           ;Config register IDLOC1 @ 0x2001
  2664                           ;	unspecified, using default values
  2665     2001                     	org	8193
  2666     2001  3FFF               	dw	16383
  2667                           
  2668                           ;Config register IDLOC2 @ 0x2002
  2669                           ;	unspecified, using default values
  2670     2002                     	org	8194
  2671     2002  3FFF               	dw	16383
  2672                           
  2673                           ;Config register IDLOC3 @ 0x2003
  2674                           ;	unspecified, using default values
  2675     2003                     	org	8195
  2676     2003  3FFF               	dw	16383
  2677                           
  2678                           	psect	config
  2679                           
  2680                           ;Config register CONFIG1 @ 0x2007
  2681                           ;	Oscillator Selection bits
  2682                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2683                           ;	Watchdog Timer Enable bit
  2684                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2685                           ;	Power-up Timer Enable bit
  2686                           ;	PWRTE = OFF, PWRT disabled
  2687                           ;	RE3/MCLR pin function select bit
  2688                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2689                           ;	Code Protection bit
  2690                           ;	CP = OFF, Program memory code protection is disabled
  2691                           ;	Data Code Protection bit
  2692                           ;	CPD = OFF, Data memory code protection is disabled
  2693                           ;	Brown Out Reset Selection bits
  2694                           ;	BOREN = OFF, BOR disabled
  2695                           ;	Internal External Switchover bit
  2696                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2697                           ;	Fail-Safe Clock Monitor Enabled bit
  2698                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2699                           ;	Low Voltage Programming Enable bit
  2700                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2701                           ;	In-Circuit Debugger Mode bit
  2702                           ;	DEBUG = 0x1, unprogramme  2703     2007                     	org	8199
  2704     2007  20D4               	dw	8404
  2705                           
  2706                           ;Config register CONFIG2 @ 0x2008
  2707                           ;	Brown-out Reset Selection bit
  2708                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2709                           ;	Flash Program Memory Self Write Enable bits
  2710                           ;	WRT = OFF, Write protection off
  2711     2008                     	org	8200
  2712     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2566
                                             13 BANK0      2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 15:42:15 2023

                       pc 0002                        l22 04F8                        l31 0479  
                      l25 046F                        l33 047E                        l34 047F  
                      l27 0474                        l28 0475                        l61 0483  
                      l63 0488                        l55 049D                        l64 048A  
                      l57 04A1                        l58 04A5                        fsr 0004  
                     l130 050B                       l131 050C                       l132 0512  
                     l133 0513                       l134 0519                       l142 0497  
                     l151 06B3                       l119 04D9                       l136 051A  
                     l128 0502                       l160 05CB                       l129 0505  
                     l154 054F                       l139 04BF                       l148 0655  
                     l276 07F2                       l552 060F                       l562 0589  
                     u420 04FE                       u421 04FD                       u430 0509  
                     u510 05E6                       u431 0508                       u511 05E5  
                     u440 0510                       u441 050F                       u505 05D8  
                     u450 0517                       u530 05F7                       u610 0585  
                     u451 0516                       u531 05F6                       u611 0584  
                     u620 0474                       u700 0597                       u460 04EE  
                     u621 0473                       u461 04ED                       u525 05E7  
                     u605 0579                       u630 047E                       u710 05B9  
                     u470 04F6                       u550 060B                       u631 047D  
                     u471 04F5                       u551 060A                       u535 05F3  
                     u640 04A1                       u720 05CB                       u560 0556  
                     u641 04A0                       u721 05CA                       u545 05FF  
                     u561 0555                       u650 0488                       u490 05D4  
                     u730 0725                       u651 0487                       u491 05D3  
                     u731 0724                       u660 0616                       u580 0568  
                     u740 075D                       u661 0615                       u485 0528  
                     u581 0567                       u741 075C                       u590 0572  
                     u750 0783                       u591 0571                       u575 055A  
                     u751 0782                       u807 0712                       u680 0639  
                     u760 078E                       u681 0638                       u817 0538  
                     u761 078D                       u770 0794                       u675 061C  
                     u827 0549                       u595 056E                       u771 0793  
                     u755 077F                       u780 07DE                       u837 0660  
                     u781 07DD                       u790 07EE                       u847 066F  
                     u695 063F                       u791 07ED                       u857 067C  
                     u867 06B0                       u877 04B7                       fsr0 0004  
                     indf 0000                      l1100 04B3                      l1102 04BC  
                    l1110 0533                      l1200 0656                      l1120 0547  
                    l1112 0536                      l1104 051C                      l1210 06AE  
                    l1202 065C                      l1122 054C                      l1114 053B  
                    l1106 0522                      l1130 05D7                      l1212 048B  
                    l1204 0665                      l1220 0626                      l1116 053E  
                    l1108 0525                      l1140 05FD                      l1132 05DE  
                    l1124 05CC                      l1070 04FA                      l1206 0674  
                    l1230 0649                      l1222 062C                      l1214 0611  
                    l1118 0544                      l1142 05FE                      l1134 05E2  
                    l1126 05CE                      l1150 0550                      l1310 06D9  
                    l1072 04FE                      l1208 067A                      l1232 064F  
                    l1216 0616                      l1224 0633                      l1240 05AF  
                    l1080 04DB                      l1144 0605                      l1136 05E6  
                    l1128 05D4                      l1160 0568                      l1152 0556  
                    l1320 0709                      l1312 06DF                      l1304 06B4  
                    l1074 0509                      l1226 0639                      l1218 0623  
                    l1234 058A                      l1090 04F1                      l1082 04DF  
                    l1138 05F7                      l1146 060B                      l1162 0572  
                    l1154 0559                      l1250 072F                      l1242 071C  
                    l1322 070E                      l1314 06E7                      l1306 06CB  
                    l1172 046C                      l1076 0510                      l1228 0646  
                    l1236 058D                      l1092 04F6                      l1084 04E5  
                    l1164 0578                      l1156 0560                      l1260 0759  
                    l1244 071F                      l1316 06EF                      l1308 06D4  
                    l1182 0480                      l1174 0476                      l1078 0517  
                    l1094 04A7                      l1238 05A9                      l1086 04E8  
                    l1190 04CD                      l1166 057F                      l1158 0564  
                    l1262 075D                      l1254 0730                      l1246 0725  
                    l1318 0700                      l1184 0489                      l1176 0499  
                    l1096 04AA                      l1088 04EE                      l1192 04D0  
                    l1168 0585                      l1280 0794                      l1272 0768  
                    l1264 0761                      l1256 074D                      l1248 072A  
                    l1178 04A2                      l1098 04B0                      l1194 04D1  
                    l1290 07D1                      l1282 0799                      l1266 0766  
                    l1258 0755                      l1196 04D2                      l1188 04C0  
                    l1292 07D5                      l1284 079D                      l1276 0784  
                    l1348 0742                      l1198 04D3                      l1286 07A0  
                    l1278 078E                      l1294 07DE                      l1288 07CC  
                    l1296 07EE                      STR_1 001D                      STR_2 0021  
       ?_Lcd_Write_String 0075                      _main 06B4          __end_of_I2C_Read 048B  
                    btemp 007E          __end_of_I2C_Stop 0480                      start 0000  
      ??_Lcd_Write_String 0077          ?_I2C_Init_Master 0070           __end_of_Lcd_Cmd 04C0  
                   ?_main 0070                     _ANSEL 0188           __end_of___lwdiv 0610  
         __end_of___lwmod 058A                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
         __end_of_dpowers 001D                     _setup 04C0         __end_of_I2C_Start 0476  
       __end_of_I2C_Write 04A6                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07F3          __end_of_Lcd_Init 06B4  
        __end_of_Lcd_Port 051B           __initialization 07F3              __end_of_main 0719  
                  ??_main 0042                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _buffer 0021                 ?_I2C_Read 0070                 ?_I2C_Stop 0070  
               ??_sprintf 0038           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0498            __pcstackCOMMON 0070             __end_of_setup 04DA  
          _Lcd_Set_Cursor 0610                ??_I2C_Read 0070                ??_I2C_Stop 0070  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0071  
              __pbssBANK0 0020                __pmaintext 06B4    __end_of_Lcd_Set_Cursor 0656  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 051B  
                 _Lcd_Cmd 04A6                 _I2C_Start 046C                 _I2C_Write 0498  
                 ___lwdiv 05CC                   ___lwmod 0550           ?_Lcd_Set_Cursor 0074  
                 __ptext1 0719                   __ptext2 0550                   __ptext3 05CC  
                 __ptext4 04C0                   __ptext5 04DA                   __ptext6 058A  
                 __ptext7 051B                   __ptext8 0610                   __ptext9 0656  
                 _dpowers 0013                   _sprintf 0719                   clrloop0 0465  
                 _voltaje 0020    __end_of_Lcd_Write_Char 0550      end_of_initialization 07FC  
              ?_I2C_Start 0070                ?_I2C_Write 0070                 Lcd_Port@a 0070  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
               _Lcd_Clear 048B          _Lcd_Write_String 058A       start_initialization 07F3  
       ??_I2C_Init_Master 0070     I2C_Init_Master@sp_i2c 0070               ??_I2C_Start 0070  
             ??_I2C_Write 0070                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0035  
                ?_Lcd_Cmd 0070               sprintf@flag 003C               sprintf@prec 003D  
        ___lwdiv@dividend 0072          ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070  
                ?___lwmod 0078                 __pstrings 0003                  _I2C_Read 0480  
                _I2C_Stop 0476          ___lwdiv@quotient 0075                  ?_sprintf 0035  
               clear_ram0 0464                  Lcd_Cmd@a 0073                  _PIR1bits 000C  
             ??_Lcd_Clear 0074               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0656                  _Lcd_Port 04F9  __end_of_Lcd_Write_String 05CC  
         _I2C_Init_Master 04DA             I2C_Write@data 0070        __end_of__stringtab 0013  
              sprintf@val 003E           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 048B                  __ptext11 04A6                  __ptext12 04F9  
                __ptext13 0498                  __ptext14 0476                  __ptext15 046C  
                __ptext16 0480        Lcd_Write_Char@temp 0072                 sprintf@ap 003B  
               sprintf@sp 0040          ___lwmod@dividend 007A   __end_of_I2C_Init_Master 04F9  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                sprintf@c 0041                  sprintf@f 0035           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
             _SSPCON2bits 0091  
